(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    684973,      14969]
NotebookOptionsPosition[    671330,      14767]
NotebookOutlinePosition[    671822,      14785]
CellTagsIndexPosition[    671779,      14782]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "SolutionsX`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8688784464722557`*^9, 3.868878449929863*^9}, 
   3.868878912689629*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"f6bc8600-a2ed-415a-8238-4911c99d6bce"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904419593*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d13fdb94-8484-4728-8a3e-c0e890b0361c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.3", ", ", {2015, 8, 23}],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.86893890442831*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"060844f1-49bb-4a15-a088-849910ca3e54"],

Cell[BoxData["\<\"CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904430979*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"0f44897b-4337-450b-9e73-303f950cda1a"],

Cell[BoxData["\<\"Connecting to external linux executable...\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389045569963`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1e920516-ed4e-486c-9ff1-519d7a37559f"],

Cell[BoxData["\<\"Connection established.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389045923843`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"0dbcf3cf-d907-443b-8034-ec69b04be239"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904594245*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"cdce0661-814c-4e2c-af3d-43bd51374b50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTensor`  version ", "1.1.5", ", ", {2021, 2, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389045958567`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bca2b1cb-754f-4f6f-a0ab-74a8129dbbc2"],

Cell[BoxData["\<\"CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904597559*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3036ebc9-f069-449f-8a00-ed45a2e8d3f1"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389048910303`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c214d8f2-56e4-4b32-b652-721f15cd52fe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPert`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.0.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xPert`  version ", "1.0.6", ", ", {2018, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904893255*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"5c4ecd0d-0af0-4a32-9195-457a2d46ae60"],

Cell[BoxData["\<\"CopyRight (C) 2005-2020, David Brizuela, Jose M. \
Martin-Garcia and Guillermo A. Mena Marugan, under the General Public \
License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904895249*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"de98b5d2-41ea-442d-beb6-3404ea29b53d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$PrePrint", 
   "\[InvisibleSpace]", "\<\" assigned value \"\>", "\[InvisibleSpace]", 
   "ScreenDollarIndices"}],
  SequenceForm[
  "** Variable ", $PrePrint, " assigned value ", 
   xAct`xTensor`ScreenDollarIndices],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904918642*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2700ec82-d4e4-4798-99a5-96c2cb4ebcb3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>", "\[InvisibleSpace]", "\<\" to \"\>",
    "\[InvisibleSpace]", "\<\"Postfix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Prefix", 
   " to ", "Postfix"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904920977*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4f4221c2-bc74-4a17-a718-358008cd33d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "AllowUpperDerivatives", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "ContractMetric",
    "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`AllowUpperDerivatives, " of ", 
   xAct`xTensor`ContractMetric, " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904923008*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"7063daf4-21bd-4a36-8743-057bff92b5b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "MetricOn", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "None",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "All"}],
  SequenceForm[
  "** Option ", xAct`xTensor`MetricOn, " of ", xAct`xTensor`MakeRule, 
   " changed from ", None, " to ", All],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904924922*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b0e09c24-cde6-4f66-a0f0-b17825b97313"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "ContractMetrics", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`ContractMetrics, " of ", xAct`xTensor`MakeRule, 
   " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904926887*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9bed47fa-629d-49a6-83e9-40ace2e4dd26"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.86893890496612*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"792c4544-5528-4c4f-9ffa-1139bfc23fc2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`Invar`  version \"\>", 
   "\[InvisibleSpace]", "\<\"2.0.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`Invar`  version ", "2.0.5", ", ", {2013, 7, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904977948*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"00df0322-1a0e-40af-b357-4e20d58a5dc2"],

Cell[BoxData["\<\"CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes \
and R. Portugal, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904979424*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d28a8cce-73be-4c37-a1a1-0e6005f6349f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "sigma", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`sigma, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938904996912*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"dcb23f80-0088-4b82-b70c-0e50eb20b2bd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "dim", "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`dim, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389049999323`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b2070c38-1eaa-47f7-8bf2-52763fed56a7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "True",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", True, " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905002235*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8618f1be-18b1-41c1-b724-fa7eafb307e4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "True", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", True,
    " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905004458*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3cd0a9e2-1356-47c3-8a1c-93b1621d013c"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389050569363`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"29c75a13-6301-423e-a160-501dd41ef118"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xCoba`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xCoba`  version ", "0.8.6", ", ", {2021, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905059558*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"081da51d-26a2-4091-a068-ca50a685fe5f"],

Cell[BoxData["\<\"CopyRight (C) 2005-2021, David Yllanes and Jose M. \
Martin-Garcia, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905061756*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"97031f01-fab9-4d20-a4c3-d38938366600"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905645949*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b9bfd723-60f1-4346-b871-c2cafcbcd4a1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`SymManipulator`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.4\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "11", ",", "29"}], "}"}]}],
  SequenceForm[
  "Package xAct`SymManipulator`  version ", "0.9.4", ", ", {2016, 11, 29}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905647922*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"28c32fd8-7040-4587-b1b1-0e7e3296d9b3"],

Cell[BoxData["\<\"CopyRight (C) 2011-2016, Thomas B\[ADoubleDot]ckdahl, under \
the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389056494913`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e2432312-cd30-480a-9807-b39ac733fc89"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905725594*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"135bb8e2-275e-4077-a156-bf59c8e840af"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTras`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "10", ",", "30"}], "}"}]}],
  SequenceForm["Package xAct`xTras`  version ", "1.4.2", ", ", {2014, 10, 30}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389057275476`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fde5fa3f-8a83-466c-b835-d91722204083"],

Cell[BoxData["\<\"CopyRight (C) 2012-2014, Teake Nutma, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905729045*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"0c81a702-c076-4d7d-9e83-ad0ea3405dd2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Postfix\"\>", 
   "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Postfix", 
   " to ", "Prefix"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938905730459*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3ce65884-809d-4b92-8af4-c66f3f4746e8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389057321997`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a60c701c-3619-48f2-97f6-6f5c08f809aa"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.86893890631775*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"690d1d38-2d94-4468-b29a-b9344dc02993"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`TexAct`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "19"}], "}"}]}],
  SequenceForm["Package xAct`TexAct`  version ", "0.4.2", ", ", {2021, 2, 19}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906319673*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"97e1f753-be2c-4e3b-93f3-65d70d2553dc"],

Cell[BoxData["\<\"CopyRight (C) 2008-2021, Thomas B\[ADoubleDot]ckdahl, Jose \
M. Martin-Garcia and Barry Wardell, under the General Public License.\"\>"], \
"Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906321249*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9f47fc76-7915-4e10-9688-784c01716068"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906442576*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e99ba5fe-1aeb-487c-bb7f-52e4c90d4303"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`FieldsX` version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "5", ",", "27"}], "}"}]}],
  SequenceForm["Package xAct`FieldsX` version ", "1.1.3", ", ", {2021, 5, 27}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906445265*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bb2056d2-8294-499b-b50d-a3cd86f72839"],

Cell[BoxData["\<\"Copyright \[Copyright] 2019-2021 Markus B. Fr\[ODoubleDot]b \
under the GNU General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906447419*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9ff7e5b0-560b-41e9-98e8-f32e51939677"],

Cell[BoxData["\<\"FieldsX uses the Multisets package \[Copyright] 2011 David \
Bevan under the Wolfram Library Archive License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906449498*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9c23cf18-257b-48c1-86c6-8d45cf7308b1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "False", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", 
   False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906475445*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1eab56bf-8640-4693-8f46-9f87489135bb"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906681617*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"757dcd1f-8a11-42a1-83b4-84a3951aacb3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2019", ",", "5", ",", "17"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTerior`  version ", "0.9.1", ", ", {2019, 5, 17}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906683988*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"56245edc-7436-4d23-8dc8-3e94fa74c25f"],

Cell[BoxData["\<\"CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and \
Leo C. Stein, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906685897*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e1e36143-4da2-414f-83b2-df97580a5693"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389067269287`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4be8c756-8f4b-4fbf-87af-0b3056d4f148"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package SolutionsX`SolutionsX`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.0.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2022", ",", "3", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package SolutionsX`SolutionsX`  version ", "0.0.1", ", ", {2022, 3, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389067288227`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"dea8c59a-bbac-4f16-b0be-4f8f621129a2"],

Cell[BoxData["\<\"Copyright (C) 2022, Vasil Dimitrov, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.8689389067303247`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1aa71147-818c-4e4d-9442-d1cba7a49688"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906731516*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1fafa20b-4ff1-4f08-aab6-0353472cfd6e"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906732602*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"385ca381-9c28-4424-a6ac-3ffa618bef26"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.868878924811591*^9, 3.8688804078849077`*^9, 3.868883729604082*^9, {
   3.8688839863067303`*^9, 3.868884006428289*^9}, 3.868884421231316*^9, 
   3.86888544937366*^9, 3.868938906734311*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3566ba3c-b69a-46b1-a220-8439ce77c976"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On-shell action (holographic renormalization)", "Section",
 CellChangeTimes->{{3.868806949991003*^9, 
  3.868806962009569*^9}},ExpressionUUID->"1a00f0f3-b14c-46b4-8016-\
149f8b545572"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Boundary calculation", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.86888484240077*^9, 
  3.868884846082594*^9}},ExpressionUUID->"1c068e54-c9c3-4cca-94c4-\
7f588b8df65f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{"CCLP", ",", "Boundary", ",", "Hopf1", ",", "Euclidean"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8688069723056173`*^9, 3.868806987307757*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"63311f05-6304-43f2-8b72-d9d1ca66fa78"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"4\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"4\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868878985846737*^9, 3.868880410905878*^9, 
  3.8688837327831573`*^9, 3.8688840099370823`*^9, 3.868884442944858*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"24f236de-f44e-4795-8657-e36df7bec6f2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"b\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\
\\\", \\\",\\\", \\\"\[Alpha]\\\", \\\",\\\", \\\"\[CapitalXi]a\\\", \
\\\",\\\", \\\"\[CapitalXi]b\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \
\\\"r0\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"b\", \",\", \
\"m\", \",\", \"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \
\"\[CapitalXi]a\", \",\", \"\[CapitalXi]b\", \",\", \"Cx\", \",\", \"r0\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868878985846737*^9, 3.868880410905878*^9, 
  3.8688837327831573`*^9, 3.8688840099370823`*^9, 3.8688844429634247`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"7d275a19-7b5a-45fa-99f9-a210e1c558b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868878985846737*^9, 3.868880410905878*^9, 
  3.8688837327831573`*^9, 3.8688840099370823`*^9, 3.868884442966319*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"ee7ddb38-07cc-45f5-a761-b386eebfe05b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\", \\\",\\\", \\\"KK\\\"}], \\\"}\\\"}], TraditionalForm]\
\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Symmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\", \",\", \
\"KK\"}], \"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\", \",\", \
\"2\"}], \"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}], \",\", RowBox[{\"Symmetric\", \"[\", \
RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \"}\"}], \"]\"}]}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868878985846737*^9, 3.868880410905878*^9, 
  3.8688837327831573`*^9, 3.8688840099370823`*^9, 3.8688844429681396`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"953e011b-d37f-4ca7-b987-364c2140c1ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868878985846737*^9, 3.868880410905878*^9, 
  3.8688837327831573`*^9, 3.8688840099370823`*^9, 3.868884443356895*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"4f943128-c8bc-4c2b-834b-b4b550c83da8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\
\[Tau]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"c\[Eta]\\\", \\\"(\
\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"\[Xi]1\\\", \\\"(\\\", \\\")\\\"}], \
\\\",\\\", RowBox[{\\\"\[Xi]2\\\", \\\"(\\\", \\\")\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"\[Tau]\", \"(\", \")\
\"}], \",\", RowBox[{\"c\[Eta]\", \"(\", \")\"}], \",\", RowBox[{\"\[Xi]1\", \
\"(\", \")\"}], \",\", RowBox[{\"\[Xi]2\", \"(\", \")\"}]}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868878985846737*^9, 3.868880410905878*^9, 
  3.8688837327831573`*^9, 3.8688840099370823`*^9, 3.868884443535139*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"6624054a-a482-461a-8bd5-785ceda99f0c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Boundary/Hopf1/Euclidean/Default\\\\\\\"\\\"\
, TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Boundary/Hopf1/Euclidean/Default\\\"\", TraditionalForm]\
\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868878985846737*^9, 3.868880410905878*^9, 
  3.8688837327831573`*^9, 3.8688840099370823`*^9, 3.868884444625506*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"874ba16f-6bf9-4c9c-8830-6092c77ed28e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
  SqrtBox[
   RowBox[{"Detggcurved", "[", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToValues2", "@", "%"}], "/.", "ToCoord"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"srh", "=", 
  RowBox[{"Normal", "@", 
   RowBox[{"Simplify", "@", 
    RowBox[{"Series", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.868807388982511*^9, 3.868807397015486*^9}, {
  3.868807688319236*^9, 3.868807712879064*^9}, {3.8688081181089497`*^9, 
  3.868808127693534*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b9597f7c-07ab-44a8-96af-f3f5ef0d0f8f"],

Cell[BoxData[
 SqrtBox[
  InterpretationBox[
   StyleBox[
    OverscriptBox["g", 
     OverscriptBox[
      StyleBox["~",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["~",
       FontColor->RGBColor[1, 0, 0]]]],
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Boundary`Hopf1`Euclidean`Detggcurved[],
   Editable->False]]], "Output",
 CellChangeTimes->{3.8688844662445993`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"230bbd2a-05e8-4807-b78a-b1a0ead60920"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`a,
        Editable->False], "2"], "-", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`b,
        Editable->False], "2"]}], ")"}], " ", "c\[Eta]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], "-", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"]}], ")"}], " ", 
       SuperscriptBox["c\[Eta]", "4"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["c\[Eta]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`g,
     Editable->False], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"c\[Eta]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`r0,
      Editable->False], "2"]}], 
   RowBox[{"2", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`g,
     Editable->False], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"c\[Eta]", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`r0,
      Editable->False], "4"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.868884479640707*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"4faf15a6-298c-47c1-8573-133408c26d73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
  RowBox[{"KK", "[", 
   RowBox[{"\[ScriptA]", ",", 
    RowBox[{"-", "\[ScriptA]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToValues", "@", 
    RowBox[{"TraceBasisDummy", "@", "%"}]}], "/.", "ToCoord"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"hK", "=", 
  RowBox[{"Normal", "@", 
   RowBox[{"Simplify", "@", 
    RowBox[{"Series", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"r0", ",", "\[Infinity]", ",", "4"}], "}"}]}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.862165171494985*^9, 3.8621652287893553`*^9}, {
  3.8622234691335297`*^9, 3.86222348619153*^9}, {3.862223647801599*^9, 
  3.862223658270932*^9}, {3.862227476160768*^9, 3.862227477007579*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0b54b12e-46a6-4b2c-be2f-ee30c90592a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[GridBox[{
     {"K", 
      StyleBox[GridBox[{
         {
          StyleBox["\[ScriptA]",
           FontColor->RGBColor[1., 0., 0.]], " "},
         {" ", 
          StyleBox["\[ScriptA]",
           FontColor->RGBColor[1., 0., 0.]]}
        },
        GridBoxSpacings->{"Columns" -> {
            Offset[0.], {
             Offset[0.034999999999999996`]}, 
            Offset[0.]}, "Rows" -> {{
             Offset[0.]}}}],
       FontSize->Rational[39, 4]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.034999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   ShowAutoStyles->False,
   AutoSpacing->False],
  CCLP`Boundary`Hopf1`Euclidean`KK[{
   CCLP`Boundary`Hopf1`Euclidean`\[ScriptA], 
    CCLP`Boundary`Hopf1`Euclidean`curved}, {-
    CCLP`Boundary`Hopf1`Euclidean`\[ScriptA], -
    CCLP`Boundary`Hopf1`Euclidean`curved}],
  Editable->False]], "Output",
 CellChangeTimes->{3.868884479708502*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3bbc5a0c-0c4d-41df-9cbb-f7c1efba4230"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   InterpretationBox[
    StyleBox["g",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Boundary`Hopf1`Euclidean`g,
    Editable->False]}], "+", 
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`a,
       Editable->False], "2"], " ", 
     SuperscriptBox["c\[Eta]", "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`b,
       Editable->False], "4"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["c\[Eta]", "4"]}]}], ")"}], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], "4"]}], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`a,
       Editable->False], "4"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["c\[Eta]", "4"]}]}], ")"}], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], "4"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`b,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "4"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "2"]}], "-", 
       RowBox[{
        SuperscriptBox["c\[Eta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["a",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`a,
             Editable->False], "2"], " ", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["g",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`g,
             Editable->False], "2"]}]}], ")"}]}]}], ")"}]}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False], "3"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`r0,
      Editable->False], "4"]}]], "+", 
  FractionBox[
   RowBox[{
    FractionBox["1", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False]], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`a,
       Editable->False], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False]}], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`b,
       Editable->False], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False]}]}], 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["r0",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`r0,
     Editable->False], "2"]]}]], "Output",
 CellChangeTimes->{3.868884500115149*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"881c2eae-e6c7-44b6-816e-1aa567e8d960"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
  RowBox[{"RicciScalarcd", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToValues2", "@", "%"}], "/.", "ToCoord"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"R", "=", 
  RowBox[{"Normal", "@", 
   RowBox[{"Simplify", "@", 
    RowBox[{"Series", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"r0", ",", "\[Infinity]", ",", "4"}], "}"}]}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.862461728442748*^9, 3.862461799664138*^9}, 
   3.8688072313782043`*^9, {3.868807287144898*^9, 3.868807314667728*^9}, {
   3.868808146870625*^9, 3.8688081508465652`*^9}, 3.868884482203451*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"2df76497-27b3-4a17-88fa-24a9cb4cb26e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   RowBox[{"R", "[", "\[Del]", "]"}],
   ShowAutoStyles->False,
   AutoSpacing->False],
  CCLP`Boundary`Hopf1`Euclidean`RicciScalarcd[],
  Editable->False]], "Output",
 CellChangeTimes->{3.868884506131051*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"a6af5d09-bdc9-4b35-b2a1-1c00d0ede9c2"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`b,
       Editable->False], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["c\[Eta]", "2"]}]}], ")"}]}], "+", 
    FractionBox["3", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], "2"]], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`b,
       Editable->False], "4"], " ", 
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox["c\[Eta]", "4"]}]}], ")"}], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`a,
       Editable->False], "4"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"10", " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox["c\[Eta]", "4"]}]}], ")"}], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`a,
       Editable->False], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "2"]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "4"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["c\[Eta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          RowBox[{"15", " ", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["b",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`b,
             Editable->False], "2"], " ", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["g",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`g,
             Editable->False], "2"]}]}], ")"}]}]}], ")"}]}]}], 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["r0",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`r0,
     Editable->False], "4"]], "+", 
  FractionBox[
   RowBox[{"6", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}]}], 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["r0",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`r0,
     Editable->False], "2"]]}]], "Output",
 CellChangeTimes->{3.868884846821581*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f7727fee-b363-4024-a251-48cd2ce29f87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R2", "=", 
  RowBox[{"Normal", "@", 
   RowBox[{"Simplify", "@", 
    RowBox[{"Series", "[", 
     RowBox[{
      SuperscriptBox["R", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"r0", ",", "\[Infinity]", ",", "4"}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.868808625346455*^9, 3.868808672036833*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5f3544fe-ed56-4086-8726-072684e2fd46"],

Cell[BoxData[
 FractionBox[
  RowBox[{"36", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], "2"]}], 
  SuperscriptBox[
   InterpretationBox[
    StyleBox["r0",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Boundary`Hopf1`Euclidean`r0,
    Editable->False], "4"]]], "Output",
 CellChangeTimes->{3.868884860755084*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"600c3829-0db4-4982-a262-c4a44e339eae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptA]"}], ",", 
      RowBox[{"-", "\[ScriptB]"}]}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{"\[ScriptA]", ",", "\[ScriptB]"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToValues", "@", 
    RowBox[{"TraceBasisDummy", "@", "%"}]}], "/.", "ToCoord"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "@", 
  RowBox[{"Simplify", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"r0", ",", "\[Infinity]", ",", "4"}], "}"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8688077914529037`*^9, 3.868807824788583*^9}, {
  3.8688081587399406`*^9, 3.868808184423526*^9}, {3.868884876893662*^9, 
  3.868884882821558*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"0545fbd5-ffcc-48c0-8ce5-b17efc258f1f"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {"F", 
       StyleBox[GridBox[{
          {" ", " "},
          {
           StyleBox["\[ScriptA]",
            FontColor->RGBColor[1., 0., 0.]], 
           StyleBox["\[ScriptB]",
            FontColor->RGBColor[1., 0., 0.]]}
         },
         GridBoxSpacings->{"Columns" -> {
             Offset[0.], {
              Offset[0.034999999999999996`]}, 
             Offset[0.]}, "Rows" -> {{
              Offset[0.]}}}],
        FontSize->Rational[39, 4]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.034999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Boundary`Hopf1`Euclidean`FF[{-
     CCLP`Boundary`Hopf1`Euclidean`\[ScriptA], -
     CCLP`Boundary`Hopf1`Euclidean`curved}, {-
     CCLP`Boundary`Hopf1`Euclidean`\[ScriptB], -
     CCLP`Boundary`Hopf1`Euclidean`curved}],
   Editable->False], " ", 
  InterpretationBox[
   StyleBox[GridBox[{
      {"F", 
       StyleBox[GridBox[{
          {
           StyleBox["\[ScriptA]",
            FontColor->RGBColor[1., 0., 0.]], 
           StyleBox["\[ScriptB]",
            FontColor->RGBColor[1., 0., 0.]]},
          {" ", " "}
         },
         GridBoxSpacings->{"Columns" -> {
             Offset[0.], {
              Offset[0.034999999999999996`]}, 
             Offset[0.]}, "Rows" -> {{
              Offset[0.]}}}],
        FontSize->Rational[39, 4]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.034999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Boundary`Hopf1`Euclidean`FF[{
    CCLP`Boundary`Hopf1`Euclidean`\[ScriptA], 
     CCLP`Boundary`Hopf1`Euclidean`curved}, {
    CCLP`Boundary`Hopf1`Euclidean`\[ScriptB], 
     CCLP`Boundary`Hopf1`Euclidean`curved}],
   Editable->False]}]], "Output",
 CellChangeTimes->{{3.868884865255713*^9, 3.8688848838122673`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"4c706fab-4768-4346-a07c-f2ff2e7abc7c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.868884865255713*^9, 3.868884884129116*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"4f4681c7-f093-4a4e-a7ef-3155857e04bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LoadAppendConstant", "[", 
  RowBox[{"{", 
   RowBox[{"G5", ",", "\[Beta]", ",", "CR2"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendAssumption", "[", 
  RowBox[{"$constant", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "<", "G5", "<", "$infinity"}], ",", 
     RowBox[{"0", "<", "\[Beta]", "<", "$infinity"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"T\[CapitalXi]", ",", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Bulk", ",", "Hopf1", ",", "Lorentzian", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "T\[CapitalXi]"}], "}"}], ",", 
     RowBox[{"ChangeCoord", "\[Rule]", "False"}]}], "]"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.86886829508323*^9, 3.868868304897133*^9}, {
   3.868869352205431*^9, 3.868869359508335*^9}, {3.8688795023838778`*^9, 
   3.868879502697743*^9}, {3.868879546548382*^9, 3.868879563717165*^9}, {
   3.868879598991437*^9, 3.868879609382921*^9}, {3.8688803970651827`*^9, 
   3.8688804036566*^9}, 3.868884583300706*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"8442cb65-dea8-4e12-92ce-777f3cd8ad83"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"G5\\\", \
\\\",\\\", \\\"\[Beta]\\\", \\\",\\\", \\\"CR2\\\"}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"b\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\
\\\", \\\",\\\", \\\"\[Alpha]\\\", \\\",\\\", \\\"\[CapitalXi]a\\\", \
\\\",\\\", \\\"\[CapitalXi]b\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \
\\\"r0\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"G5\", \",\", \"\[Beta]\", \
\",\", \"CR2\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"b\", \",\", \
\"m\", \",\", \"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \
\"\[CapitalXi]a\", \",\", \"\[CapitalXi]b\", \",\", \"Cx\", \",\", \"r0\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8688795648521023`*^9, 3.868879610197947*^9, 
  3.868880415117092*^9, 3.8688837367862597`*^9, 3.8688841117478952`*^9, 
  3.868884888759338*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"1fc9825b-26db-4fdf-8dba-051a4b0b5d14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"KK", "[", 
     RowBox[{"\[ScriptA]", ",", 
      RowBox[{"-", "\[ScriptA]"}]}], "]"}]}], ",", 
   SqrtBox[
    RowBox[{"Detgg", "[", "]"}]], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"RicciScalarcd", "[", "]"}]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    SuperscriptBox[
     RowBox[{"RicciScalarcd", "[", "]"}], "2"]}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"terms", ",", "%"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"8", "\[Pi]", " ", "G5"}]]}], 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"-", "3"}], "g"}], ",", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"4", "g"}]]}], ",", "CR2"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"coeff", ",", "%"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Normal", "@", 
    RowBox[{"Simplify", "@", 
     RowBox[{"Series", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}], 
   "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"srh", " ", "hK"}], ",", "srh", ",", 
    RowBox[{"srh", " ", "R"}], ",", 
    RowBox[{"srh", " ", "R2"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"integrands", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8688796632435427`*^9, 3.868879721200109*^9}, {
   3.868879772178753*^9, 3.868879803951376*^9}, {3.868880152451417*^9, 
   3.868880274133956*^9}, {3.868880322580926*^9, 3.86888036201368*^9}, {
   3.868880434721941*^9, 3.868880461704856*^9}, {3.868884595804758*^9, 
   3.8688846883320923`*^9}, {3.868884902049638*^9, 3.868884902444853*^9}, 
   3.868884995024591*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"94c6600c-d93f-43c1-be35-3a2286f542e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"K", 
         StyleBox[GridBox[{
            {"\[ScriptA]", " "},
            {" ", "\[ScriptA]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`KK[
     CCLP`Boundary`Hopf1`Euclidean`\[ScriptA], -
      CCLP`Boundary`Hopf1`Euclidean`\[ScriptA]],
     Editable->False]}], ",", 
   SqrtBox[
    InterpretationBox[
     StyleBox[
      OverscriptBox["g", 
       OverscriptBox[
        StyleBox["~",
         FontColor->RGBColor[0, 0, 0]], 
        StyleBox["~",
         FontColor->RGBColor[0, 0, 0]]]],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`Detgg[],
     Editable->False]], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`Detgg[],
      Editable->False]], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox[
       RowBox[{"R", "[", "\[Del]", "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`RicciScalarcd[],
      Editable->False], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8688798064403543`*^9, 3.868880179385882*^9, {3.868880392017784*^9, 
   3.868880419606019*^9}, 3.8688804632186413`*^9, 3.868883738727653*^9, 
   3.868884114724039*^9, 3.868884920699991*^9, 3.8688849968708982`*^9, 
   3.868885194975451*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"74ae20b9-90d0-4bfc-bfc5-ef9d66375aa2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"8", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False]}], 
    RowBox[{"8", " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]], ",", 
   FractionBox["1", 
    RowBox[{"32", " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False], " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     InterpretationBox[
      StyleBox["CR2",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`CR2,
      Editable->False], 
     RowBox[{"8", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8688798064403543`*^9, 3.868880179385882*^9, {3.868880392017784*^9, 
   3.868880419606019*^9}, 3.8688804632186413`*^9, 3.868883738727653*^9, 
   3.868884114724039*^9, 3.868884920699991*^9, 3.8688849968708982`*^9, 
   3.868885194978209*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"2462bab2-2d1b-456a-8c16-a42f85a9ba76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"c\[Eta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "2"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"4", " ", "c\[Eta]", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "4"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`a,
          Editable->False], "2"], "-", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`b,
          Editable->False], "2"]}], ")"}], " ", "c\[Eta]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["a",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`a,
             Editable->False], "2"], "-", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["b",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`b,
             Editable->False], "2"]}], ")"}], " ", 
         SuperscriptBox["c\[Eta]", "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["c\[Eta]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`a,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`g,
              Editable->False], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`g,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"4", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"c\[Eta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "2"]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"c\[Eta]", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "4"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], "-", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"]}], ")"}], " ", "c\[Eta]", " ", 
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`g,
        Editable->False], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`a,
              Editable->False], "2"], "-", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`b,
              Editable->False], "2"]}], ")"}], " ", 
          SuperscriptBox["c\[Eta]", "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["c\[Eta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Boundary`Hopf1`Euclidean`a,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Boundary`Hopf1`Euclidean`g,
               Editable->False], "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["b",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Boundary`Hopf1`Euclidean`b,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Boundary`Hopf1`Euclidean`g,
               Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}]}], ")"}]}]]}], "+", 
    FractionBox[
     RowBox[{"6", " ", "c\[Eta]", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "2"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}]}]]}], ",", 
   FractionBox[
    RowBox[{"36", " ", "c\[Eta]", " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["c\[Eta]", "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8688798064403543`*^9, 3.868880179385882*^9, {3.868880392017784*^9, 
   3.868880419606019*^9}, 3.8688804632186413`*^9, 3.868883738727653*^9, 
   3.868884114724039*^9, 3.868884920699991*^9, 3.8688849968708982`*^9, 
   3.868885195024444*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"7e4f21f7-3f53-410d-8f97-0d3a5c8a3032"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BoundaryActionIntegrate", "[", "integrand_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"integrand", ",", "c\[Eta]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"4", 
      SuperscriptBox["\[Pi]", "2"], "\[Beta]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"tmp", "/.", 
          RowBox[{"c\[Eta]", "\[Rule]", "1"}]}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"tmp", "/.", 
          RowBox[{"c\[Eta]", "\[Rule]", "0"}]}], ")"}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"Simplify", "@", 
        RowBox[{"Series", "[", 
         RowBox[{"tmp", ",", 
          RowBox[{"{", 
           RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}], "/.", 
      RowBox[{"$olution", "[", 
       RowBox[{"$rule", ",", "T\[CapitalXi]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=."}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.86887593694602*^9, 3.868875940567156*^9}, {
  3.86887598630602*^9, 3.868876044744795*^9}, {3.86888098493889*^9, 
  3.868880985998445*^9}, {3.868881022860939*^9, 3.868881031450634*^9}, {
  3.868881236838829*^9, 3.868881238669443*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"7fc19bf9-b018-4b80-ba6d-f157a39041cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrals", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryActionIntegrate", "[", "#", "]"}], "&"}], "/@", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "integrands"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.868882599261283*^9, 3.868882626533538*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"94f01969-7a19-4439-9741-faa3a82c3e4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{"8", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"6", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`g,
       Editable->False], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   FractionBox[
    RowBox[{"72", " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`g,
      Editable->False], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`a,
          Editable->False], "4"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "4"]}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`b,
          Editable->False], "4"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "4"]}], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["b",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`b,
             Editable->False], "2"], " ", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["g",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Boundary`Hopf1`Euclidean`g,
             Editable->False], "4"]}]}], ")"}]}]}], ")"}], " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     InterpretationBox[
      StyleBox["\[Beta]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`\[Beta],
      Editable->False]}], 
    RowBox[{
     InterpretationBox[
      StyleBox["\[CapitalXi]a",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]a,
      Editable->False], " ", 
     InterpretationBox[
      StyleBox["\[CapitalXi]b",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]b,
      Editable->False]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.868884947977375*^9, 3.868885203118639*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"7a5795fa-0e3f-4805-ac0b-7f2c80d5c6c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vIbdy", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "coeff"}], "]"}], ".", "integrals"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.868882690380197*^9, 3.868882728833456*^9}, {
  3.868882834734006*^9, 3.8688828433931704`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"1ec13c87-9d5f-4a0f-a921-68d0f421f678"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"72", " ", 
       InterpretationBox[
        StyleBox["CR2",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf1`Euclidean`CR2,
        Editable->False], " ", 
       RowBox[{"(", 
        RowBox[{
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf1`Euclidean`g,
          Editable->False], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`a,
              Editable->False], "2"], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`b,
              Editable->False], "2"]}], ")"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`a,
              Editable->False], "4"], "-", 
            RowBox[{
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Boundary`Hopf1`Euclidean`a,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["b",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Boundary`Hopf1`Euclidean`b,
               Editable->False], "2"]}], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Boundary`Hopf1`Euclidean`b,
              Editable->False], "4"]}], ")"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "5"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf1`Euclidean`r0,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r0",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf1`Euclidean`r0,
            Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{"8", " ", 
    InterpretationBox[
     StyleBox["G5",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`G5,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]]}]], "Output",
 CellChangeTimes->{3.868885234461988*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"00e4b22d-66eb-41d0-af21-15a295d83f62"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"action", ",", 
   RowBox[{"Ibdy", "\[Rule]", "vIbdy"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868884797026696*^9, 3.868884799240736*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"afd481bd-3ac3-4e70-9374-e10ae5ee0f7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaveSolution", "[", "\"\<thermo2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveExample", "[", 
  RowBox[{"\"\<CCLP_abqm_2\[PartialD]\>\"", ",", "\"\<Action_HoloRen\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quit", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.868808852444003*^9, 3.868808869028419*^9}, {
   3.8688089230016117`*^9, 3.868808924282598*^9}, {3.868885321170762*^9, 
   3.868885362822263*^9}, 
   3.868938952101845*^9},ExpressionUUID->"1e20e104-a861-421e-b1ab-\
4fd7b2ae3a30"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saved \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"$olution\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" under the file name \"\>", "\[InvisibleSpace]", 
   
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Boundary/Hopf1/Euclidean/thermo2/2022-08-07_\
20-22-50.m\\\\\\\"\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Saved ", 
   Style["$olution", FontFamily -> "Source Code Pro Semibold"], 
   " under the file name ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Boundary/Hopf1/Euclidean/thermo2/2022-08-07_20-22-50.m\\\
\"\", TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86888537203624*^9},
 CellLabel->
  "During evaluation of \
In[72]:=",ExpressionUUID->"0ff2be57-fc3a-4364-bd54-b375e4fe1ebe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bulk calculation", "Subsection",
 CellChangeTimes->{{3.868885385006465*^9, 
  3.868885390856443*^9}},ExpressionUUID->"db98bafb-9d99-42f9-b632-\
b0b1bfec0942"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{
   "CCLP", ",", "Bulk", ",", "Hopf1", ",", "Euclidean", ",", 
    "\"\<thermo2\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.868808897133745*^9, 3.8688089185937843`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"db39ed8a-8185-4833-bcbd-f092f197f626"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"5\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868885452982657*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"40a4e25e-6ecb-4961-98e7-2e68ddec2af6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"b\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\
\\\", \\\",\\\", \\\"\[Alpha]\\\", \\\",\\\", \\\"\[CapitalXi]a\\\", \
\\\",\\\", \\\"\[CapitalXi]b\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \
\\\"r0\\\", \\\",\\\", \\\"rp\\\", \\\",\\\", \\\"G5\\\", \\\",\\\", \\\"\
\[Beta]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"b\", \",\", \
\"m\", \",\", \"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \
\"\[CapitalXi]a\", \",\", \"\[CapitalXi]b\", \",\", \"Cx\", \",\", \"r0\", \
\",\", \"rp\", \",\", \"G5\", \",\", \"\[Beta]\"}], \"}\"}], TraditionalForm]\
\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868885453025038*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"ae135e2e-799b-4848-97d7-8c36b06bca51"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined scalar functions \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\
\[CapitalDelta]r\\\", \\\",\\\", \\\"\[CapitalDelta]\[Eta]\\\", \\\",\\\", \\\
\"\[Rho]2\\\", \\\",\\\", \\\"f\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined scalar functions ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[CapitalDelta]r\", \",\", \
\"\[CapitalDelta]\[Eta]\", \",\", \"\[Rho]2\", \",\", \"f\"}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868885453030442*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"af2c0858-ad63-4c81-b3aa-b1749e7cd8b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8688854530341997`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"ce30f870-0463-461d-b406-79d50cfc450f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86888545304187*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"14604f53-8c40-48d9-85da-d657e736b4d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868885453619622*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"4765a6a9-5241-48fa-b611-9005c87fb7e9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\
\[Tau]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"r\\\", \\\"(\\\", \
\\\")\\\"}], \\\",\\\", RowBox[{\\\"c\[Eta]\\\", \\\"(\\\", \\\")\\\"}], \
\\\",\\\", RowBox[{\\\"\[Xi]1\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", \
RowBox[{\\\"\[Xi]2\\\", \\\"(\\\", \\\")\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"\[Tau]\", \"(\", \")\
\"}], \",\", RowBox[{\"r\", \"(\", \")\"}], \",\", RowBox[{\"c\[Eta]\", \
\"(\", \")\"}], \",\", RowBox[{\"\[Xi]1\", \"(\", \")\"}], \",\", RowBox[{\"\
\[Xi]2\", \"(\", \")\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868885453872929*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"000bd89b-9868-40ab-a108-c99f60996560"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2\\\\\\\"\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2\\\"\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86888545444555*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"96f59a24-f4b8-45c6-ae85-a51c8cb2cca4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadAppendConstant", "[", 
  RowBox[{"{", "CR2", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.868810847422806*^9, 3.868810851501095*^9}, {
  3.868885464569104*^9, 3.868885467404851*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"65fb1302-3e1b-4314-8a8b-de9e18309ffe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"CR2\\\", \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"b\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\
\\\", \\\",\\\", \\\"\[Alpha]\\\", \\\",\\\", \\\"\[CapitalXi]a\\\", \
\\\",\\\", \\\"\[CapitalXi]b\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \
\\\"r0\\\", \\\",\\\", \\\"rp\\\", \\\",\\\", \\\"G5\\\", \\\",\\\", \\\"\
\[Beta]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", \"CR2\", \"}\"}], TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " | Constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"b\", \",\", \
\"m\", \",\", \"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \
\"\[CapitalXi]a\", \",\", \"\[CapitalXi]b\", \",\", \"Cx\", \",\", \"r0\", \
\",\", \"rp\", \",\", \"G5\", \",\", \"\[Beta]\"}], \"}\"}], TraditionalForm]\
\)", FontColor -> RGBColor[0.5, 0, 0.5]], " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8688854686563063`*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"ebd371d4-b99a-43f8-bd32-cc350f3ea3ec"]
}, Open  ]],

Cell[TextData[{
 "As for the boundary surface ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    SubscriptBox["r", "0"]}], TraditionalForm]],ExpressionUUID->
  "30ff2240-1e30-45ef-ad65-b753aea772c8"],
 ", the meaning of ",
 Cell[BoxData[
  FormBox["\"\<r\>\"", TraditionalForm]],ExpressionUUID->
  "85f06d5d-307e-4279-b05c-90a05f10ca6c"],
 " is the ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "f260b464-52a1-4332-8e22-05671e62d307"],
 " in Fefferman-Graham coordinates, to compare we have to set the upper range \
of the CCLP ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "42f477b4-95cb-4685-8d55-2cfb9f19c2c5"],
 " to"
}], "Text",
 CellChangeTimes->{{3.868810727385338*^9, 
  3.868810831677384*^9}},ExpressionUUID->"8712b2d9-e88b-4f6d-a202-\
6d5637600eb8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"r", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["r", "2"]], 
        RowBox[{"f1", "[", "c\[Eta]", "]"}]}], "+", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["r", "4"]], 
        RowBox[{"f2", "[", "c\[Eta]", "]"}]}]}], ")"}]}], "/.", 
    RowBox[{"Solution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"CCLP", ",", "Asymptotic", ",", "Hopf1", ",", "Lorentzian"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"$rule", ",", "func"}], "}"}], ",", 
      RowBox[{"ChangeCoord", "\[Rule]", "False"}]}], "]"}]}], "/.", 
   RowBox[{
   "CCLP`Asymptotic`Hopf1`Lorentzian`c\[Eta]", "\[Rule]", "c\[Eta]"}]}], "/.", 
  RowBox[{"r", "\[Rule]", "r0"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"rupper", ",", 
   RowBox[{"{", 
    RowBox[{"rupper", "\[Rule]", "%"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.868809455081184*^9, 3.868809482818592*^9}, {
  3.868809519981574*^9, 3.868809585431816*^9}, {3.8688855429837933`*^9, 
  3.868885594750203*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bb32f372-e49c-450a-abbe-4031cefcbda5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox["c\[Eta]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "4"], " ", 
       SuperscriptBox["c\[Eta]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "4"], " ", 
       SuperscriptBox["c\[Eta]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox["c\[Eta]", "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       InterpretationBox[
        StyleBox["m",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`m,
        Editable->False]}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"]}], " ", 
       SuperscriptBox["c\[Eta]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "-", 
      FractionBox["1", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]]}], 
     RowBox[{"4", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "2"]}]]}], ")"}], " ", 
  InterpretationBox[
   StyleBox["r0",
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Bulk`Hopf1`Euclidean`r0,
   Editable->False]}]], "Output",
 CellChangeTimes->{3.868885550537856*^9, 3.868885600082306*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"215db5dc-944c-4b34-bb91-0abe8691129c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ActionIntegrate", "[", 
   RowBox[{"integrand_", ",", 
    RowBox[{"{", 
     RowBox[{"rLower_", ",", "rUpper_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]Lower_", ",", "\[Tau]Upper_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"integrand", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rUpper"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rLower"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"tmp", ",", "c\[Eta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"Simplify", "@", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"4", 
           SuperscriptBox["\[Pi]", "2"], 
           RowBox[{"(", 
            RowBox[{"\[Tau]Upper", "-", "\[Tau]Lower"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"tmp", "/.", 
               RowBox[{"c\[Eta]", "\[Rule]", "1"}]}], ")"}], "-", 
             RowBox[{"(", 
              RowBox[{"tmp", "/.", 
               RowBox[{"c\[Eta]", "\[Rule]", "0"}]}], ")"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}], "/.", 
      RowBox[{"$olution", "[", 
       RowBox[{"$rule", ",", "T\[CapitalXi]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=."}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.86887593694602*^9, 3.868875940567156*^9}, {
  3.86887598630602*^9, 3.868876044744795*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"5713a41a-280e-491e-9df1-1e33a6376961"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralsBH", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ActionIntegrate", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"rp", ",", 
        RowBox[{"rupper", "/.", 
         RowBox[{"$olution", "[", 
          RowBox[{"$rule", ",", "rupper"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Beta]"}], "}"}]}], "]"}], "&"}], "/@", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "integrands"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.86887609796426*^9, 3.868876106070826*^9}, {
  3.8688761562805862`*^9, 3.8688761961362953`*^9}, {3.868876284793827*^9, 
  3.8688762914095087`*^9}, {3.868876337265373*^9, 3.868876375579825*^9}, {
  3.868877376627322*^9, 3.8688773769513607`*^9}, {3.868877417215465*^9, 
  3.868877448077327*^9}, {3.8688856954658947`*^9, 3.868885704606537*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7527af95-a73c-40f1-bfb0-0e3710b078ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r0,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["\[Beta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[Beta],
        Editable->False]}], 
      RowBox[{
       InterpretationBox[
        StyleBox["\[CapitalXi]a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["\[CapitalXi]b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
        Editable->False]}]]}], "-", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["45", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]]}], "-", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "-", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{"120", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "4"]}], "+", 
        RowBox[{"15", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}]}], ")"}]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"9", "+", 
           RowBox[{"17", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"]}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"24", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"5", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`a,
               Editable->False], "2"], " ", 
             InterpretationBox[
              StyleBox["m",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`m,
              Editable->False], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["b",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`b,
                 Editable->False], "2"], "+", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              InterpretationBox[
               StyleBox["rp",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`rp,
               Editable->False], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"5", " ", 
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["b",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf1`Euclidean`b,
                  Editable->False], "2"], " ", 
                InterpretationBox[
                 StyleBox["m",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`m,
                 Editable->False]}], "+", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["q",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`q,
                 Editable->False], "2"], "+", 
               RowBox[{"5", " ", 
                InterpretationBox[
                 StyleBox["m",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`m,
                 Editable->False], " ", 
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["rp",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf1`Euclidean`rp,
                  Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`a,
              Editable->False], "2"], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}], ")"}]}]]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"12", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"4", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{"24", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         InterpretationBox[
          StyleBox["m",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`m,
          Editable->False]}], "-", 
        RowBox[{"24", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "4"]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"9", "+", 
           RowBox[{"17", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"]}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"48", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"24", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`rp,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"48", " ", "\[ImaginaryI]", " ", 
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Alpha]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Alpha],
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8688857172903757`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ba745beb-265c-40fc-b7fa-95e7ef3c102f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vIbulk", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"$olution", "[", 
      RowBox[{"$rule", ",", "coeff"}], "]"}], ".", "integralsBH"}], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "\[Alpha]T\[CapitalPhi]"}], "]"}]}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"vIbdy", "=", 
  RowBox[{"Ibdy", "/.", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Boundary", ",", "Hopf1", ",", "Euclidean", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "action"}], "}"}], ",", 
     RowBox[{"ChangeCoord", "\[Rule]", "False"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8688764914622927`*^9, 3.868876507265562*^9}, {
  3.868876544154538*^9, 3.868876625534009*^9}, {3.8688774846762114`*^9, 
  3.868877511844005*^9}, {3.8688857519843407`*^9, 3.86888575418259*^9}, {
  3.8688858051965933`*^9, 3.868885826839718*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"c9d84ce7-8c6e-4522-8605-e80d2be9294a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"96", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`g,
      Editable->False], "2"], " ", 
    InterpretationBox[
     StyleBox["G5",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`G5,
     Editable->False], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`rp,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "2"]}], ")"}]}]}], ")"}], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]], 
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "5"], " ", 
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`q,
       Editable->False]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "6"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "3"], " ", 
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`q,
       Editable->False], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"17", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["r0",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`r0,
             Editable->False], "2"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "4"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"17", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "12"}], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "2"]}], "+", 
           RowBox[{"23", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"12", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "2"]}], "-", 
              RowBox[{"41", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               InterpretationBox[
                StyleBox["m",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf1`Euclidean`m,
                Editable->False]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}]}], ")"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "4"]}], "+", 
              RowBox[{
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "2"], " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "4"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`q,
       Editable->False], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               InterpretationBox[
                StyleBox["r0",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf1`Euclidean`r0,
                Editable->False], "2"], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              InterpretationBox[
               StyleBox["m",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`m,
               Editable->False], "-", 
              SuperscriptBox[
               InterpretationBox[
                StyleBox["r0",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf1`Euclidean`r0,
                Editable->False], "2"]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               InterpretationBox[
                StyleBox["r0",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf1`Euclidean`r0,
                Editable->False], "4"], "-", 
              SuperscriptBox[
               InterpretationBox[
                StyleBox["rp",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf1`Euclidean`rp,
                Editable->False], "4"]}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
     
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`rp,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "6"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"12", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "2"]}], "-", 
              RowBox[{"23", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               InterpretationBox[
                StyleBox["m",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf1`Euclidean`m,
                Editable->False]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "2"]}], "-", 
              RowBox[{"3", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}]}], ")"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "4"]}], "+", 
              RowBox[{
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "2"], " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "4"]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               InterpretationBox[
                StyleBox["q",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf1`Euclidean`q,
                Editable->False], "2"], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   StyleBox["m",
                    ShowAutoStyles->False,
                    AutoSpacing->False],
                   CCLP`Bulk`Hopf1`Euclidean`m,
                   Editable->False]}], "+", 
                 SuperscriptBox[
                  InterpretationBox[
                   StyleBox["r0",
                    ShowAutoStyles->False,
                    AutoSpacing->False],
                   CCLP`Bulk`Hopf1`Euclidean`r0,
                   Editable->False], "2"]}], ")"}], " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "8"}], " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`r0,
                 Editable->False], "4"], " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf1`Euclidean`rp,
                 Editable->False], "6"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}], " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[Beta],
    Editable->False]}]}]], "Output",
 CellChangeTimes->{
  3.868885757048732*^9, {3.868885809168089*^9, 3.868885827236732*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"8f36960e-55f3-4e90-a826-bd2268aee531"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"72", " ", 
       InterpretationBox[
        StyleBox["CR2",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`CR2,
        Editable->False], " ", 
       RowBox[{"(", 
        RowBox[{
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`a,
              Editable->False], "2"], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"]}], ")"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "3"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`a,
              Editable->False], "4"], "-", 
            RowBox[{
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`a,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["b",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`b,
               Editable->False], "2"]}], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "4"]}], ")"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "5"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r0,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r0",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`r0,
            Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{"8", " ", 
    InterpretationBox[
     StyleBox["G5",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`G5,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]]}]], "Output",
 CellChangeTimes->{
  3.868885757048732*^9, {3.868885809168089*^9, 3.868885828734721*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"4a7b2a06-cf4e-48b0-bc8c-5377dba250ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$olution", "[", 
  RowBox[{"$rule", ",", "const"}], "]"}]], "Input",
 CellChangeTimes->{{3.868885970241371*^9, 3.8688859749125633`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"528ff9eb-0267-49dd-ac62-12cf3bf04517"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], "\[Rule]", 
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"]}]}]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False], "\[Rule]", 
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868885975583269*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"2ff6059e-30fa-40e0-b250-cd2822598c40"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.868885990331808*^9, 
  3.8688860486677017`*^9}},ExpressionUUID->"8be2db34-dcc5-47bd-a35f-\
867043673323"],

Cell[BoxData[
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"action", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Ibulk", "\[Rule]", "vIbulk"}], ",", 
     RowBox[{"Ibdy", "\[Rule]", "vIbdy"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"26ed9af7-1a85-49df-8723-a6239e0800a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ibulk", "+", "Ibdy", "-", "Iren"}], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "action"}], "]"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solCR2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"%", "==", "0"}], ",", "CR2", ",", 
         RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}]}], "//", 
      "Simplify"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{
        FractionBox["1", "g"], 
        SqrtBox[
         RowBox[{"1", "-", "\[CapitalXi]a"}]]}]}], ",", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{
        FractionBox["1", "g"], 
        SqrtBox[
         RowBox[{"1", "-", "\[CapitalXi]b"}]]}]}]}], "}"}]}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"CR2", ",", "solCR2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868885923483417*^9, 3.8688859570246887`*^9}, {
  3.8688860553149776`*^9, 3.8688860583189583`*^9}, {3.8688861206653843`*^9, 
  3.8688861210432577`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a9ba0fe7-afdc-4e7b-bb8f-1a602328db0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox["CR2",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`CR2,
    Editable->False], "\[Rule]", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], "2"], "+", 
     RowBox[{"7", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}], "+", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False], "2"]}], 
    RowBox[{"864", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["\[CapitalXi]a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
         Editable->False], "2"], "-", 
       RowBox[{
        InterpretationBox[
         StyleBox["\[CapitalXi]a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
         Editable->False], " ", 
        InterpretationBox[
         StyleBox["\[CapitalXi]b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
         Editable->False]}], "+", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["\[CapitalXi]b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
         Editable->False], "2"]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.86888593665478*^9, 3.868885957964756*^9}, 
   3.868886058845578*^9, 3.868886121696642*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"3ba8d2c1-804f-4555-9a4f-435a24b03839"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Ibulk", "+", "Ibdy", "-", "Iren"}], "/.", 
     RowBox[{"$olution", "[", 
      RowBox[{"$rule", ",", "action"}], "]"}]}], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "CR2"}], "]"}]}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "const"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.868886139144683*^9, 3.868886149902976*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"74729372-b24a-4251-99b1-1b395c1b91ed"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.868886141925584*^9, 3.868886151834758*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"aa6d3c67-10ae-43ce-9a0a-8de12c00d852"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ibulk", "+", "Ibdy", "-", "Iren"}], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "action"}], "]"}]}], "/.", 
   RowBox[{"CR2", "\[Rule]", "0"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"3", "\[Pi]", " ", "\[Beta]", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalXi]a", "-", "\[CapitalXi]b"}], ")"}], "2"], 
      RowBox[{"9", "\[CapitalXi]a", " ", "\[CapitalXi]b"}]]}], ")"}]}], 
  RowBox[{"32", 
   SuperscriptBox["g", "2"], "G5"}]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%%", "-", "%"}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "const"}], "]"}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.868886188817154*^9, 3.8688862233758287`*^9}, {
  3.8688862647868137`*^9, 3.8688862811830587`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e0e527a4-a5b8-4de3-8f9b-75a94226864a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"9", "-", 
     RowBox[{"9", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "4"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "4"]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "4"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "4"]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "9"}], "+", 
        RowBox[{"7", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", "\[Pi]", " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[Beta],
    Editable->False]}], 
  RowBox[{"96", " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`g,
     Editable->False], "2"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`G5,
    Editable->False], " ", 
   InterpretationBox[
    StyleBox["\[CapitalXi]a",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
    Editable->False], " ", 
   InterpretationBox[
    StyleBox["\[CapitalXi]b",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
    Editable->False]}]]], "Output",
 CellChangeTimes->{{3.868886214386153*^9, 3.868886223812104*^9}, {
  3.8688862666723948`*^9, 3.868886282157469*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"8de253ef-3b78-46b4-8e9b-606db4f038c5"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Pi]", " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[Beta],
    Editable->False], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         InterpretationBox[
          StyleBox["\[CapitalXi]a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
          Editable->False], "-", 
         InterpretationBox[
          StyleBox["\[CapitalXi]b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
          Editable->False]}], ")"}], "2"], 
      RowBox[{"9", " ", 
       InterpretationBox[
        StyleBox["\[CapitalXi]a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["\[CapitalXi]b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
        Editable->False]}]]}], ")"}]}], 
  RowBox[{"32", " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`g,
     Editable->False], "2"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`G5,
    Editable->False]}]]], "Output",
 CellChangeTimes->{{3.868886214386153*^9, 3.868886223812104*^9}, {
  3.8688862666723948`*^9, 3.868886282160246*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"21548377-e177-4e6c-97b2-192755faa8c8"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.868886214386153*^9, 3.868886223812104*^9}, {
  3.8688862666723948`*^9, 3.868886282162539*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"66aed7fa-4dc0-4620-b1b0-1df10989c5d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"McSkenderis", ",", 
   RowBox[{"{", 
    RowBox[{"Mc", "\[Rule]", 
     FractionBox[
      RowBox[{"3", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[CapitalXi]a", "-", "\[CapitalXi]b"}], ")"}], "2"], 
          RowBox[{"9", "\[CapitalXi]a", " ", "\[CapitalXi]b"}]]}], ")"}]}], 
      RowBox[{"32", 
       SuperscriptBox["g", "2"], "G5"}]]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8688863078414392`*^9, 3.868886348115325*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"69b5735a-3049-439c-88c2-9c693bcaf96a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print$olution", "[", "$rule", "]"}]], "Input",
 CellChangeTimes->{{3.868886353495089*^9, 3.868886357430463*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"40a78815-3e1e-4bae-972b-ad64a470a796"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"func", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]r -> 
             Function[{
               CCLP`Bulk`Hopf1`Euclidean`r}, (-2) 
                CCLP`Bulk`Hopf1`Euclidean`m + (((2 
                    CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                  CCLP`Bulk`Hopf1`Euclidean`q + 
                 CCLP`Bulk`Hopf1`Euclidean`q^2 + ((
                    CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`r^2) (
                    CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`r^2)) (1 + 
                   CCLP`Bulk`Hopf1`Euclidean`g^2 
                    CCLP`Bulk`Hopf1`Euclidean`r^2))/
                CCLP`Bulk`Hopf1`Euclidean`r^2], 
             CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]\[Eta] -> 
             Function[{CCLP`Bulk`Hopf1`Euclidean`c\[Eta]}, 
               1 - (CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) 
               CCLP`Bulk`Hopf1`Euclidean`g^2 - (
                CCLP`Bulk`Hopf1`Euclidean`b^2 (1 - 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2)) 
               CCLP`Bulk`Hopf1`Euclidean`g^2], 
             CCLP`Bulk`Hopf1`Euclidean`\[Rho]2 -> 
             Function[{
               CCLP`Bulk`Hopf1`Euclidean`r, 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]}, 
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (1 - 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2], CCLP`Bulk`Hopf1`Euclidean`f -> 
             Function[{
               CCLP`Bulk`Hopf1`Euclidean`r, 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]}, -
                CCLP`Bulk`Hopf1`Euclidean`q^2 + (
                 2 CCLP`Bulk`Hopf1`Euclidean`m + (((2 
                    CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                   CCLP`Bulk`Hopf1`Euclidean`g^2) 
                  CCLP`Bulk`Hopf1`Euclidean`q) (
                 CCLP`Bulk`Hopf1`Euclidean`a^2 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 (1 - 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
                 CCLP`Bulk`Hopf1`Euclidean`r^2)]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalDelta]r"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]r, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", "r", "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False]}],
                     "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}]}], 
                    SuperscriptBox["r", "2"]]}]}], "]"}]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalDelta]\[Eta]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]\[Eta], Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", "c\[Eta]", "}"}], ",", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}]}], "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Rho]2"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Rho]2, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"r", ",", "c\[Eta]"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}]}], "]"}]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"f"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`f, Editable -> False], 
                    "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"r", ",", "c\[Eta]"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False]}],
                     "+", 
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> 
                    False]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}]}]}]}], "]"}]}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{379., {52.430978260869566`, 56.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{379., {52.430978260869566`, 56.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"const", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a -> 
             1 - CCLP`Bulk`Hopf1`Euclidean`a^2 CCLP`Bulk`Hopf1`Euclidean`g^2, 
             CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b -> 
             1 - CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2},
            "AllowEmbedding" -> True, "InitialShape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Path" -> {}, 
           "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{72., {26.430978260869566`, 30.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{72., {26.430978260869566`, 30.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"mTrp", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`m -> (Rational[1, 2] 
               CCLP`Bulk`Hopf1`Euclidean`rp^(-2)) (((2 
                  CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                CCLP`Bulk`Hopf1`Euclidean`q + 
               CCLP`Bulk`Hopf1`Euclidean`q^2 + ((
                  CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2) (
                  CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2)) (1 + 
                 CCLP`Bulk`Hopf1`Euclidean`g^2 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2))}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{177., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{177., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"T\[CapitalXi]", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {-1 + 
              CCLP`Bulk`Hopf1`Euclidean`a^2 CCLP`Bulk`Hopf1`Euclidean`g^2 :> -
              CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, -1 + 
              CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2 :> -
              CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Path" -> {}, 
           "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], "\[RuleDelayed]", 
                    RowBox[{"-", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], "\[RuleDelayed]", 
                    RowBox[{"-", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{87., {26.430978260869566`, 30.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{87., {26.430978260869566`, 30.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Alpha]T\[CapitalPhi]", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[Alpha] -> (((-3^Rational[1, 2])/
                CCLP`Bulk`Hopf1`Euclidean`Cx) CCLP`Bulk`Hopf1`Euclidean`q) (
               CCLP`Bulk`Hopf1`Euclidean`rp^2/((CCLP`Bulk`Hopf1`Euclidean`a 
                 CCLP`Bulk`Hopf1`Euclidean`b) 
                CCLP`Bulk`Hopf1`Euclidean`q + (CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf1`Euclidean`rp^2) (
                 CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                 CCLP`Bulk`Hopf1`Euclidean`rp^2)))}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[Alpha], Editable -> False], 
                    "\[Rule]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}]}], ")"}]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{144., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{144., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Tau]upper", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[Tau]upper -> 
             CCLP`Bulk`Hopf1`Euclidean`\[Beta] - ((
                CCLP`Bulk`Hopf1`Euclidean`g^(-2) CCLP`Bulk`Hopf1`Euclidean`m) 
               CCLP`Bulk`Hopf1`Euclidean`r0^(-4)) 
              CCLP`Bulk`Hopf1`Euclidean`\[Beta]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"\[Tau]upper", "\[Rule]", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> 
                    False], "-", 
                    FractionBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "4"]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"rlower", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`rlower -> (((-1)/(
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a + (1 - 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b)) ((
                  CCLP`Bulk`Hopf1`Euclidean`b^2 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a + (
                  CCLP`Bulk`Hopf1`Euclidean`a^2 (1 - 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2)) 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b))^Rational[1, 2]}, 
           "AllowEmbedding" -> True, "InitialShape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"rlower", "\[Rule]", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]}], 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]}]]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{167., {20.930978260869566`, 25.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{167., {20.930978260869566`, 25.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"terms", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`Detgg[]^Rational[1, 2] 
             CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[], 
             CCLP`Bulk`Hopf1`Euclidean`g^2 
             CCLP`Bulk`Hopf1`Euclidean`Detgg[]^Rational[1, 2], (
              CCLP`Bulk`Hopf1`Euclidean`Detgg[]^Rational[1, 2] 
              CCLP`Bulk`Hopf1`Euclidean`FF[-
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]]) 
             CCLP`Bulk`Hopf1`Euclidean`FF[
              CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
               CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]], ((
               CCLP`Bulk`Hopf1`Euclidean`AA[-
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]] 
               CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]]) 
              CCLP`Bulk`Hopf1`Euclidean`FF[-
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptC]]) 
             CCLP`Bulk`Hopf1`Euclidean`FF[-
               CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
               CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]]}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    "R[\[Del]]", AutoSpacing -> False, ShowAutoStyles -> 
                    False], 
                    CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`Detgg[], Editable -> False]]}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptA]", "\[ScriptB]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`FF[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]"}, {" ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`FF[
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"A", 
                    StyleBox[
                    
                    GridBox[{{" "}, {"\[ScriptA]"}}, RowSpacings -> 0, 
                    ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`AA[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    
                    GridBox[{{
                    "\!\(\[Eta]\&\*StyleBox[\"~\",FontColor->RGBColor[1, 0, \
0]]\)", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]", "\[ScriptC]", 
                    "\[ScriptD]", "\[ScriptE]"}, {" ", " ", " ", " ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptB]", "\[ScriptC]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`FF[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptC]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptD]", "\[ScriptE]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`FF[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"coeff", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            Rational[-1, 16] (CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi), 
             Rational[-3, 4] (CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi), (
              Rational[1, 64] CCLP`Bulk`Hopf1`Euclidean`Cx^2) (
              CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi), ((Complex[0, 
                 Rational[-1, 192]] 3^Rational[-1, 2]) 
              CCLP`Bulk`Hopf1`Euclidean`Cx^3) (
              CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi)}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"16", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["3", 
                    RowBox[{"4", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "2"], 
                    RowBox[{"64", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "3"]}], 
                    RowBox[{"192", " ", 
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"integrands", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {((((CCLP`Bulk`Hopf1`Euclidean`c\[Eta]/(-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`a^2 
                  CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
                CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2)) 
               CCLP`Bulk`Hopf1`Euclidean`r) (
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2)) ((-20) 
               CCLP`Bulk`Hopf1`Euclidean`g^2 - ((2 
                CCLP`Bulk`Hopf1`Euclidean`q^2) (
                 CCLP`Bulk`Hopf1`Euclidean`a^2 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
                 CCLP`Bulk`Hopf1`Euclidean`r^2)^(-4)) ((-
                 CCLP`Bulk`Hopf1`Euclidean`a^2) 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2)), ((((
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta] 
                 CCLP`Bulk`Hopf1`Euclidean`g^2)/(-1 + 
                CCLP`Bulk`Hopf1`Euclidean`a^2 
                 CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
               CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2)) 
              CCLP`Bulk`Hopf1`Euclidean`r) (
              CCLP`Bulk`Hopf1`Euclidean`a^2 
               CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
              CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
               CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
              CCLP`Bulk`Hopf1`Euclidean`r^2), (((((((24 
                    CCLP`Bulk`Hopf1`Euclidean`Cx^(-2)) 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta])/(-1 + 
                  CCLP`Bulk`Hopf1`Euclidean`a^2 
                   CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2))
                  CCLP`Bulk`Hopf1`Euclidean`q^2) 
               CCLP`Bulk`Hopf1`Euclidean`r) (
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) - 
               CCLP`Bulk`Hopf1`Euclidean`r^2)) (
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2)^(-3), (((((((((Complex[0, -96] 
                    CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                    CCLP`Bulk`Hopf1`Euclidean`Cx^(-2)) 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta])/(-1 + 
                  CCLP`Bulk`Hopf1`Euclidean`a^2 
                   CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2))
                  CCLP`Bulk`Hopf1`Euclidean`q^2) 
               CCLP`Bulk`Hopf1`Euclidean`r) (
                CCLP`Bulk`Hopf1`Euclidean`a^2 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
                CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
                CCLP`Bulk`Hopf1`Euclidean`r^2)^(-3)) 
             CCLP`Bulk`Hopf1`Euclidean`\[Alpha]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"c\[Eta]", " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "20"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"]}], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "4"]]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"c\[Eta]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"24", " ", "c\[Eta]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "-", 
                    SuperscriptBox["r", "2"]}], ")"}]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"96", " ", "\[ImaginaryI]", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", "c\[Eta]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[Alpha], Editable -> False]}], 
                    
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{259., {69.43097826086957, 73.56902173913043}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{259., {69.43097826086957, 73.56902173913043}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"action", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`Iren -> ((((Rational[1, 4]/
                  CCLP`Bulk`Hopf1`Euclidean`G5) Pi) (
                 CCLP`Bulk`Hopf1`Euclidean`m - (
                  CCLP`Bulk`Hopf1`Euclidean`g^2 (
                   CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                   CCLP`Bulk`Hopf1`Euclidean`rp^2)) (
                  CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2) - 
                 CCLP`Bulk`Hopf1`Euclidean`q^2 (
                  CCLP`Bulk`Hopf1`Euclidean`rp^2/((
                    CCLP`Bulk`Hopf1`Euclidean`a CCLP`Bulk`Hopf1`Euclidean`b) 
                   CCLP`Bulk`Hopf1`Euclidean`q + (
                    CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2) (
                    CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2))))) 
               CCLP`Bulk`Hopf1`Euclidean`\[Beta]) (
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a^(-1)/
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b), 
             CCLP`Bulk`Hopf1`Euclidean`Ibulk -> ((((((Rational[1, 96] 
                    CCLP`Bulk`Hopf1`Euclidean`g^(-2))/
                   CCLP`Bulk`Hopf1`Euclidean`G5) 
                  Pi)/((CCLP`Bulk`Hopf1`Euclidean`a 
                   CCLP`Bulk`Hopf1`Euclidean`b) CCLP`Bulk`Hopf1`Euclidean`q + 
                 CCLP`Bulk`Hopf1`Euclidean`a^2 (CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                   CCLP`Bulk`Hopf1`Euclidean`rp^2) + 
                 CCLP`Bulk`Hopf1`Euclidean`rp^2 (
                   CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                   CCLP`Bulk`Hopf1`Euclidean`rp^2))) (((
                    CCLP`Bulk`Hopf1`Euclidean`a^5 CCLP`Bulk`Hopf1`Euclidean`b)
                     CCLP`Bulk`Hopf1`Euclidean`g^4) 
                  CCLP`Bulk`Hopf1`Euclidean`q + (
                   CCLP`Bulk`Hopf1`Euclidean`a^6 
                   CCLP`Bulk`Hopf1`Euclidean`g^4) (
                   CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                   CCLP`Bulk`Hopf1`Euclidean`rp^2) - (((
                    CCLP`Bulk`Hopf1`Euclidean`a^3 CCLP`Bulk`Hopf1`Euclidean`b)
                     CCLP`Bulk`Hopf1`Euclidean`g^2) 
                  CCLP`Bulk`Hopf1`Euclidean`q) (
                  9 + (17 CCLP`Bulk`Hopf1`Euclidean`b^2) 
                   CCLP`Bulk`Hopf1`Euclidean`g^2 - (12 
                   CCLP`Bulk`Hopf1`Euclidean`g^2) (
                   CCLP`Bulk`Hopf1`Euclidean`r0^2 - 2 
                   CCLP`Bulk`Hopf1`Euclidean`rp^2)) - ((
                   CCLP`Bulk`Hopf1`Euclidean`a^4 
                   CCLP`Bulk`Hopf1`Euclidean`g^2) (
                   CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                   CCLP`Bulk`Hopf1`Euclidean`rp^2)) (
                  9 + (17 CCLP`Bulk`Hopf1`Euclidean`b^2) 
                   CCLP`Bulk`Hopf1`Euclidean`g^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`g^2 ((-12) 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2 + 
                    23 CCLP`Bulk`Hopf1`Euclidean`rp^2)) + (
                   CCLP`Bulk`Hopf1`Euclidean`a^2 (
                    CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2)) (
                   CCLP`Bulk`Hopf1`Euclidean`b^4 
                    CCLP`Bulk`Hopf1`Euclidean`g^4 + (
                    CCLP`Bulk`Hopf1`Euclidean`b^2 
                    CCLP`Bulk`Hopf1`Euclidean`g^2) (-9 + 
                    CCLP`Bulk`Hopf1`Euclidean`g^2 (
                    12 CCLP`Bulk`Hopf1`Euclidean`r0^2 - 41 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2)) + 
                   3 (3 + CCLP`Bulk`Hopf1`Euclidean`g^2 (
                    8 CCLP`Bulk`Hopf1`Euclidean`m - 8 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2 - 3 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2) + (4 
                    CCLP`Bulk`Hopf1`Euclidean`g^4) (
                    2 CCLP`Bulk`Hopf1`Euclidean`r0^4 + 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2 - 4 
                    CCLP`Bulk`Hopf1`Euclidean`rp^4))) + ((
                    CCLP`Bulk`Hopf1`Euclidean`a CCLP`Bulk`Hopf1`Euclidean`b) 
                   CCLP`Bulk`Hopf1`Euclidean`q) (
                   CCLP`Bulk`Hopf1`Euclidean`b^4 
                    CCLP`Bulk`Hopf1`Euclidean`g^4 + ((3 
                    CCLP`Bulk`Hopf1`Euclidean`b^2) 
                    CCLP`Bulk`Hopf1`Euclidean`g^2) (-3 + (4 
                    CCLP`Bulk`Hopf1`Euclidean`g^2) (
                    CCLP`Bulk`Hopf1`Euclidean`r0^2 - 2 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2)) + 
                   3 (3 + (8 CCLP`Bulk`Hopf1`Euclidean`g^2) (
                    CCLP`Bulk`Hopf1`Euclidean`m - 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2) + (8 
                    CCLP`Bulk`Hopf1`Euclidean`g^4) (
                    CCLP`Bulk`Hopf1`Euclidean`r0^4 - 
                    CCLP`Bulk`Hopf1`Euclidean`rp^4))) + 
                 CCLP`Bulk`Hopf1`Euclidean`rp^2 (
                   CCLP`Bulk`Hopf1`Euclidean`b^6 
                    CCLP`Bulk`Hopf1`Euclidean`g^4 + (
                    CCLP`Bulk`Hopf1`Euclidean`b^4 
                    CCLP`Bulk`Hopf1`Euclidean`g^2) (-9 + 
                    CCLP`Bulk`Hopf1`Euclidean`g^2 (
                    12 CCLP`Bulk`Hopf1`Euclidean`r0^2 - 23 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2)) + (3 
                    CCLP`Bulk`Hopf1`Euclidean`b^2) (3 + 
                    CCLP`Bulk`Hopf1`Euclidean`g^2 (
                    8 CCLP`Bulk`Hopf1`Euclidean`m - 8 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2 - 3 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2) + (4 
                    CCLP`Bulk`Hopf1`Euclidean`g^4) (
                    2 CCLP`Bulk`Hopf1`Euclidean`r0^4 + 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2 - 4 
                    CCLP`Bulk`Hopf1`Euclidean`rp^4)) - 
                   3 ((-3) 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2 + (8 
                    CCLP`Bulk`Hopf1`Euclidean`g^2) (
                    CCLP`Bulk`Hopf1`Euclidean`q^2 + (-
                    CCLP`Bulk`Hopf1`Euclidean`m + 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2) 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2) + 
                    CCLP`Bulk`Hopf1`Euclidean`g^4 (((-8) 
                    CCLP`Bulk`Hopf1`Euclidean`r0^4) 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2 + 
                    8 CCLP`Bulk`Hopf1`Euclidean`rp^6))))) 
               CCLP`Bulk`Hopf1`Euclidean`\[Beta]) (
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a^(-1)/
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b), 
             CCLP`Bulk`Hopf1`Euclidean`Ibdy -> ((((Rational[-1, 8]/
                  CCLP`Bulk`Hopf1`Euclidean`G5) 
                 Pi) ((72 CCLP`Bulk`Hopf1`Euclidean`CR2) (
                   CCLP`Bulk`Hopf1`Euclidean`g - (
                    CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`b^2) 
                   CCLP`Bulk`Hopf1`Euclidean`g^3 + (
                    CCLP`Bulk`Hopf1`Euclidean`a^4 - 
                    CCLP`Bulk`Hopf1`Euclidean`a^2 
                    CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`b^4) 
                    CCLP`Bulk`Hopf1`Euclidean`g^5) + 
                 CCLP`Bulk`Hopf1`Euclidean`r0^2 (-2 + 
                   CCLP`Bulk`Hopf1`Euclidean`a^2 
                    CCLP`Bulk`Hopf1`Euclidean`g^2 + 
                   CCLP`Bulk`Hopf1`Euclidean`b^2 
                    CCLP`Bulk`Hopf1`Euclidean`g^2 + (2 
                    CCLP`Bulk`Hopf1`Euclidean`g^2) 
                    CCLP`Bulk`Hopf1`Euclidean`r0^2))) 
               CCLP`Bulk`Hopf1`Euclidean`\[Beta]) (
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a^(-1)/
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b)}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Path" -> {}, 
           "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Iren", "\[Rule]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False], 
                    "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}], "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}]}]]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{"4", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Ibulk", "\[Rule]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "5"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "6"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"9", "+", 
                    RowBox[{"17", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"9", "+", 
                    RowBox[{"17", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "12"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{"23", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "9"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"41", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False]}],
                     "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "4"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False], 
                    "-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}], ")"}]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "4"], "-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "4"]}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "6"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "9"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"23", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False]}],
                     "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "4"]}]}], ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "3"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "6"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> False]}], 
                    RowBox[{"96", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Ibdy", "\[Rule]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"72", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"CR2"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`CR2, Editable -> False],
                     " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "3"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "4"], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"]}], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "4"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "5"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{"8", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            
            ImageSizeCache->{
             1094., {51.930978260869566`, 56.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           
           ImageSizeCache->{
            1094., {51.930978260869566`, 56.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"rupper", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`rupper -> (
               1 + ((Rational[-1, 8] CCLP`Bulk`Hopf1`Euclidean`g^(-2)) (
                  CCLP`Bulk`Hopf1`Euclidean`b^2 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + ((
                    CCLP`Bulk`Hopf1`Euclidean`a^4 
                    CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) (-1 + 
                    CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2)) 
                   CCLP`Bulk`Hopf1`Euclidean`g^2 + ((
                    CCLP`Bulk`Hopf1`Euclidean`b^4 
                    CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) (-1 + 
                    CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2)) 
                   CCLP`Bulk`Hopf1`Euclidean`g^2 - (
                   CCLP`Bulk`Hopf1`Euclidean`a^2 (-1 + 
                    CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2)) (
                   1 + ((2 CCLP`Bulk`Hopf1`Euclidean`b^2) 
                    CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) 
                    CCLP`Bulk`Hopf1`Euclidean`g^2) - 2 
                  CCLP`Bulk`Hopf1`Euclidean`m)) 
                CCLP`Bulk`Hopf1`Euclidean`r0^(-4) + (
                 Rational[
                  1, 4] ((-CCLP`Bulk`Hopf1`Euclidean`b^2) 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`a^2 (-1 + 
                    CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) - 
                  CCLP`Bulk`Hopf1`Euclidean`g^(-2))) 
                CCLP`Bulk`Hopf1`Euclidean`r0^(-2)) 
              CCLP`Bulk`Hopf1`Euclidean`r0}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"rupper", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> 
                    False]}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "4"]}]], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"]}], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "-", 
                    FractionBox["1", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]]}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "2"]}]]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{489., {26.430978260869566`, 30.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{489., {26.430978260869566`, 30.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{
       InterpretationBox[
        StyleBox["CR2",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`CR2,
        Editable->False], "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`CR2 -> ((Rational[1, 864] 
                CCLP`Bulk`Hopf1`Euclidean`g^(-3))/(
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a^2 - 
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a 
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b + 
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b^2)) (
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a^2 + (7 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a) 
                CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b + 
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b^2)}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"CR2"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`CR2, Editable -> False],
                     "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], "2"], "+", 
                    RowBox[{"7", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False], "2"]}], 
                    RowBox[{"864", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], "2"], "-", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False], "2"]}], ")"}]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{126., {18.430978260869566`, 22.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{126., {18.430978260869566`, 22.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"McSkenderis", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`Mc -> (((Rational[3, 32] 
                 CCLP`Bulk`Hopf1`Euclidean`g^(-2))/
                CCLP`Bulk`Hopf1`Euclidean`G5) Pi) (
               1 + (Rational[1, 9]/
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a) ((
                   CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a - 
                   CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b)^2/
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b))}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Mc", "\[Rule]", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], "-", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}], ")"}], "2"], 
                    RowBox[{"9", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]]}], ")"}]}], 
                    RowBox[{"32", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{98., {24.430978260869566`, 28.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{98., {24.430978260869566`, 28.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{3.8688863583096952`*^9},
 CellLabel->
  "Out[40]//TableForm=",ExpressionUUID->"d4d824b0-9686-442e-9d73-\
d4b3396663cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaveSolution", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveExample", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8688115157575903`*^9, 3.868811540592436*^9}, {
  3.8688864563406963`*^9, 3.868886474658216*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"c65289b3-3498-4428-8df6-49cf2724662b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saved \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"$olution\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" under the file name \"\>", "\[InvisibleSpace]", 
   
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2/2022-08-07_20-\
41-16.m\\\\\\\"\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Saved ", 
   Style["$olution", FontFamily -> "Source Code Pro Semibold"], 
   " under the file name ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2/2022-08-07_20-41-16.m\\\"\",\
 TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8688864767631493`*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"b35de52c-a618-4edc-82b3-243125df51c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1202.086956521739, 595.4086956521738},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.75 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fae75585-1f5e-4d6a-8f3d-68a9e87c7e46"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 254, 5, 34, "Input",ExpressionUUID->"f6bc8600-a2ed-415a-8238-4911c99d6bce",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[859, 31, 412, 8, 18, "Print",ExpressionUUID->"d13fdb94-8484-4728-8a3e-c0e890b0361c"],
Cell[1274, 41, 683, 16, 18, "Print",ExpressionUUID->"060844f1-49bb-4a15-a088-849910ca3e54"],
Cell[1960, 59, 433, 8, 18, "Print",ExpressionUUID->"0f44897b-4337-450b-9e73-303f950cda1a"],
Cell[2396, 69, 394, 7, 18, "Print",ExpressionUUID->"1e920516-ed4e-486c-9ff1-519d7a37559f"],
Cell[2793, 78, 375, 7, 18, "Print",ExpressionUUID->"0dbcf3cf-d907-443b-8034-ec69b04be239"],
Cell[3171, 87, 412, 8, 18, "Print",ExpressionUUID->"cdce0661-814c-4e2c-af3d-43bd51374b50"],
Cell[3586, 97, 690, 16, 18, "Print",ExpressionUUID->"bca2b1cb-754f-4f6f-a0ab-74a8129dbbc2"],
Cell[4279, 115, 433, 8, 18, "Print",ExpressionUUID->"3036ebc9-f069-449f-8a00-ed45a2e8d3f1"],
Cell[4715, 125, 414, 8, 18, "Print",ExpressionUUID->"c214d8f2-56e4-4b32-b652-721f15cd52fe"],
Cell[5132, 135, 684, 16, 18, "Print",ExpressionUUID->"5c4ecd0d-0af0-4a32-9195-457a2d46ae60"],
Cell[5819, 153, 481, 9, 18, "Print",ExpressionUUID->"de98b5d2-41ea-442d-beb6-3404ea29b53d"],
Cell[6303, 164, 654, 15, 18, "Print",ExpressionUUID->"2700ec82-d4e4-4798-99a5-96c2cb4ebcb3"],
Cell[6960, 181, 738, 16, 18, "Print",ExpressionUUID->"4f4221c2-bc74-4a17-a718-358008cd33d2"],
Cell[7701, 199, 839, 16, 18, "Print",ExpressionUUID->"7063daf4-21bd-4a36-8743-057bff92b5b5"],
Cell[8543, 217, 797, 16, 18, "Print",ExpressionUUID->"b0e09c24-cde6-4f66-a0f0-b17825b97313"],
Cell[9343, 235, 815, 16, 18, "Print",ExpressionUUID->"9bed47fa-629d-49a6-83e9-40ace2e4dd26"],
Cell[10161, 253, 411, 8, 18, "Print",ExpressionUUID->"792c4544-5528-4c4f-9ffa-1139bfc23fc2"],
Cell[10575, 263, 679, 15, 18, "Print",ExpressionUUID->"00df0322-1a0e-40af-b357-4e20d58a5dc2"],
Cell[11257, 280, 459, 8, 18, "Print",ExpressionUUID->"d28a8cce-73be-4c37-a1a1-0e6005f6349f"],
Cell[11719, 290, 780, 17, 18, "Print",ExpressionUUID->"dcb23f80-0088-4b82-b70c-0e50eb20b2bd"],
Cell[12502, 309, 774, 16, 18, "Print",ExpressionUUID->"b2070c38-1eaa-47f7-8bf2-52763fed56a7"],
Cell[13279, 327, 819, 16, 18, "Print",ExpressionUUID->"8618f1be-18b1-41c1-b724-fa7eafb307e4"],
Cell[14101, 345, 732, 16, 18, "Print",ExpressionUUID->"3cd0a9e2-1356-47c3-8a1c-93b1621d013c"],
Cell[14836, 363, 414, 8, 18, "Print",ExpressionUUID->"29c75a13-6301-423e-a160-501dd41ef118"],
Cell[15253, 373, 684, 16, 18, "Print",ExpressionUUID->"081da51d-26a2-4091-a068-ca50a685fe5f"],
Cell[15940, 391, 451, 8, 18, "Print",ExpressionUUID->"97031f01-fab9-4d20-a4c3-d38938366600"],
Cell[16394, 401, 412, 8, 18, "Print",ExpressionUUID->"b9bfd723-60f1-4346-b871-c2cafcbcd4a1"],
Cell[16809, 411, 704, 16, 18, "Print",ExpressionUUID->"28c32fd8-7040-4587-b1b1-0e7e3296d9b3"],
Cell[17516, 429, 441, 8, 18, "Print",ExpressionUUID->"e2432312-cd30-480a-9807-b39ac733fc89"],
Cell[17960, 439, 412, 8, 18, "Print",ExpressionUUID->"135bb8e2-275e-4077-a156-bf59c8e840af"],
Cell[18375, 449, 685, 15, 18, "Print",ExpressionUUID->"fde5fa3f-8a83-466c-b835-d91722204083"],
Cell[19063, 466, 423, 8, 18, "Print",ExpressionUUID->"0c81a702-c076-4d7d-9e83-ad0ea3405dd2"],
Cell[19489, 476, 742, 17, 18, "Print",ExpressionUUID->"3ce65884-809d-4b92-8af4-c66f3f4746e8"],
Cell[20234, 495, 821, 16, 18, "Print",ExpressionUUID->"a60c701c-3619-48f2-97f6-6f5c08f809aa"],
Cell[21058, 513, 411, 8, 18, "Print",ExpressionUUID->"690d1d38-2d94-4468-b29a-b9344dc02993"],
Cell[21472, 523, 683, 15, 18, "Print",ExpressionUUID->"97e1f753-be2c-4e3b-93f3-65d70d2553dc"],
Cell[22158, 540, 482, 9, 18, "Print",ExpressionUUID->"9f47fc76-7915-4e10-9688-784c01716068"],
Cell[22643, 551, 412, 8, 18, "Print",ExpressionUUID->"e99ba5fe-1aeb-487c-bb7f-52e4c90d4303"],
Cell[23058, 561, 683, 15, 18, "Print",ExpressionUUID->"bb2056d2-8294-499b-b50d-a3cd86f72839"],
Cell[23744, 578, 449, 8, 18, "Print",ExpressionUUID->"9ff7e5b0-560b-41e9-98e8-f32e51939677"],
Cell[24196, 588, 459, 8, 18, "Print",ExpressionUUID->"9c23cf18-257b-48c1-86c6-8d45cf7308b1"],
Cell[24658, 598, 732, 16, 18, "Print",ExpressionUUID->"1eab56bf-8640-4693-8f46-9f87489135bb"],
Cell[25393, 616, 412, 8, 18, "Print",ExpressionUUID->"757dcd1f-8a11-42a1-83b4-84a3951aacb3"],
Cell[25808, 626, 688, 16, 18, "Print",ExpressionUUID->"56245edc-7436-4d23-8dc8-3e94fa74c25f"],
Cell[26499, 644, 457, 8, 18, "Print",ExpressionUUID->"e1e36143-4da2-414f-83b2-df97580a5693"],
Cell[26959, 654, 414, 8, 18, "Print",ExpressionUUID->"4be8c756-8f4b-4fbf-87af-0b3056d4f148"],
Cell[27376, 664, 708, 16, 18, "Print",ExpressionUUID->"dea8c59a-bbac-4f16-b0be-4f8f621129a2"],
Cell[28087, 682, 423, 8, 18, "Print",ExpressionUUID->"1aa71147-818c-4e4d-9442-d1cba7a49688"],
Cell[28513, 692, 412, 8, 18, "Print",ExpressionUUID->"1fafa20b-4ff1-4f08-aab6-0353472cfd6e"],
Cell[28928, 702, 567, 10, 32, "Print",ExpressionUUID->"385ca381-9c28-4424-a6ac-3ffa618bef26"],
Cell[29498, 714, 412, 8, 18, "Print",ExpressionUUID->"3566ba3c-b69a-46b1-a220-8439ce77c976"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29959, 728, 190, 3, 51, "Section",ExpressionUUID->"1a00f0f3-b14c-46b4-8016-149f8b545572"],
Cell[CellGroupData[{
Cell[30174, 735, 201, 3, 41, "Subsection",ExpressionUUID->"1c068e54-c9c3-4cca-94c4-7f588b8df65f"],
Cell[CellGroupData[{
Cell[30400, 742, 303, 6, 22, "Input",ExpressionUUID->"63311f05-6304-43f2-8b72-d9d1ca66fa78"],
Cell[CellGroupData[{
Cell[30728, 752, 2768, 48, 18, "Print",ExpressionUUID->"24f236de-f44e-4795-8657-e36df7bec6f2"],
Cell[33499, 802, 1127, 20, 18, "Print",ExpressionUUID->"7d275a19-7b5a-45fa-99f9-a210e1c558b9"],
Cell[34629, 824, 1506, 30, 18, "Print",ExpressionUUID->"ee7ddb38-07cc-45f5-a761-b386eebfe05b"],
Cell[36138, 856, 2492, 45, 18, "Print",ExpressionUUID->"953e011b-d37f-4ca7-b987-364c2140c1ec"],
Cell[38633, 903, 1635, 33, 18, "Print",ExpressionUUID->"4f943128-c8bc-4c2b-834b-b4b550c83da8"],
Cell[40271, 938, 2327, 44, 18, "Print",ExpressionUUID->"6624054a-a482-461a-8bd5-785ceda99f0c"],
Cell[42601, 984, 1160, 23, 18, "Print",ExpressionUUID->"874ba16f-6bf9-4c9c-8830-6092c77ed28e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43810, 1013, 744, 20, 56, "Input",ExpressionUUID->"b9597f7c-07ab-44a8-96af-f3f5ef0d0f8f"],
Cell[44557, 1035, 475, 15, 29, "Output",ExpressionUUID->"230bbd2a-05e8-4807-b78a-b1a0ead60920"],
Cell[45035, 1052, 8561, 286, 46, "Output",ExpressionUUID->"4faf15a6-298c-47c1-8573-133408c26d73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53633, 1343, 873, 22, 54, "Input",ExpressionUUID->"0b54b12e-46a6-4b2c-be2f-ee30c90592a5"],
Cell[54509, 1367, 1247, 36, 28, "Output",ExpressionUUID->"3bbc5a0c-0c4d-41df-9cbb-f7c1efba4230"],
Cell[55759, 1405, 6103, 205, 50, "Output",ExpressionUUID->"881c2eae-e6c7-44b6-816e-1aa567e8d960"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61899, 1615, 779, 19, 54, "Input",ExpressionUUID->"2df76497-27b3-4a17-88fa-24a9cb4cb26e"],
Cell[62681, 1636, 333, 9, 25, "Output",ExpressionUUID->"a6af5d09-bdc9-4b35-b2a1-1c00d0ede9c2"],
Cell[63017, 1647, 5660, 186, 48, "Output",ExpressionUUID->"f7727fee-b363-4024-a251-48cd2ce29f87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68714, 1838, 425, 11, 24, "Input",ExpressionUUID->"5f3544fe-ed56-4086-8726-072684e2fd46"],
Cell[69142, 1851, 1635, 53, 43, "Output",ExpressionUUID->"600c3829-0db4-4982-a262-c4a44e339eae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70814, 1909, 948, 27, 54, "Input",ExpressionUUID->"0545fbd5-ffcc-48c0-8ce5-b17efc258f1f"],
Cell[71765, 1938, 2463, 71, 28, "Output",ExpressionUUID->"4c706fab-4768-4346-a07c-f2ff2e7abc7c"],
Cell[74231, 2011, 173, 2, 25, "Output",ExpressionUUID->"4f4681c7-f093-4a4e-a7ef-3155857e04bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74441, 2018, 1230, 29, 54, "Input",ExpressionUUID->"8442cb65-dea8-4e12-92ce-777f3cd8ad83"],
Cell[75674, 2049, 1743, 32, 18, "Print",ExpressionUUID->"1fc9825b-26db-4fdf-8dba-051a4b0b5d14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77454, 2086, 2005, 58, 122, "Input",ExpressionUUID->"94c6600c-d93f-43c1-be35-3a2286f542e2"],
Cell[79462, 2146, 3331, 106, 33, "Output",ExpressionUUID->"74ae20b9-90d0-4bfc-bfc5-ef9d66375aa2"],
Cell[82796, 2254, 1908, 61, 41, "Output",ExpressionUUID->"2462bab2-2d1b-456a-8c16-a42f85a9ba76"],
Cell[84707, 2317, 24013, 753, 87, "Output",ExpressionUUID->"7e4f21f7-3f53-410d-8f97-0d3a5c8a3032"]
}, Open  ]],
Cell[108735, 3073, 1566, 38, 118, "Input",ExpressionUUID->"7fc19bf9-b018-4b80-ba6d-f157a39041cd"],
Cell[CellGroupData[{
Cell[110326, 3115, 371, 8, 22, "Input",ExpressionUUID->"94f01969-7a19-4439-9741-faa3a82c3e4c"],
Cell[110700, 3125, 11954, 383, 43, "Output",ExpressionUUID->"7a5795fa-0e3f-4805-ac0b-7f2c80d5c6c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122691, 3513, 387, 9, 22, "Input",ExpressionUUID->"1ec13c87-9d5f-4a0f-a921-68d0f421f678"],
Cell[123081, 3524, 5443, 166, 41, "Output",ExpressionUUID->"00e4b22d-66eb-41d0-af21-15a295d83f62"]
}, Open  ]],
Cell[128539, 3693, 277, 5, 22, "Input",ExpressionUUID->"afd481bd-3ac3-4e70-9374-e10ae5ee0f7a"],
Cell[CellGroupData[{
Cell[128841, 3702, 526, 10, 54, "Input",ExpressionUUID->"1e20e104-a861-421e-b1ab-4fd7b2ae3a30"],
Cell[129370, 3714, 1048, 23, 18, "Print",ExpressionUUID->"0ff2be57-fc3a-4364-bd54-b375e4fe1ebe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130467, 3743, 164, 3, 41, "Subsection",ExpressionUUID->"db98bafb-9d99-42f9-b632-b0b1bfec0942"],
Cell[CellGroupData[{
Cell[130656, 3750, 329, 7, 22, "Input",ExpressionUUID->"db39ed8a-8185-4833-bcbd-f092f197f626"],
Cell[CellGroupData[{
Cell[131010, 3761, 2673, 47, 18, "Print",ExpressionUUID->"40a4e25e-6ecb-4961-98e7-2e68ddec2af6"],
Cell[133686, 3810, 1158, 21, 18, "Print",ExpressionUUID->"ae135e2e-799b-4848-97d7-8c36b06bca51"],
Cell[134847, 3833, 824, 16, 18, "Print",ExpressionUUID->"af2c0858-ad63-4c81-b3aa-b1749e7cd8b9"],
Cell[135674, 3851, 1413, 29, 18, "Print",ExpressionUUID->"ce30f870-0463-461d-b406-79d50cfc450f"],
Cell[137090, 3882, 2077, 40, 18, "Print",ExpressionUUID->"14604f53-8c40-48d9-85da-d657e736b4d9"],
Cell[139170, 3924, 1540, 32, 18, "Print",ExpressionUUID->"4765a6a9-5241-48fa-b611-9005c87fb7e9"],
Cell[140713, 3958, 2331, 45, 18, "Print",ExpressionUUID->"000bd89b-9868-40ab-a108-c99f60996560"],
Cell[143047, 4005, 1059, 22, 18, "Print",ExpressionUUID->"96f59a24-f4b8-45c6-ae85-a51c8cb2cca4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144155, 4033, 289, 5, 22, "Input",ExpressionUUID->"65fb1302-3e1b-4314-8a8b-de9e18309ffe"],
Cell[144447, 4040, 1636, 29, 18, "Print",ExpressionUUID->"ebd371d4-b99a-43f8-bd32-cc350f3ea3ec"]
}, Open  ]],
Cell[146098, 4072, 811, 24, 26, "Text",ExpressionUUID->"8712b2d9-e88b-4f6d-a202-6d5637600eb8"],
Cell[CellGroupData[{
Cell[146934, 4100, 1227, 33, 53, "Input",ExpressionUUID->"bb32f372-e49c-450a-abbe-4031cefcbda5"],
Cell[148164, 4135, 4695, 154, 57, "Output",ExpressionUUID->"215db5dc-944c-4b34-bb91-0abe8691129c"]
}, Open  ]],
Cell[152874, 4292, 2298, 58, 135, "Input",ExpressionUUID->"5713a41a-280e-491e-9df1-1e33a6376961"],
Cell[CellGroupData[{
Cell[155197, 4354, 931, 20, 22, "Input",ExpressionUUID->"7527af95-a73c-40f1-bfb0-0e3710b078ba"],
Cell[156131, 4376, 25484, 790, 92, "Output",ExpressionUUID->"ba745beb-265c-40fc-b7fa-95e7ef3c102f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181652, 5171, 1051, 25, 38, "Input",ExpressionUUID->"c9d84ce7-8c6e-4522-8605-e80d2be9294a"],
Cell[182706, 5198, 27818, 845, 77, "Output",ExpressionUUID->"8f36960e-55f3-4e90-a826-bd2268aee531"],
Cell[210527, 6045, 5408, 167, 41, "Output",ExpressionUUID->"4a7b2a06-cf4e-48b0-bc8c-5377dba250ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215972, 6217, 239, 4, 22, "Input",ExpressionUUID->"528ff9eb-0267-49dd-ac62-12cf3bf04517"],
Cell[216214, 6223, 1494, 50, 27, "Output",ExpressionUUID->"2ff6059e-30fa-40e0-b250-cd2822598c40"]
}, Open  ]],
Cell[217723, 6276, 154, 3, 22, "Input",ExpressionUUID->"8be2db34-dcc5-47bd-a35f-867043673323"],
Cell[217880, 6281, 303, 7, 22, "Input",ExpressionUUID->"26ed9af7-1a85-49df-8723-a6239e0800a1"],
Cell[CellGroupData[{
Cell[218208, 6292, 1282, 37, 70, "Input",ExpressionUUID->"a9ba0fe7-afdc-4e7b-bb8f-1a602328db0f"],
Cell[219493, 6331, 2487, 77, 45, "Output",ExpressionUUID->"3ba8d2c1-804f-4555-9a4f-435a24b03839"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222017, 6413, 535, 13, 22, "Input",ExpressionUUID->"74729372-b24a-4251-99b1-1b395c1b91ed"],
Cell[222555, 6428, 173, 2, 25, "Output",ExpressionUUID->"aa6d3c67-10ae-43ce-9a0a-8de12c00d852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222765, 6435, 1015, 27, 82, "Input",ExpressionUUID->"e0e527a4-a5b8-4de3-8f9b-75a94226864a"],
Cell[223783, 6464, 3486, 117, 44, "Output",ExpressionUUID->"8de253ef-3b78-46b4-8e9b-606db4f038c5"],
Cell[227272, 6583, 1796, 56, 49, "Output",ExpressionUUID->"21548377-e177-4e6c-97b2-192755faa8c8"],
Cell[229071, 6641, 224, 3, 25, "Output",ExpressionUUID->"66aed7fa-4dc0-4620-b1b0-1df10989c5d2"]
}, Open  ]],
Cell[229310, 6647, 687, 17, 46, "Input",ExpressionUUID->"69b5735a-3049-439c-88c2-9c693bcaf96a"],
Cell[CellGroupData[{
Cell[230022, 6668, 215, 3, 22, "Input",ExpressionUUID->"40a78815-3e1e-4bae-972b-ad64a470a796"],
Cell[230240, 6673, 439647, 8054, 1091, "Output",ExpressionUUID->"d4d824b0-9686-442e-9d73-d4b3396663cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[669924, 14732, 320, 5, 38, "Input",ExpressionUUID->"c65289b3-3498-4428-8df6-49cf2724662b"],
Cell[670247, 14739, 1043, 23, 18, "Print",ExpressionUUID->"b35de52c-a618-4edc-82b3-243125df51c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

