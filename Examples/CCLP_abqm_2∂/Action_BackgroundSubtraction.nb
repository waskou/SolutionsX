(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    622632,      14600]
NotebookOptionsPosition[    608428,      14396]
NotebookOutlinePosition[    608920,      14414]
CellTagsIndexPosition[    608877,      14411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "SolutionsX`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8688681190606823`*^9, 3.868868140044792*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2ac1b500-9213-418e-b1b3-2a243b75ec3f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388218771257`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6e61a462-208e-4e5a-967a-2290e8e33cdd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.3", ", ", {2015, 8, 23}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938821882855*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"efff99f8-8f1b-4b04-8c64-67de51f11e91"],

Cell[BoxData["\<\"CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938821885062*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d15eba19-aeda-4a9c-880f-e111b799194b"],

Cell[BoxData["\<\"Connecting to external linux executable...\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938821970317*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"807b635d-318b-4f48-9e2b-66b147b1d292"],

Cell[BoxData["\<\"Connection established.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822046274*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ae378ebf-73dd-4c50-9241-2db1d0993756"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388220476303`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bb645f74-f6fe-4735-9d06-06edb466eb02"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTensor`  version ", "1.1.5", ", ", {2021, 2, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822048777*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e57ae220-9862-4b70-bece-3d2ef676c584"],

Cell[BoxData["\<\"CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822049718*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c9e3d934-c42f-4e67-a794-3aad55763c6e"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822267562*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fe145d72-6b60-4939-8c41-7c68236b1ce4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPert`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.0.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xPert`  version ", "1.0.6", ", ", {2018, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822269431*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f4dddb3b-9814-430c-af0c-2a1026b28879"],

Cell[BoxData["\<\"CopyRight (C) 2005-2020, David Brizuela, Jose M. \
Martin-Garcia and Guillermo A. Mena Marugan, under the General Public \
License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.86893882227094*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b3a61030-09ba-4761-a64f-b524dadd9e14"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$PrePrint", 
   "\[InvisibleSpace]", "\<\" assigned value \"\>", "\[InvisibleSpace]", 
   "ScreenDollarIndices"}],
  SequenceForm[
  "** Variable ", $PrePrint, " assigned value ", 
   xAct`xTensor`ScreenDollarIndices],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.86893882229274*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"aa18faab-c9b1-4b08-ab08-c40d49cf3a33"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>", "\[InvisibleSpace]", "\<\" to \"\>",
    "\[InvisibleSpace]", "\<\"Postfix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Prefix", 
   " to ", "Postfix"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822294181*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"cf55d7bf-9628-4c40-937e-84091670fcc4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "AllowUpperDerivatives", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "ContractMetric",
    "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`AllowUpperDerivatives, " of ", 
   xAct`xTensor`ContractMetric, " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822295394*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9fe3577a-e531-4394-87f9-1d4003240513"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "MetricOn", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "None",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "All"}],
  SequenceForm[
  "** Option ", xAct`xTensor`MetricOn, " of ", xAct`xTensor`MakeRule, 
   " changed from ", None, " to ", All],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.86893882229655*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1ab131dc-c60a-4ab4-8ee1-31336d5cd88a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "ContractMetrics", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`ContractMetrics, " of ", xAct`xTensor`MakeRule, 
   " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822297696*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fd08e3f3-0d05-4f69-9d21-9a4d04459c65"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388223163853`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"70dc62e5-cc9f-4e04-a30b-fba02077bafc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`Invar`  version \"\>", 
   "\[InvisibleSpace]", "\<\"2.0.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`Invar`  version ", "2.0.5", ", ", {2013, 7, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822318426*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"db21abe9-4834-49e9-b800-0e9b8d1c91e5"],

Cell[BoxData["\<\"CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes \
and R. Portugal, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822319963*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e3b1c138-a456-417f-8131-69b56dab9425"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "sigma", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`sigma, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822343874*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"55a449e1-cb5c-406f-a16c-cdc25bc01845"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "dim", "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`dim, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388223454943`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"62c930f2-8754-4cc8-8f8f-68141b289fe7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "True",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", True, " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822346901*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f23d694a-cea0-48b0-8de2-f9879a3d993b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "True", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", True,
    " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388223480587`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"0817f422-7f11-4882-b4d8-fe4e08c0e40c"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822376485*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"cf4c3708-f1e0-4d3c-9523-527bd78e8485"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xCoba`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xCoba`  version ", "0.8.6", ", ", {2021, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822378343*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ca06e225-ef6f-41da-abbb-570dd01ec00c"],

Cell[BoxData["\<\"CopyRight (C) 2005-2021, David Yllanes and Jose M. \
Martin-Garcia, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938822379839*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"20cde143-3fa3-4917-903f-a13f0a41423d"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938824543933*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"733ae060-8d51-494b-b301-80ebb0b134e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`SymManipulator`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.4\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "11", ",", "29"}], "}"}]}],
  SequenceForm[
  "Package xAct`SymManipulator`  version ", "0.9.4", ", ", {2016, 11, 29}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938824546048*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d8621139-c3be-4c01-94fb-763a30af6611"],

Cell[BoxData["\<\"CopyRight (C) 2011-2016, Thomas B\[ADoubleDot]ckdahl, under \
the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938824547668*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2a6c93ad-5061-44f1-b33d-9dd76b822052"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388246143703`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"28877269-bb74-4f41-b665-8b94e87a944d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTras`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "10", ",", "30"}], "}"}]}],
  SequenceForm["Package xAct`xTras`  version ", "1.4.2", ", ", {2014, 10, 30}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938824617058*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"145cdc3b-6908-4825-ab14-5eda35e8028f"],

Cell[BoxData["\<\"CopyRight (C) 2012-2014, Teake Nutma, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938824618292*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"dd51e17f-1d4c-45f2-b717-6ec6305e4615"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Postfix\"\>", 
   "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Postfix", 
   " to ", "Prefix"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938824619567*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b3f19445-a87d-4263-8de0-cf5cf92188aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938824620721*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"009883a8-c6bd-486c-9d96-c9d942c0a390"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825487585*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"63747ccc-0e1a-4c69-9952-18d8421aeefa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`TexAct`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "19"}], "}"}]}],
  SequenceForm["Package xAct`TexAct`  version ", "0.4.2", ", ", {2021, 2, 19}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825489094*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"57c6c041-dc0b-43aa-89df-669a166caac8"],

Cell[BoxData["\<\"CopyRight (C) 2008-2021, Thomas B\[ADoubleDot]ckdahl, Jose \
M. Martin-Garcia and Barry Wardell, under the General Public License.\"\>"], \
"Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825490161*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9ae192d3-bbba-4d76-815b-8d8f14d9b63b"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388256113663`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c0c8db2d-d04c-4da4-a670-f39c66d5d0d8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`FieldsX` version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "5", ",", "27"}], "}"}]}],
  SequenceForm["Package xAct`FieldsX` version ", "1.1.3", ", ", {2021, 5, 27}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825613823*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6f066cab-cc64-4632-b543-b8d44e81cfb5"],

Cell[BoxData["\<\"Copyright \[Copyright] 2019-2021 Markus B. Fr\[ODoubleDot]b \
under the GNU General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388256158667`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"642efa45-d664-44ce-b68d-fd7e9c22822f"],

Cell[BoxData["\<\"FieldsX uses the Multisets package \[Copyright] 2011 David \
Bevan under the Wolfram Library Archive License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388256181107`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2ba156ff-3710-4b00-b7ea-4e2b5e078cf3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "False", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", 
   False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825654396*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e5d9a255-1ef5-4d8c-a7de-b47401ee3fce"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825847178*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"47608550-de49-407c-979b-2ae0d5a6c275"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2019", ",", "5", ",", "17"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTerior`  version ", "0.9.1", ", ", {2019, 5, 17}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388258495207`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a1229884-6664-4403-8278-781103d4d777"],

Cell[BoxData["\<\"CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and \
Leo C. Stein, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.8689388258514547`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d342f98f-73bf-42e0-b010-8b1e1a301217"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825891816*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b4153185-97d6-45f5-bf0c-07a5d0639a11"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package SolutionsX`SolutionsX`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.0.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2022", ",", "3", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package SolutionsX`SolutionsX`  version ", "0.0.1", ", ", {2022, 3, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825895949*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"78411d0d-8285-4872-b826-7e1d7a889bbd"],

Cell[BoxData["\<\"Copyright (C) 2022, Vasil Dimitrov, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825897902*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e61a3b18-216f-4b92-90ef-138e77ca2b86"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825899611*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"07991cec-a7d5-4264-9cae-3c1a25cc0c3d"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825901259*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"13193410-9730-4945-ac34-0c3764b72b5e"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868868143839155*^9, 3.8688689176491013`*^9, 
  3.8688692801212597`*^9, 3.86887164515594*^9, 3.8688718848467083`*^9, 
  3.868875275582636*^9, 3.8688757639173603`*^9, 3.868877061559853*^9, 
  3.868938825903406*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fc5b731c-9e23-46a3-829a-f0bbdbb943e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On-shell action (background subtraction)", "Section",
 CellChangeTimes->{{3.8688011031246634`*^9, 
  3.8688011182055187`*^9}},ExpressionUUID->"fad241a9-ba0d-4d26-9482-\
5d5d600d9380"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{"CCLP", ",", "Bulk", ",", "Hopf1", ",", "Euclidean"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868801408305434*^9, 3.8688014289312563`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"7fe015d1-4f42-49a7-8c88-cc53b2970bdd"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"5\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.868877081264183*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"2f5c7a05-f9bf-4874-9b76-6acaf54dc20c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"b\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\
\\\", \\\",\\\", \\\"\[Alpha]\\\", \\\",\\\", \\\"\[CapitalXi]a\\\", \
\\\",\\\", \\\"\[CapitalXi]b\\\", \\\",\\\", \\\"Cx\\\"}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"b\", \",\", \
\"m\", \",\", \"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \
\"\[CapitalXi]a\", \",\", \"\[CapitalXi]b\", \",\", \"Cx\"}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.868877081268977*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"e530404f-9cb4-4f0d-908d-fd6b00abb8f1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined scalar functions \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\
\[CapitalDelta]r\\\", \\\",\\\", \\\"\[CapitalDelta]\[Eta]\\\", \\\",\\\", \\\
\"\[Rho]2\\\", \\\",\\\", \\\"f\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined scalar functions ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[CapitalDelta]r\", \",\", \
\"\[CapitalDelta]\[Eta]\", \",\", \"\[Rho]2\", \",\", \"f\"}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.868877081274129*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"22fd40ea-e182-41d9-bb26-81e75165575c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.8688770812779503`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"5d9125d8-e748-4766-a44b-b1aa23cd7799"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.8688770812820787`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"d7a3e356-4964-49b6-ac31-f5b092ea7cbd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.868877081678795*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"ab17995a-ef3c-45a4-b6f1-99689a3a357e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\
\[Tau]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"r\\\", \\\"(\\\", \
\\\")\\\"}], \\\",\\\", RowBox[{\\\"c\[Eta]\\\", \\\"(\\\", \\\")\\\"}], \
\\\",\\\", RowBox[{\\\"\[Xi]1\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", \
RowBox[{\\\"\[Xi]2\\\", \\\"(\\\", \\\")\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"\[Tau]\", \"(\", \")\
\"}], \",\", RowBox[{\"r\", \"(\", \")\"}], \",\", RowBox[{\"c\[Eta]\", \
\"(\", \")\"}], \",\", RowBox[{\"\[Xi]1\", \"(\", \")\"}], \",\", RowBox[{\"\
\[Xi]2\", \"(\", \")\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.8688770818641233`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"3cf5174b-bdb4-4d89-9061-c46bb1bf5288"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/Default\\\\\\\"\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/Default\\\"\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868868162168271*^9, 3.868868924513629*^9, 
  3.868869289617481*^9, 3.8688753024996977`*^9, 3.868875770812387*^9, 
  3.868877082443605*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"58450e72-3be4-4e78-aa54-af2bee1b74dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LoadAppendConstant", "[", 
  RowBox[{"{", 
   RowBox[{"r0", ",", "rp", ",", "G5", ",", "\[Beta]"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendAssumption", "[", 
  RowBox[{"$constant", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "<", "rp", "<", "$infinity"}], ",", 
     RowBox[{"0", "<", "r0", "<", "$infinity"}], ",", 
     RowBox[{"rp", "<", "r0"}], ",", 
     RowBox[{"0", "<", "G5", "<", "$infinity"}], ",", 
     RowBox[{"0", "<", "\[Beta]", "<", "$infinity"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"mTrp", ",", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Bulk", ",", "Hopf1", ",", "Lorentzian", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "mTrp"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"T\[CapitalXi]", ",", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Bulk", ",", "Hopf1", ",", "Lorentzian", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "T\[CapitalXi]"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"\[Alpha]T\[CapitalPhi]", ",", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Bulk", ",", "Hopf1", ",", "Lorentzian", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "\[Alpha]T\[CapitalPhi]"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86886829508323*^9, 3.868868304897133*^9}, {
  3.868869352205431*^9, 3.868869359508335*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0e72eb3d-4978-4daa-825f-ff40fa48c0c4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"r0\\\", \
\\\",\\\", \\\"rp\\\", \\\",\\\", \\\"G5\\\", \\\",\\\", \\\"\[Beta]\\\"}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"b\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\
\\\", \\\",\\\", \\\"\[Alpha]\\\", \\\",\\\", \\\"\[CapitalXi]a\\\", \
\\\",\\\", \\\"\[CapitalXi]b\\\", \\\",\\\", \\\"Cx\\\"}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"r0\", \",\", \"rp\", \",\", \
\"G5\", \",\", \"\[Beta]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"b\", \",\", \
\"m\", \",\", \"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \
\"\[CapitalXi]a\", \",\", \"\[CapitalXi]b\", \",\", \"Cx\"}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868869473434067*^9, 3.868875305586029*^9, 
  3.868875772262478*^9, 3.868877083638455*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"ea00df39-113f-45f0-ad58-4e9b40e976a5"]
}, Open  ]],

Cell[TextData[{
 "The black hole metric for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    RowBox[{"m", "=", "0"}]}], TraditionalForm]],ExpressionUUID->
  "4e26b02c-3dbd-4908-b05c-2bcab4080892"],
 " is the same as the AdS metric when the following coordinate transformation \
is performed (automatically done when calling Solution)"
}], "Text",
 CellChangeTimes->{{3.868802898367456*^9, 3.8688029620354977`*^9}, {
  3.868803007367436*^9, 3.868803036359335*^9}, {3.8688030982596207`*^9, 
  3.8688030984206448`*^9}},ExpressionUUID->"b491e497-3f34-4af7-9f31-\
d29f5ce62ee2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$olution", "[", 
    RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], "/.", 
   RowBox[{"q", "\[Rule]", "0"}]}], "/.", 
  RowBox[{"m", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"AdS5", ",", "Bulk", ",", "Hopf1", ",", "Euclidean"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "}"}]}], "]"}], "//", 
  "Simplification"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "-", "%%"}], "//", "Simplification"}], "\[IndentingNewLine]", 
 RowBox[{"cc", "=", 
  RowBox[{"ChangeCoord", "[", 
   RowBox[{"{", 
    RowBox[{"AdS5", ",", "Bulk", ",", "Hopf1", ",", "Euclidean"}], "}"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.868802117500979*^9, 3.868802123383965*^9}, {
  3.868802747867311*^9, 3.868802761315836*^9}, {3.868802965378408*^9, 
  3.86880298339478*^9}, {3.868803230114003*^9, 3.868803230936153*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"86227145-c01f-4fb1-a90f-d6a2ade4e8ef"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]1",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]1",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
      Editable->False]}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["c\[Eta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{"1", "-", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`a,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"]}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]2",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]2",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
      Editable->False]}], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["c\[Eta]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
      Editable->False], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{"1", "-", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"]}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`c\[Eta][], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`c\[Eta][], xAct`xTensor`PD],
      Editable->False]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["c\[Eta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
      Editable->False]}], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`r[],
      Editable->False], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Tau]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Tau][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Tau]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Tau][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
      Editable->False]}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "2"]}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.868869488027267*^9, 3.8688753087240877`*^9, 
  3.86887577502973*^9, 3.868877090610138*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"3cd765e3-c992-4983-8184-5408625a30d5"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]1",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]1",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
      Editable->False]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["c\[Eta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`a,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"]}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]2",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Xi]2",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
      Editable->False]}], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["c\[Eta]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
      Editable->False], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"]}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`c\[Eta][], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`c\[Eta][], xAct`xTensor`PD],
      Editable->False]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["c\[Eta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
      Editable->False]}], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`r[],
      Editable->False], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "2"]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Tau]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Tau][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["\[Tau]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[Tau][],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
      Editable->False]}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["c\[Eta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
           Editable->False], "2"]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r[],
         Editable->False], "2"]}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.868869488027267*^9, 3.8688753087240877`*^9, 
  3.86887577502973*^9, 3.868877102671118*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"c6cc34a1-0ddf-4849-831d-d7dac3c63f5e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.868869488027267*^9, 3.8688753087240877`*^9, 
  3.86887577502973*^9, 3.868877102802994*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"48af9113-e394-4d7d-af3c-c3538364ae20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AdS5`Bulk`Hopf1`Euclidean`\[Tau]", "\[Rule]", "\[Tau]"}], ",", 
   RowBox[{"AdS5`Bulk`Hopf1`Euclidean`r", "\[Rule]", 
    SqrtBox[
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}]}], 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c\[Eta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], "+", 
          SuperscriptBox["r", "2"]}], ")"}]}], 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}]]}]]}], ",", 
   RowBox[{"AdS5`Bulk`Hopf1`Euclidean`\[Eta]", "\[Rule]", 
    RowBox[{
     InterpretationBox[
      StyleBox["ArcSin",
       ShowAutoStyles->False,
       AutoSpacing->False],
      ArcSin,
      Editable->False], "[", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["c\[Eta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`a,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`g,
               Editable->False], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox[
              InterpretationBox[
               StyleBox["b",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`b,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`g,
               Editable->False], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`a,
              Editable->False], "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}]]}]]], "]"}]}], ",", 
   RowBox[{"AdS5`Bulk`Hopf1`Euclidean`\[Xi]1", "\[Rule]", "\[Xi]1"}], ",", 
   RowBox[{"AdS5`Bulk`Hopf1`Euclidean`\[Xi]2", "\[Rule]", "\[Xi]2"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.868869488027267*^9, 3.8688753087240877`*^9, 
  3.86887577502973*^9, 3.868877102806264*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c4a0100c-d01e-43d6-9efa-8c3441cf144e"]
}, Open  ]],

Cell[TextData[{
 "Further the black hole metric with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{"q", "=", 
     RowBox[{"a", "=", 
      RowBox[{"b", "=", "0"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "11e3de1b-ae45-4117-bce4-44c3365b22d1"],
 " is precisely the same as AdS in canonical coordinates"
}], "Text",
 CellChangeTimes->{{3.8688030780226*^9, 
  3.868803123608835*^9}},ExpressionUUID->"d9f0096c-9525-4770-9f29-\
1d6bacc2e86f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"$olution", "[", 
        RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], "/.", 
       RowBox[{"q", "\[Rule]", "0"}]}], "/.", 
      RowBox[{"m", "\[Rule]", "0"}]}], "/.", 
     RowBox[{"a", "\[Rule]", "0"}]}], "/.", 
    RowBox[{"b", "\[Rule]", "0"}]}], "/.", 
   RowBox[{
    RowBox[{"c\[Eta]", "[", "]"}], "\[Rule]", 
    RowBox[{"Cos", "[", 
     RowBox[{"c\[Eta]", "[", "]"}], "]"}]}]}], "//", 
  "Simplification"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"AdS5", ",", "Bulk", ",", "Hopf1", ",", "Euclidean"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "}"}], ",", 
    RowBox[{"ChangeCoord", "\[Rule]", "False"}]}], "]"}], "//", 
  "Simplification"}]}], "Input",
 CellChangeTimes->{{3.868802798652238*^9, 3.868802860099091*^9}, {
  3.868802891343992*^9, 3.868802891724257*^9}, {3.868869539907353*^9, 
  3.8688695492693243`*^9}, {3.8688695934191008`*^9, 3.868869617561471*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6cd0565e-8ca6-4918-b8f3-9f3c36aab267"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      CCLP`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
     Editable->False], "\[CircleTimes]", 
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      CCLP`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
     Editable->False]}], 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["r",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`r[],
       Editable->False], "2"]}]}]], "+", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Tau]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[Tau][],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      CCLP`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
     Editable->False], "\[CircleTimes]", 
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Tau]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[Tau][],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      CCLP`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
     Editable->False]}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    InterpretationBox[
     StyleBox["r",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`r[],
     Editable->False], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      InterpretationBox[
       StyleBox[
        RowBox[{"d", "[", 
         InterpretationBox[
          StyleBox["c\[Eta]",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
          Editable->False], "]"}],
        ShowAutoStyles->False,
        AutoSpacing->False],
       xAct`xTerior`Diff[
        CCLP`Bulk`Hopf1`Euclidean`c\[Eta][], xAct`xTensor`PD],
       Editable->False], "\[CircleTimes]", 
      InterpretationBox[
       StyleBox[
        RowBox[{"d", "[", 
         InterpretationBox[
          StyleBox["c\[Eta]",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
          Editable->False], "]"}],
        ShowAutoStyles->False,
        AutoSpacing->False],
       xAct`xTerior`Diff[
        CCLP`Bulk`Hopf1`Euclidean`c\[Eta][], xAct`xTensor`PD],
       Editable->False]}], "+", 
     RowBox[{
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Xi]2",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Xi]2",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       RowBox[{
        InterpretationBox[
         StyleBox["Cos",
          ShowAutoStyles->False,
          AutoSpacing->False],
         Cos,
         Editable->False], "[", 
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Xi]1",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Xi]1",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       RowBox[{
        InterpretationBox[
         StyleBox["Sin",
          ShowAutoStyles->False,
          AutoSpacing->False],
         Sin,
         Editable->False], "[", 
        InterpretationBox[
         StyleBox["c\[Eta]",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`c\[Eta][],
         Editable->False], "]"}], "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.86886954968016*^9, {3.868869607244609*^9, 3.868869617992639*^9}, 
   3.8688753213607492`*^9, 3.868875788846753*^9, 3.868877105796699*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"7015466f-774e-4afd-918e-02d61fda3c44"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Eta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Eta][],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Eta][], xAct`xTensor`PD],
     Editable->False], "\[CircleTimes]", 
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Eta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Eta][],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Eta][], xAct`xTensor`PD],
     Editable->False]}], " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["r",
      ShowAutoStyles->False,
      AutoSpacing->False],
     AdS5`Bulk`Hopf1`Euclidean`r[],
     Editable->False], "2"]}], "+", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Xi]2",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Xi]2[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
     Editable->False], "\[CircleTimes]", 
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Xi]2",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Xi]2[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Xi]2[], xAct`xTensor`PD],
     Editable->False]}], " ", 
   SuperscriptBox[
    RowBox[{
     InterpretationBox[
      StyleBox["Cos",
       ShowAutoStyles->False,
       AutoSpacing->False],
      Cos,
      Editable->False], "[", 
     InterpretationBox[
      StyleBox["\[Eta]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      AdS5`Bulk`Hopf1`Euclidean`\[Eta][],
      Editable->False], "]"}], "2"], " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["r",
      ShowAutoStyles->False,
      AutoSpacing->False],
     AdS5`Bulk`Hopf1`Euclidean`r[],
     Editable->False], "2"]}], "+", 
  FractionBox[
   RowBox[{
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
     Editable->False], "\[CircleTimes]", 
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`r[], xAct`xTensor`PD],
     Editable->False]}], 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["r",
        ShowAutoStyles->False,
        AutoSpacing->False],
       AdS5`Bulk`Hopf1`Euclidean`r[],
       Editable->False], "2"]}]}]], "+", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Tau]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Tau][],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
     Editable->False], "\[CircleTimes]", 
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Tau]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Tau][],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Tau][], xAct`xTensor`PD],
     Editable->False]}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`r[],
        Editable->False], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Xi]1",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Xi]1[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
     Editable->False], "\[CircleTimes]", 
    InterpretationBox[
     StyleBox[
      RowBox[{"d", "[", 
       InterpretationBox[
        StyleBox["\[Xi]1",
         ShowAutoStyles->False,
         AutoSpacing->False],
        AdS5`Bulk`Hopf1`Euclidean`\[Xi]1[],
        Editable->False], "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Diff[
      AdS5`Bulk`Hopf1`Euclidean`\[Xi]1[], xAct`xTensor`PD],
     Editable->False]}], " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["r",
      ShowAutoStyles->False,
      AutoSpacing->False],
     AdS5`Bulk`Hopf1`Euclidean`r[],
     Editable->False], "2"], " ", 
   SuperscriptBox[
    RowBox[{
     InterpretationBox[
      StyleBox["Sin",
       ShowAutoStyles->False,
       AutoSpacing->False],
      Sin,
      Editable->False], "[", 
     InterpretationBox[
      StyleBox["\[Eta]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      AdS5`Bulk`Hopf1`Euclidean`\[Eta][],
      Editable->False], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.86886954968016*^9, {3.868869607244609*^9, 3.868869617992639*^9}, 
   3.8688753213607492`*^9, 3.868875788846753*^9, 3.86887710602949*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"454b9b7b-33e8-4209-aca1-430d392129f0"]
}, Open  ]],

Cell["\<\
However, the volume of the boundary of the BH and the \
\[OpenCurlyDoubleQuote]rotating\[CloseCurlyDoubleQuote] AdS differ\
\>", "Text",
 CellChangeTimes->{{3.868803292030212*^9, 3.8688033918061647`*^9}, {
  3.868869664964707*^9, 
  3.8688696658968287`*^9}},ExpressionUUID->"36e38752-ac67-48ad-ac7a-\
94968801ed8d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateMetric", "[", 
    RowBox[{
     RowBox[{"$olution", "[", 
      RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "c\[Eta]", ",", "\[Xi]1", ",", "\[Xi]2"}], 
      "}"}]}], "]"}], "/.", "ToCoord"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SqrtBox[
   RowBox[{"Det", "@", "%"}]], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Infinity]", ",", "0"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", ">", "0"}], ",", 
        RowBox[{"g", ">", "0"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"4", 
    SuperscriptBox["\[Pi]", "2"], "\[Beta]", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"c\[Eta]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"r", "\[Rule]", "r0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"bdyVolBH", "=", 
  RowBox[{
   RowBox[{"Normal", "@", 
    RowBox[{"Series", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "T\[CapitalXi]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.868801619672933*^9, 3.868801692299142*^9}, {
   3.868801730041313*^9, 3.868801756233737*^9}, {3.8688018026161947`*^9, 
   3.8688018035372667`*^9}, 3.86880203281071*^9, {3.868803154729981*^9, 
   3.868803160281584*^9}, {3.8688697320219793`*^9, 3.868869741832041*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"404f75d0-a440-4cb2-84d8-0ea00c474205"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["c\[Eta]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox["c\[Eta]", "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
      SuperscriptBox["r", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False]}], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "+", 
         SuperscriptBox["r", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "-", 
         RowBox[{"2", " ", 
          InterpretationBox[
           StyleBox["m",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`m,
           Editable->False]}], "+", 
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox["r", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox["r", "4"]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"]}]]]], "Output",
 CellChangeTimes->{3.868869743829501*^9, 3.868875326845438*^9, 
  3.868875791825185*^9, 3.868877119023328*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"238acb19-4948-4362-9ef7-77768cec92e1"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "-", 
         RowBox[{"11", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{"24", " ", 
          InterpretationBox[
           StyleBox["m",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`m,
           Editable->False]}]}], ")"}]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{"12", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`g,
      Editable->False], "3"], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`r0,
      Editable->False], "2"], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{"2", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`g,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`r0,
      Editable->False], "4"], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]]}]], "Output",
 CellChangeTimes->{3.868869743829501*^9, 3.868875326845438*^9, 
  3.868875791825185*^9, 3.868877161666761*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"80544653-e2ab-4c8f-8e66-5590188a7232"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateMetric", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"$olution", "[", 
       RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "\[Rule]", "0"}], ",", 
        RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "c\[Eta]", ",", "\[Xi]1", ",", "\[Xi]2"}], 
      "}"}]}], "]"}], "/.", "ToCoord"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SqrtBox[
   RowBox[{"Det", "@", "%"}]], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Infinity]", ",", "0"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", ">", "0"}], ",", 
        RowBox[{"g", ">", "0"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"4", 
    SuperscriptBox["\[Pi]", "2"], "\[Tau]upper", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"c\[Eta]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"r", "\[Rule]", "r0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"bdyVolAdS", "=", 
  RowBox[{
   RowBox[{"Normal", "@", 
    RowBox[{"Series", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "T\[CapitalXi]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.868801982053246*^9, 3.868801995327601*^9}, {
   3.868802028217029*^9, 3.8688020359344683`*^9}, {3.868803192724639*^9, 
   3.868803200773231*^9}, {3.868869698315099*^9, 3.868869701879466*^9}, 
   3.8688698102161417`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"5e589457-016f-4010-8375-575aa043b403"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["c\[Eta]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], "2"], "+", 
      SuperscriptBox["r", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox["c\[Eta]", "2"]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
      SuperscriptBox["r", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox["r", "2"]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"]}]]]], "Output",
 CellChangeTimes->{3.868869812480918*^9, 3.868875370061928*^9, 
  3.86887583528883*^9, 3.8688771785403767`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a0f02e11-dd01-43ce-ae72-398dc8451937"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "-", 
         RowBox[{"11", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", "\[Tau]upper"}], 
   RowBox[{"12", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`g,
      Editable->False], "3"], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`r0,
      Editable->False], "2"], " ", "\[Tau]upper"}], 
   RowBox[{"2", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`g,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`r0,
      Editable->False], "4"], " ", "\[Tau]upper"}], 
   RowBox[{
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]]}]], "Output",
 CellChangeTimes->{3.868869812480918*^9, 3.868875370061928*^9, 
  3.86887583528883*^9, 3.8688772207741833`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"bc16aad8-e109-4c97-86f1-940d9d99df1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bdyVolBH", "-", "bdyVolAdS"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "@", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"%", "==", "0"}], ",", "\[Tau]upper", ",", 
     RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "4"}], "}"}]}], "]"}]}]}], 
     "&"}], "/@", 
    RowBox[{"Association", "@", "%"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"\[Tau]upper", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8688033953817463`*^9, 3.868803488115831*^9}, {
   3.868803524801414*^9, 3.868803566729087*^9}, {3.868803694030005*^9, 
   3.868803699724072*^9}, {3.868869867602347*^9, 3.868869956567425*^9}, {
   3.868869990363159*^9, 3.868870022899172*^9}, 3.8688701085246143`*^9, {
   3.868870266405458*^9, 3.868870387768364*^9}, {3.8688704384502487`*^9, 
   3.868870464919623*^9}, {3.868870888194586*^9, 3.868870908122327*^9}, 
   3.868875348649721*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"dad45cf4-3243-4e1b-9e47-2ae96cd6b1a6"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{"24", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r0",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`r0,
           Editable->False], "4"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "8"}], " ", 
            InterpretationBox[
             StyleBox["m",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`m,
             Editable->False]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"9", "+", 
           RowBox[{"11", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"]}], "+", 
           RowBox[{"18", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["g",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`g,
             Editable->False], "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "4"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "4"]}], "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"9", "+", 
           RowBox[{"11", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"]}], "+", 
           RowBox[{"18", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}], "-", 
        RowBox[{"9", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["g",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`g,
             Editable->False], "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "4"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`g,
              Editable->False], "4"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`r0,
              Editable->False], "4"]}]}], ")"}]}]}], ")"}], " ", 
      "\[Tau]upper"}]}], ")"}]}], 
  RowBox[{"12", " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`g,
     Editable->False], "3"], " ", 
   InterpretationBox[
    StyleBox["\[CapitalXi]a",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
    Editable->False], " ", 
   InterpretationBox[
    StyleBox["\[CapitalXi]b",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
    Editable->False]}]]], "Output",
 CellChangeTimes->{
  3.8688698971197357`*^9, 3.86886996008409*^9, {3.868870016888804*^9, 
   3.868870023631413*^9}, 3.868870109689843*^9, {3.868870273848139*^9, 
   3.868870311431054*^9}, {3.868870345009424*^9, 3.8688703884287033`*^9}, {
   3.868870444002817*^9, 3.8688704694974327`*^9}, 3.868870910753743*^9, 
   3.868875422113337*^9, 3.8688758787774754`*^9, 3.868877237117361*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"18976968-6be4-4d0d-a159-0487bbb49a79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Tau]upper", "\[Rule]", 
   RowBox[{
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[Beta],
     Editable->False], "-", 
    FractionBox[
     RowBox[{
      InterpretationBox[
       StyleBox["m",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`m,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8688698971197357`*^9, 3.86886996008409*^9, {3.868870016888804*^9, 
   3.868870023631413*^9}, 3.868870109689843*^9, {3.868870273848139*^9, 
   3.868870311431054*^9}, {3.868870345009424*^9, 3.8688703884287033`*^9}, {
   3.868870444002817*^9, 3.8688704694974327`*^9}, 3.868870910753743*^9, 
   3.868875422113337*^9, 3.8688758787774754`*^9, 3.8688772376037083`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"1f798de1-9d9a-4834-96c2-3057a5a333f0"]
}, Open  ]],

Cell[TextData[{
 "Also, due to the coordinate transformation between the \
\[OpenCurlyDoubleQuote]rotating\[CloseCurlyDoubleQuote] and the \
\[OpenCurlyDoubleQuote]canonical\[CloseCurlyDoubleQuote] AdS the lower \
boundary of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "93010312-d77a-42d3-9362-61106fcdfd88"],
 " should also be changed according to"
}], "Text",
 CellChangeTimes->{{3.8688705051373453`*^9, 
  3.868870556619504*^9}},ExpressionUUID->"d1e9185e-f11e-4c7f-bd43-\
5829427c04e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"First", "@", 
    RowBox[{"Values", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Values", "@", "cc"}], ")"}], "\[LeftDoubleBracket]", 
              "2", "\[RightDoubleBracket]"}], ")"}], "2"], "/.", 
           RowBox[{
            SuperscriptBox["r", "2"], ":>", "r2"}]}], ")"}], "==", "0"}], ",",
         "r2", ",", 
        RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}]}]}]}], "//", 
   "Simplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SqrtBox[
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{
           SuperscriptBox["a", "2"], "\[CapitalXi]b", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["b", "2"], "\[CapitalXi]a", " ", 
           SuperscriptBox["c\[Eta]", "2"]}]}], 
         RowBox[{
          RowBox[{"\[CapitalXi]b", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
          RowBox[{"\[CapitalXi]a", " ", 
           SuperscriptBox["c\[Eta]", "2"]}]}]]}]], ")"}], "2"], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "const"}], "]"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "-", "%%"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"rlower", "\[Rule]", 
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "2"], "\[CapitalXi]b", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["b", "2"], "\[CapitalXi]a", " ", 
        SuperscriptBox["c\[Eta]", "2"]}]}], 
      RowBox[{
       RowBox[{"\[CapitalXi]b", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
       RowBox[{"\[CapitalXi]a", " ", 
        SuperscriptBox["c\[Eta]", "2"]}]}]]}]]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"rlower", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8688705810168257`*^9, 3.86887058261016*^9}, {
  3.8688706301147547`*^9, 3.868870643253333*^9}, {3.868870711334218*^9, 
  3.868870831750765*^9}, {3.8688709195807753`*^9, 3.8688709303590307`*^9}, {
  3.868870990551158*^9, 3.8688709913798532`*^9}, {3.8688754427741613`*^9, 
  3.868875453899304*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"c48c7848-b8dd-493d-9680-439fb028c0e7"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.868870570540546*^9, 3.8688705839382133`*^9}, {
   3.868870633257299*^9, 3.868870644119626*^9}, {3.868870715332177*^9, 
   3.868870748597356*^9}, {3.868870817745062*^9, 3.868870832536314*^9}, 
   3.868870934922655*^9, 3.868870992302824*^9, 3.868875456742182*^9, 
   3.868875879320593*^9, 3.868877247248087*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"62bd82a0-031e-417a-9485-c7d2946cef86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"rlower", "\[Rule]", 
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "2"], " ", 
        InterpretationBox[
         StyleBox["\[CapitalXi]a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
         Editable->False]}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
        InterpretationBox[
         StyleBox["\[CapitalXi]b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
         Editable->False]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["c\[Eta]", "2"], " ", 
        InterpretationBox[
         StyleBox["\[CapitalXi]a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
         Editable->False]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
        InterpretationBox[
         StyleBox["\[CapitalXi]b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
         Editable->False]}]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.868870570540546*^9, 3.8688705839382133`*^9}, {
   3.868870633257299*^9, 3.868870644119626*^9}, {3.868870715332177*^9, 
   3.868870748597356*^9}, {3.868870817745062*^9, 3.868870832536314*^9}, 
   3.868870934922655*^9, 3.868870992302824*^9, 3.868875456742182*^9, 
   3.868875879320593*^9, 3.868877247251544*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"b4c123b8-2d91-46d9-9455-c67bac04967c"]
}, Open  ]],

Cell["\<\
These are the terms and the coefficients of the Euclidean action\
\>", "Text",
 CellChangeTimes->{{3.868877252306622*^9, 
  3.868877268718069*^9}},ExpressionUUID->"e3559562-9994-4114-936f-\
bebd2b76aca0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"RicciScalarcd", "[", "]"}]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    SuperscriptBox["g", "2"]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"FF", "[", 
     RowBox[{"\[ScriptA]", ",", "\[ScriptB]"}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptA]"}], ",", 
      RowBox[{"-", "\[ScriptB]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"etaUpcurved", "[", 
     RowBox[{
     "\[ScriptA]", ",", "\[ScriptB]", ",", "\[ScriptC]", ",", "\[ScriptD]", 
      ",", "\[ScriptE]"}], "]"}], 
    RowBox[{"AA", "[", 
     RowBox[{"-", "\[ScriptA]"}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptB]"}], ",", 
      RowBox[{"-", "\[ScriptC]"}]}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptD]"}], ",", 
      RowBox[{"-", "\[ScriptE]"}]}], "]"}]}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"terms", ",", "%"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"16", "\[Pi]", " ", "G5"}]]}], 
  RowBox[{"{", 
   RowBox[{"1", ",", "12", ",", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["Cx", "2"], 
      RowBox[{"2", "*", 
       RowBox[{"2", "!"}]}]]}], ",", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["Cx", "3"]}], 
     RowBox[{"3", 
      SqrtBox["3"], 
      RowBox[{"2", "!"}], "*", 
      RowBox[{"2", "!"}]}]]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"coeff", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868875566047092*^9, 3.8688756226377087`*^9}, {
  3.868875815069652*^9, 3.868875832511763*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"010536c3-8421-408d-86da-812e1f410665"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`g,
      Editable->False], "2"], " ", 
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detgg[],
      Editable->False]]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptA]", "\[ScriptB]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {"\[ScriptA]", "\[ScriptB]"},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[
     CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
     Editable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[GridBox[{
        {"A", 
         StyleBox[GridBox[{
            {" "},
            {"\[ScriptA]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`AA[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {
         OverscriptBox["\[Eta]", 
          StyleBox["~",
           FontColor->RGBColor[1, 0, 0]]], 
         StyleBox[GridBox[{
            {"\[ScriptA]", "\[ScriptB]", "\[ScriptC]", "\[ScriptD]", 
             "\[ScriptE]"},
            {" ", " ", " ", " ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[
     CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptB]", "\[ScriptC]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptC]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptD]", "\[ScriptE]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8688755709787283`*^9, 3.868875627495797*^9, 
  3.868875888669066*^9, 3.868877275206963*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d18c90ff-8abb-40c8-9d8d-7f8882f4dbeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"16", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox["3", 
     RowBox[{"4", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    SuperscriptBox[
     InterpretationBox[
      StyleBox["Cx",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Cx,
      Editable->False], "2"], 
    RowBox[{"64", " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "3"]}], 
     RowBox[{"192", " ", 
      SqrtBox["3"], " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8688755709787283`*^9, 3.868875627495797*^9, 
  3.868875888669066*^9, 3.868877275212556*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"c3f6c53f-5b0a-4dd1-9d5f-7687c520d50d"]
}, Open  ]],

Cell["These are the specific expressions for the terms", "Text",
 CellChangeTimes->{{3.8688772988876047`*^9, 
  3.868877333628023*^9}},ExpressionUUID->"6e2f8d22-553a-4554-b786-\
e89f997cbf93"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
    RowBox[{"(", "#", ")"}]}], "&"}], "/@", 
  RowBox[{"$olution", "[", 
   RowBox[{"$rule", ",", "terms"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Simplify", "@", 
      RowBox[{"ToValues2", "@", 
       RowBox[{"Simplification", "@", 
        RowBox[{"TraceBasisDummy", "@", "#"}]}]}]}], ")"}], "&"}], "/@", 
   "%"}], "/.", "ToCoord"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"integrands", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868875693763183*^9, 3.8688757379303427`*^9}, {
  3.868875837914734*^9, 3.868875846035383*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"a4273cd4-bc4c-4e19-adb2-63ce67d52d4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`g,
      Editable->False], "2"], " ", 
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detggcurved[],
      Editable->False]]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf1`Euclidean`curved}, {-
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[GridBox[{
        {"A", 
         StyleBox[GridBox[{
            {" "},
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`AA[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {
         OverscriptBox["\[Eta]", 
          StyleBox["~",
           FontColor->RGBColor[1, 0, 0]]], 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptC]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptD]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptE]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" ", " ", " ", " ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[{
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptE], CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptC]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
       CCLP`Bulk`Hopf1`Euclidean`curved}, {-
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptD]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptE]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
       CCLP`Bulk`Hopf1`Euclidean`curved}, {-
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptE], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.868875715818969*^9, 3.868875742245246*^9}, 
   3.868875893611141*^9, 3.868877336008553*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f93eea2f-5a70-4bd4-b0ae-e1993079fc9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"c\[Eta]", " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
       SuperscriptBox["r", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "20"}], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`q,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`a,
               Editable->False], "2"]}], " ", 
            SuperscriptBox["c\[Eta]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
           SuperscriptBox["r", "2"]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`a,
              Editable->False], "2"], " ", 
            SuperscriptBox["c\[Eta]", "2"]}], "-", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], "4"]]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"c\[Eta]", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"], " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
       SuperscriptBox["r", "2"]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"24", " ", "c\[Eta]", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`q,
       Editable->False], "2"], " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "-", 
       SuperscriptBox["r", "2"]}], ")"}]}], 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["Cx",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`Cx,
       Editable->False], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox["c\[Eta]", "2"]}], "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
        SuperscriptBox["r", "2"]}], ")"}], "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"96", " ", "\[ImaginaryI]", " ", 
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], " ", "c\[Eta]", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], "2"], " ", "r", " ", 
      InterpretationBox[
       StyleBox["\[Alpha]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Alpha],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox["c\[Eta]", "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
         SuperscriptBox["r", "2"]}], ")"}], "3"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.868875715818969*^9, 3.868875742245246*^9}, 
   3.868875893611141*^9, 3.868877337066483*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"50bfd95c-ce56-43b0-84cd-db1465f2d726"]
}, Open  ]],

Cell["We now integrate", "Text",
 CellChangeTimes->{{3.868877353692675*^9, 
  3.868877356912724*^9}},ExpressionUUID->"43f88b95-61bc-4e87-bf14-\
073b42d77ed6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ActionIntegrate", "[", 
   RowBox[{"integrand_", ",", 
    RowBox[{"{", 
     RowBox[{"rLower_", ",", "rUpper_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]Lower_", ",", "\[Tau]Upper_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"integrand", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rUpper"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rLower"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"tmp", ",", "c\[Eta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"Simplify", "@", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"4", 
           SuperscriptBox["\[Pi]", "2"], 
           RowBox[{"(", 
            RowBox[{"\[Tau]Upper", "-", "\[Tau]Lower"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"tmp", "/.", 
               RowBox[{"c\[Eta]", "\[Rule]", "1"}]}], ")"}], "-", 
             RowBox[{"(", 
              RowBox[{"tmp", "/.", 
               RowBox[{"c\[Eta]", "\[Rule]", "0"}]}], ")"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}], "/.", 
      RowBox[{"$olution", "[", 
       RowBox[{"$rule", ",", "T\[CapitalXi]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=."}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.86887593694602*^9, 3.868875940567156*^9}, {
  3.86887598630602*^9, 3.868876044744795*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b9556f41-719d-478e-a601-6ed2abdae134"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralsBH", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ActionIntegrate", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"rp", ",", "r0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Beta]"}], "}"}]}], "]"}], "&"}], "/@", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "integrands"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.86887609796426*^9, 3.868876106070826*^9}, {
  3.8688761562805862`*^9, 3.8688761961362953`*^9}, {3.868876284793827*^9, 
  3.8688762914095087`*^9}, {3.868876337265373*^9, 3.868876375579825*^9}, {
  3.868877376627322*^9, 3.8688773769513607`*^9}, {3.868877417215465*^9, 
  3.868877448077327*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"58a4f2d2-c446-49db-bbd8-9f2a20bd12db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"10", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`r0,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["\[Beta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[Beta],
        Editable->False]}], 
      RowBox[{
       InterpretationBox[
        StyleBox["\[CapitalXi]a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["\[CapitalXi]b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
        Editable->False]}]]}], "-", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`rp,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`q,
           Editable->False], "2"]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["b",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`b,
             Editable->False], "2"], "+", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["rp",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`rp,
             Editable->False], "2"]}], ")"}]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}], ")"}], "2"]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["b",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`b,
             Editable->False], "4"], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "4"]}]}], ")"}]}]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"]}], ")"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`rp,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"24", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`rp,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"48", " ", "\[ImaginaryI]", " ", 
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Alpha]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Alpha],
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868876202937729*^9, 3.868876294362849*^9, 
  3.8688763783713627`*^9, 3.868877452529361*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"21015d06-17ae-401a-8d14-311c6d9414fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralsAdS", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ActionIntegrate", "[", 
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"q", "\[Rule]", "0"}], ",", 
         RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rlower", "/.", 
         RowBox[{"$olution", "[", 
          RowBox[{"$rule", ",", "rlower"}], "]"}]}], ",", "r0"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Tau]upper", "/.", 
         RowBox[{"$olution", "[", 
          RowBox[{"$rule", ",", "\[Tau]upper"}], "]"}]}]}], "}"}]}], "]"}], 
    "&"}], "/@", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "integrands"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.868876386502777*^9, 3.868876395370904*^9}, {
  3.868876429617364*^9, 3.868876460622098*^9}, {3.868877454254005*^9, 
  3.868877461680707*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"71361eb6-4f08-4418-b16c-25120397152c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"10", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"]}], "-", 
         InterpretationBox[
          StyleBox["m",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`m,
          Editable->False]}], ")"}], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       InterpretationBox[
        StyleBox["\[Beta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[Beta],
        Editable->False]}], 
      RowBox[{
       InterpretationBox[
        StyleBox["\[CapitalXi]a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["\[CapitalXi]b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
        Editable->False]}]]}], "-", 
    FractionBox[
     RowBox[{"10", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"]}], ")"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "-", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}], "-", 
        InterpretationBox[
         StyleBox["m",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`m,
         Editable->False]}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"]}], ")"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[CapitalXi]b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
       Editable->False]}]]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.868876462825964*^9, 3.86887746364075*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"eef3e2fa-d3a2-482c-84d7-81e7a484692a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "coeff"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"integralsBH", "-", "integralsAdS"}], ")"}]}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "\[Alpha]T\[CapitalPhi]"}], "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"vIren", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Pi]", " ", "\[Beta]"}], 
    RowBox[{"4", "\[CapitalXi]a", " ", "\[CapitalXi]b", " ", "G5"}]], 
   RowBox[{"(", 
    RowBox[{"m", "-", 
     RowBox[{
      SuperscriptBox["g", "2"], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["rp", "2"], "+", 
        SuperscriptBox["a", "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["rp", "2"], "+", 
        SuperscriptBox["b", "2"]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "2"], 
       SuperscriptBox["rp", "2"]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rp", "2"], "+", 
          SuperscriptBox["a", "2"]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rp", "2"], "+", 
          SuperscriptBox["b", "2"]}], ")"}]}], "+", 
       RowBox[{"a", " ", "b", " ", "q"}]}]]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "-", "%%"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.8688764914622927`*^9, 3.868876507265562*^9}, {
  3.868876544154538*^9, 3.868876625534009*^9}, {3.8688774846762114`*^9, 
  3.868877511844005*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"9b17a9f7-6d38-44b8-9e27-e528f4f52e6d"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "3"], " ", 
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "4"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], "+", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "2"]}], ")"}], "2"]}], "+", 
      RowBox[{
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          InterpretationBox[
           StyleBox["m",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`m,
           Editable->False]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          InterpretationBox[
           StyleBox["m",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`m,
           Editable->False]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`rp,
              Editable->False], "2"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`rp,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`q,
           Editable->False], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "2"]}], "-", 
         RowBox[{
          InterpretationBox[
           StyleBox["m",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`m,
           Editable->False], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "6"]}], "-", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            InterpretationBox[
             StyleBox["m",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf1`Euclidean`m,
             Editable->False], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`g,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["rp",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`rp,
               Editable->False], "4"]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{"4", " ", 
    InterpretationBox[
     StyleBox["G5",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`G5,
     Editable->False], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`a,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["b",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`b,
        Editable->False], " ", 
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`rp,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`rp,
           Editable->False], "2"]}], ")"}]}]}], ")"}], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
     Editable->False], " ", 
    InterpretationBox[
     StyleBox["\[CapitalXi]b",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
     Editable->False]}]]}]], "Output",
 CellChangeTimes->{
  3.868876508176022*^9, 3.868876551015732*^9, {3.868876583590294*^9, 
   3.8688765884958963`*^9}, {3.868876619842184*^9, 3.868876626778576*^9}, {
   3.868877486701448*^9, 3.868877513288986*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"13a12917-592a-48b9-be75-f2d9bbc899a8"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     InterpretationBox[
      StyleBox["m",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`m,
      Editable->False], "-", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`rp,
          Editable->False], "2"]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["q",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`q,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`rp,
         Editable->False], "2"]}], 
      RowBox[{
       RowBox[{
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`a,
         Editable->False], " ", 
        InterpretationBox[
         StyleBox["b",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`b,
         Editable->False], " ", 
        InterpretationBox[
         StyleBox["q",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf1`Euclidean`q,
         Editable->False]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], "+", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], "+", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`rp,
            Editable->False], "2"]}], ")"}]}]}]]}], ")"}], " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[Beta],
    Editable->False]}], 
  RowBox[{"4", " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`G5,
    Editable->False], " ", 
   InterpretationBox[
    StyleBox["\[CapitalXi]a",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a,
    Editable->False], " ", 
   InterpretationBox[
    StyleBox["\[CapitalXi]b",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b,
    Editable->False]}]]], "Output",
 CellChangeTimes->{
  3.868876508176022*^9, 3.868876551015732*^9, {3.868876583590294*^9, 
   3.8688765884958963`*^9}, {3.868876619842184*^9, 3.868876626778576*^9}, {
   3.868877486701448*^9, 3.8688775132943287`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"855572c6-7f15-4426-8cfe-5236f72171ac"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.868876508176022*^9, 3.868876551015732*^9, {3.868876583590294*^9, 
   3.8688765884958963`*^9}, {3.868876619842184*^9, 3.868876626778576*^9}, {
   3.868877486701448*^9, 3.868877513297934*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"d8124762-9526-42ae-bca4-20fdfa343447"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"action", ",", 
   RowBox[{"{", 
    RowBox[{"Iren", "\[Rule]", "vIren"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868876629540991*^9, 3.86887664080011*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"27a6df6e-4a2c-410f-bef8-22674ec5fea9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print$olution", "[", "$rule", "]"}]], "Input",
 CellChangeTimes->{{3.868876643877383*^9, 3.868876647679784*^9}, {
  3.868876688861698*^9, 3.868876730033024*^9}, {3.868876769412469*^9, 
  3.8688767746285143`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"b47f83ff-6575-4738-b929-25d88d57369c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"func", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]r -> 
             Function[{
               CCLP`Bulk`Hopf1`Euclidean`r}, (-2) 
                CCLP`Bulk`Hopf1`Euclidean`m + (((2 
                    CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                  CCLP`Bulk`Hopf1`Euclidean`q + 
                 CCLP`Bulk`Hopf1`Euclidean`q^2 + ((
                    CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`r^2) (
                    CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`r^2)) (1 + 
                   CCLP`Bulk`Hopf1`Euclidean`g^2 
                    CCLP`Bulk`Hopf1`Euclidean`r^2))/
                CCLP`Bulk`Hopf1`Euclidean`r^2], 
             CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]\[Eta] -> 
             Function[{CCLP`Bulk`Hopf1`Euclidean`c\[Eta]}, 
               1 - (CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) 
               CCLP`Bulk`Hopf1`Euclidean`g^2 - (
                CCLP`Bulk`Hopf1`Euclidean`b^2 (1 - 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2)) 
               CCLP`Bulk`Hopf1`Euclidean`g^2], 
             CCLP`Bulk`Hopf1`Euclidean`\[Rho]2 -> 
             Function[{
               CCLP`Bulk`Hopf1`Euclidean`r, 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]}, 
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (1 - 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2], CCLP`Bulk`Hopf1`Euclidean`f -> 
             Function[{
               CCLP`Bulk`Hopf1`Euclidean`r, 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]}, -
                CCLP`Bulk`Hopf1`Euclidean`q^2 + (
                 2 CCLP`Bulk`Hopf1`Euclidean`m + (((2 
                    CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                   CCLP`Bulk`Hopf1`Euclidean`g^2) 
                  CCLP`Bulk`Hopf1`Euclidean`q) (
                 CCLP`Bulk`Hopf1`Euclidean`a^2 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 (1 - 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
                 CCLP`Bulk`Hopf1`Euclidean`r^2)]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalDelta]r"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]r, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", "r", "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False]}],
                     "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}]}]}], 
                    SuperscriptBox["r", "2"]]}]}], "]"}]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalDelta]\[Eta]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalDelta]\[Eta], Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", "c\[Eta]", "}"}], ",", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}]}], "]"}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Rho]2"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Rho]2, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"r", ",", "c\[Eta]"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}]}], "]"}]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"f"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`f, Editable -> False], 
                    "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"r", ",", "c\[Eta]"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False]}],
                     "+", 
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> 
                    False]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}]}]}]}], "]"}]}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{379., {52.430978260869566`, 56.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{379., {52.430978260869566`, 56.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"const", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a -> 
             1 - CCLP`Bulk`Hopf1`Euclidean`a^2 CCLP`Bulk`Hopf1`Euclidean`g^2, 
             CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b -> 
             1 - CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2},
            "AllowEmbedding" -> True, "InitialShape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Path" -> {}, 
           "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False], "\[Rule]", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{72., {26.430978260869566`, 30.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{72., {26.430978260869566`, 30.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"mTrp", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`m -> (Rational[1, 2] 
               CCLP`Bulk`Hopf1`Euclidean`rp^(-2)) (((2 
                  CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                CCLP`Bulk`Hopf1`Euclidean`q + 
               CCLP`Bulk`Hopf1`Euclidean`q^2 + ((
                  CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2) (
                  CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2)) (1 + 
                 CCLP`Bulk`Hopf1`Euclidean`g^2 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2))}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{177., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{177., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"T\[CapitalXi]", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {-1 + 
              CCLP`Bulk`Hopf1`Euclidean`a^2 CCLP`Bulk`Hopf1`Euclidean`g^2 :> -
              CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, -1 + 
              CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2 :> -
              CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 2, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 2], "Path" -> {}, 
           "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], "\[RuleDelayed]", 
                    RowBox[{"-", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], "\[RuleDelayed]", 
                    RowBox[{"-", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{87., {26.430978260869566`, 30.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{87., {26.430978260869566`, 30.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Alpha]T\[CapitalPhi]", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[Alpha] -> (((-3^Rational[1, 2])/
                CCLP`Bulk`Hopf1`Euclidean`Cx) CCLP`Bulk`Hopf1`Euclidean`q) (
               CCLP`Bulk`Hopf1`Euclidean`rp^2/((CCLP`Bulk`Hopf1`Euclidean`a 
                 CCLP`Bulk`Hopf1`Euclidean`b) 
                CCLP`Bulk`Hopf1`Euclidean`q + (CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf1`Euclidean`rp^2) (
                 CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                 CCLP`Bulk`Hopf1`Euclidean`rp^2)))}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[Alpha], Editable -> False], 
                    "\[Rule]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}]}], ")"}]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{144., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{144., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Tau]upper", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`\[Tau]upper -> 
             CCLP`Bulk`Hopf1`Euclidean`\[Beta] - ((
                CCLP`Bulk`Hopf1`Euclidean`g^(-2) CCLP`Bulk`Hopf1`Euclidean`m) 
               CCLP`Bulk`Hopf1`Euclidean`r0^(-4)) 
              CCLP`Bulk`Hopf1`Euclidean`\[Beta]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"\[Tau]upper", "\[Rule]", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> 
                    False], "-", 
                    FractionBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`r0, Editable -> False], 
                    "4"]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"rlower", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`rlower -> (((-1)/(
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a + (1 - 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b)) ((
                  CCLP`Bulk`Hopf1`Euclidean`b^2 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a + (
                  CCLP`Bulk`Hopf1`Euclidean`a^2 (1 - 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2)) 
                 CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b))^Rational[1, 2]}, 
           "AllowEmbedding" -> True, "InitialShape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"rlower", "\[Rule]", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]}], 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["c\[Eta]", "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]}]]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{167., {20.930978260869566`, 25.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{167., {20.930978260869566`, 25.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"terms", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`Detgg[]^Rational[1, 2] 
             CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[], 
             CCLP`Bulk`Hopf1`Euclidean`g^2 
             CCLP`Bulk`Hopf1`Euclidean`Detgg[]^Rational[1, 2], (
              CCLP`Bulk`Hopf1`Euclidean`Detgg[]^Rational[1, 2] 
              CCLP`Bulk`Hopf1`Euclidean`FF[-
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]]) 
             CCLP`Bulk`Hopf1`Euclidean`FF[
              CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
               CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]], ((
               CCLP`Bulk`Hopf1`Euclidean`AA[-
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]] 
               CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
                 CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]]) 
              CCLP`Bulk`Hopf1`Euclidean`FF[-
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
                CCLP`Bulk`Hopf1`Euclidean`\[ScriptC]]) 
             CCLP`Bulk`Hopf1`Euclidean`FF[-
               CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
               CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]]}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    "R[\[Del]]", AutoSpacing -> False, ShowAutoStyles -> 
                    False], 
                    CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`Detgg[], Editable -> False]]}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptA]", "\[ScriptB]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`FF[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]"}, {" ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`FF[
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"A", 
                    StyleBox[
                    
                    GridBox[{{" "}, {"\[ScriptA]"}}, RowSpacings -> 0, 
                    ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`AA[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    
                    GridBox[{{
                    "\!\(\[Eta]\&\*StyleBox[\"~\",FontColor->RGBColor[1, 0, \
0]]\)", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]", "\[ScriptC]", 
                    "\[ScriptD]", "\[ScriptE]"}, {" ", " ", " ", " ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptB]", "\[ScriptC]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`FF[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptC]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptD]", "\[ScriptE]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf1`Euclidean`FF[-
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
                    CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"coeff", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            Rational[-1, 16] (CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi), 
             Rational[-3, 4] (CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi), (
              Rational[1, 64] CCLP`Bulk`Hopf1`Euclidean`Cx^2) (
              CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi), ((Complex[0, 
                 Rational[-1, 192]] 3^Rational[-1, 2]) 
              CCLP`Bulk`Hopf1`Euclidean`Cx^3) (
              CCLP`Bulk`Hopf1`Euclidean`G5^(-1)/Pi)}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"16", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["3", 
                    RowBox[{"4", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "2"], 
                    RowBox[{"64", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "3"]}], 
                    RowBox[{"192", " ", 
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"integrands", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {((((CCLP`Bulk`Hopf1`Euclidean`c\[Eta]/(-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`a^2 
                  CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
                CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2)) 
               CCLP`Bulk`Hopf1`Euclidean`r) (
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2)) ((-20) 
               CCLP`Bulk`Hopf1`Euclidean`g^2 - ((2 
                CCLP`Bulk`Hopf1`Euclidean`q^2) (
                 CCLP`Bulk`Hopf1`Euclidean`a^2 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                  CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
                 CCLP`Bulk`Hopf1`Euclidean`r^2)^(-4)) ((-
                 CCLP`Bulk`Hopf1`Euclidean`a^2) 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 + 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2)), ((((
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta] 
                 CCLP`Bulk`Hopf1`Euclidean`g^2)/(-1 + 
                CCLP`Bulk`Hopf1`Euclidean`a^2 
                 CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
               CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2)) 
              CCLP`Bulk`Hopf1`Euclidean`r) (
              CCLP`Bulk`Hopf1`Euclidean`a^2 
               CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
              CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
               CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
              CCLP`Bulk`Hopf1`Euclidean`r^2), (((((((24 
                    CCLP`Bulk`Hopf1`Euclidean`Cx^(-2)) 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta])/(-1 + 
                  CCLP`Bulk`Hopf1`Euclidean`a^2 
                   CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2))
                  CCLP`Bulk`Hopf1`Euclidean`q^2) 
               CCLP`Bulk`Hopf1`Euclidean`r) (
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) - 
               CCLP`Bulk`Hopf1`Euclidean`r^2)) (
               CCLP`Bulk`Hopf1`Euclidean`a^2 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
               CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
               CCLP`Bulk`Hopf1`Euclidean`r^2)^(-3), (((((((((Complex[0, -96] 
                    CCLP`Bulk`Hopf1`Euclidean`a) CCLP`Bulk`Hopf1`Euclidean`b) 
                    CCLP`Bulk`Hopf1`Euclidean`Cx^(-2)) 
                   CCLP`Bulk`Hopf1`Euclidean`c\[Eta])/(-1 + 
                  CCLP`Bulk`Hopf1`Euclidean`a^2 
                   CCLP`Bulk`Hopf1`Euclidean`g^2))/(-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`b^2 CCLP`Bulk`Hopf1`Euclidean`g^2))
                  CCLP`Bulk`Hopf1`Euclidean`q^2) 
               CCLP`Bulk`Hopf1`Euclidean`r) (
                CCLP`Bulk`Hopf1`Euclidean`a^2 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2 - 
                CCLP`Bulk`Hopf1`Euclidean`b^2 (-1 + 
                 CCLP`Bulk`Hopf1`Euclidean`c\[Eta]^2) + 
                CCLP`Bulk`Hopf1`Euclidean`r^2)^(-3)) 
             CCLP`Bulk`Hopf1`Euclidean`\[Alpha]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"c\[Eta]", " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "20"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}], "-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"]}], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "4"]]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"c\[Eta]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"24", " ", "c\[Eta]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "-", 
                    SuperscriptBox["r", "2"]}], ")"}]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"96", " ", "\[ImaginaryI]", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", "c\[Eta]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[Alpha], Editable -> False]}], 
                    
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox["c\[Eta]", "2"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{259., {69.43097826086957, 73.56902173913043}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{259., {69.43097826086957, 73.56902173913043}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"action", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf1`Euclidean`Iren -> ((((Rational[1, 4]/
                  CCLP`Bulk`Hopf1`Euclidean`G5) Pi) (
                 CCLP`Bulk`Hopf1`Euclidean`m - (
                  CCLP`Bulk`Hopf1`Euclidean`g^2 (
                   CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                   CCLP`Bulk`Hopf1`Euclidean`rp^2)) (
                  CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                  CCLP`Bulk`Hopf1`Euclidean`rp^2) - 
                 CCLP`Bulk`Hopf1`Euclidean`q^2 (
                  CCLP`Bulk`Hopf1`Euclidean`rp^2/((
                    CCLP`Bulk`Hopf1`Euclidean`a CCLP`Bulk`Hopf1`Euclidean`b) 
                   CCLP`Bulk`Hopf1`Euclidean`q + (
                    CCLP`Bulk`Hopf1`Euclidean`a^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2) (
                    CCLP`Bulk`Hopf1`Euclidean`b^2 + 
                    CCLP`Bulk`Hopf1`Euclidean`rp^2))))) 
               CCLP`Bulk`Hopf1`Euclidean`\[Beta]) (
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a^(-1)/
               CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b)}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Iren", "\[Rule]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`m, Editable -> False], 
                    "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}], "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`q, Editable -> False]}],
                     "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"b"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`b, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}]}]}]]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{"4", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf1`Euclidean`G5, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]a"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]a, Editable -> 
                    False], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalXi]b"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf1`Euclidean`\[CapitalXi]b, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{243., {23.430978260869566`, 27.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{243., {23.430978260869566`, 27.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{
  3.868876649271834*^9, {3.868876700032762*^9, 3.8688767310525084`*^9}, 
   3.868876776182138*^9, 3.868877524207979*^9},
 CellLabel->
  "Out[50]//TableForm=",ExpressionUUID->"86d92432-a941-4cbe-805a-\
1151a513c53e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaveSolution", "[", "\"\<thermo2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveExample", "[", 
  RowBox[{
  "\"\<CCLP_abqm_2\[PartialD]\>\"", ",", 
   "\"\<Action_BackgroundSubtraction\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8688710291008053`*^9, 3.868871058717861*^9}, {
   3.868871120517696*^9, 3.8688711809917727`*^9}, {3.8688713520262938`*^9, 
   3.868871363829871*^9}, {3.8688775853302193`*^9, 3.868877585500959*^9}, 
   3.868938876015192*^9},ExpressionUUID->"8c5944b8-9754-4b98-995d-\
c530a766dbcc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saved \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"$olution\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" under the file name \"\>", "\[InvisibleSpace]", 
   
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2/2022-08-07_18-\
13-15.m\\\\\\\"\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Saved ", 
   Style["$olution", FontFamily -> "Source Code Pro Semibold"], 
   " under the file name ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2/2022-08-07_18-13-15.m\\\"\",\
 TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871437192946*^9, 3.868877597035013*^9},
 CellLabel->
  "During evaluation of \
In[51]:=",ExpressionUUID->"30a29ffa-4118-4f7c-96f3-a9b13a70bd6a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Play", "Section",
 CellChangeTimes->{{3.868871637214074*^9, 
  3.868871638469335*^9}},ExpressionUUID->"23f6ae88-f8de-46fc-818f-\
522b0f3822c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{
   "CCLP", ",", "Bulk", ",", "Hopf1", ",", "Euclidean", ",", 
    "\"\<thermo2\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.868871644223001*^9, 3.8688716868269567`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b42c680f-0664-4c2e-99a6-e785f7b6c90a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"5\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.868871888508933*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"52e7d773-e5f1-45cb-a261-6c6bbb547e43"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"b\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\
\\\", \\\",\\\", \\\"\[Alpha]\\\", \\\",\\\", \\\"\[CapitalXi]a\\\", \
\\\",\\\", \\\"\[CapitalXi]b\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \
\\\"r0\\\", \\\",\\\", \\\"rp\\\", \\\",\\\", \\\"G5\\\", \\\",\\\", \\\"\
\[Beta]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"b\", \",\", \
\"m\", \",\", \"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \
\"\[CapitalXi]a\", \",\", \"\[CapitalXi]b\", \",\", \"Cx\", \",\", \"r0\", \
\",\", \"rp\", \",\", \"G5\", \",\", \"\[Beta]\"}], \"}\"}], TraditionalForm]\
\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.868871888524678*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"384fcf11-0617-41cb-a730-7f422ad2c2af"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined scalar functions \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\
\[CapitalDelta]r\\\", \\\",\\\", \\\"\[CapitalDelta]\[Eta]\\\", \\\",\\\", \\\
\"\[Rho]2\\\", \\\",\\\", \\\"f\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined scalar functions ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[CapitalDelta]r\", \",\", \
\"\[CapitalDelta]\[Eta]\", \",\", \"\[Rho]2\", \",\", \"f\"}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.868871888530592*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"826465f7-00ce-423a-b01b-c98d849f3106"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.868871888534727*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"2b68fbcb-d2ed-47f9-8feb-870222687615"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.868871888560858*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"edcc95a8-361f-4bbb-a984-916f31d888a6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.8688718892215853`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"d05a884e-c439-4606-ab67-59ef33d5e557"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\
\[Tau]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"r\\\", \\\"(\\\", \
\\\")\\\"}], \\\",\\\", RowBox[{\\\"c\[Eta]\\\", \\\"(\\\", \\\")\\\"}], \
\\\",\\\", RowBox[{\\\"\[Xi]1\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", \
RowBox[{\\\"\[Xi]2\\\", \\\"(\\\", \\\")\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"\[Tau]\", \"(\", \")\
\"}], \",\", RowBox[{\"r\", \"(\", \")\"}], \",\", RowBox[{\"c\[Eta]\", \
\"(\", \")\"}], \",\", RowBox[{\"\[Xi]1\", \"(\", \")\"}], \",\", RowBox[{\"\
\[Xi]2\", \"(\", \")\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.868871889472756*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"933ddb6b-b01c-430a-b6c3-7d822897c8f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2\\\\\\\"\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf1/Euclidean/thermo2\\\"\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868871688873808*^9, 3.868871890047419*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"d42de0cb-462e-471a-b146-e9194079ce5c"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DefMetricPerturbation", "[", 
  RowBox[{"gg", ",", "\[Delta]g", ",", "\[Lambda]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868871711222541*^9, 3.868871715985869*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d7ac9d46-d38e-4349-b84c-7672b5e64125"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"L", "=", 
  RowBox[{
   SqrtBox[
    RowBox[{"Detgg", "[", "]"}]], 
   RowBox[{"RicciScalarcd", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.868871727294471*^9, 3.868871740391626*^9}, 
   3.868871894354102*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"0f87390e-9cc4-4179-8804-d4dfaed3d3c6"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   InterpretationBox[
    StyleBox[
     OverscriptBox["g", 
      OverscriptBox[
       StyleBox["~",
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["~",
        FontColor->RGBColor[0, 0, 0]]]],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`Detgg[],
    Editable->False]], " ", 
  InterpretationBox[
   StyleBox[
    RowBox[{"R", "[", "\[Del]", "]"}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.868871743324278*^9, 3.868871895207964*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"12044c73-ec55-4fd3-a5a7-838f8a0fec7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lpert", "=", 
  RowBox[{"Simplification", "@", 
   RowBox[{"ContractMetric", "@", 
    RowBox[{"ExpandPerturbation", "@", 
     RowBox[{"Perturbation", "@", "L"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.868871782410595*^9, 3.868871846846727*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7fc7b6f5-91d6-4cea-959b-da7f17a3dc37"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"\[Sqrt]", 
   InterpretationBox[
    StyleBox[
     OverscriptBox["g", 
      OverscriptBox[
       StyleBox["~",
        FontColor->RGBColor[0, 0, 0]], 
       StyleBox["~",
        FontColor->RGBColor[0, 0, 0]]]],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`Detgg[],
    Editable->False]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     InterpretationBox[
      StyleBox[GridBox[{
         {
          RowBox[{"R", "[", "\[Del]", "]"}], 
          StyleBox[GridBox[{
             {"\[ScriptA]", "\[ScriptB]"},
             {" ", " "}
            },
            GridBoxSpacings->{"Columns" -> {
                Offset[0.], {
                 Offset[0.034999999999999996`]}, 
                Offset[0.]}, "Rows" -> {{
                 Offset[0.]}}}],
           FontSize->Rational[39, 4]]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.034999999999999996`]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Riccicd[
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
      Editable->False], " ", 
     InterpretationBox[
      StyleBox[GridBox[{
         {"\[Delta]g", 
          StyleBox[GridBox[{
             {"1", " ", " "},
             {" ", "\[ScriptA]", "\[ScriptB]"}
            },
            GridBoxSpacings->{"Columns" -> {
                Offset[0.], {
                 Offset[0.034999999999999996`]}, 
                Offset[0.]}, "Rows" -> {{
                 Offset[0.]}}}],
           FontSize->Rational[39, 4]]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.034999999999999996`]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`\[Delta]g[
       xAct`xTensor`LI[1], -CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
      Editable->False]}], "+", 
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"R", "[", "\[Del]", "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[],
      Editable->False], " ", 
     InterpretationBox[
      StyleBox[GridBox[{
         {"\[Delta]g", 
          StyleBox[GridBox[{
             {"1", "\[ScriptA]", " "},
             {" ", " ", "\[ScriptA]"}
            },
            GridBoxSpacings->{"Columns" -> {
                Offset[0.], {
                 Offset[0.034999999999999996`]}, 
                Offset[0.]}, "Rows" -> {{
                 Offset[0.]}}}],
           FontSize->Rational[39, 4]]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.034999999999999996`]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`\[Delta]g[
       xAct`xTensor`LI[1], CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]],
      Editable->False]}], "+", 
    RowBox[{"2", " ", 
     InterpretationBox[
      StyleBox[
       RowBox[{
        SubscriptBox["\[Del]", "\[ScriptB]"], 
        SubscriptBox["\[Del]", "\[ScriptA]"], GridBox[{
          {"\[Delta]g", 
           StyleBox[GridBox[{
              {"1", "\[ScriptA]", "\[ScriptB]"},
              {" ", " ", " "}
             },
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.], {
                  Offset[0.034999999999999996`]}, 
                 Offset[0.]}, "Rows" -> {{
                  Offset[0.]}}}],
            FontSize->Rational[39, 4]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.034999999999999996`]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}]}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`cd[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]][
       CCLP`Bulk`Hopf1`Euclidean`cd[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]][
        CCLP`Bulk`Hopf1`Euclidean`\[Delta]g[
         xAct`xTensor`LI[1], CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
         CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]]]],
      Editable->False]}], "-", 
    RowBox[{"2", " ", 
     InterpretationBox[
      StyleBox[
       RowBox[{
        SubscriptBox["\[Del]", "\[ScriptB]"], 
        SuperscriptBox["\[Del]", "\[ScriptB]"], GridBox[{
          {"\[Delta]g", 
           StyleBox[GridBox[{
              {"1", "\[ScriptA]", " "},
              {" ", " ", "\[ScriptA]"}
             },
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.], {
                  Offset[0.034999999999999996`]}, 
                 Offset[0.]}, "Rows" -> {{
                  Offset[0.]}}}],
            FontSize->Rational[39, 4]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.034999999999999996`]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}]}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`cd[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]][
       CCLP`Bulk`Hopf1`Euclidean`cd[CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]][
        CCLP`Bulk`Hopf1`Euclidean`\[Delta]g[
         xAct`xTensor`LI[1], CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
         CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]]]],
      Editable->False]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.868871790004374*^9, 3.868871848640904*^9}, 
   3.868871898104496*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"280a099e-93e7-41e5-a65b-dde6e5948679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"Detgg", "[", "]"}]}], ")"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"VarD", "[", 
      RowBox[{
       RowBox[{"\[Delta]g", "[", 
        RowBox[{
         RowBox[{"LI", "[", "1", "]"}], ",", "\[ScriptA]", ",", 
         "\[ScriptB]"}], "]"}], ",", "cd"}], "]"}], "@", "Lpert"}]}], "/.", 
   RowBox[{
    RowBox[{"delta", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"LI", "[", "1", "]"}]}], ",", 
      RowBox[{"LI", "[", "1", "]"}]}], "]"}], "\[Rule]", "1"}]}], "//", 
  "Simplification"}]], "Input",
 CellChangeTimes->{{3.86887191197307*^9, 3.8688719501871567`*^9}, {
  3.8688719867147913`*^9, 3.8688720176401777`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e88ed392-e354-4fe5-a0b4-9762be123c01"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {
       RowBox[{"R", "[", "\[Del]", "]"}], 
       StyleBox[GridBox[{
          {" ", " "},
          {"\[ScriptA]", "\[ScriptB]"}
         },
         GridBoxSpacings->{"Columns" -> {
             Offset[0.], {
              Offset[0.034999999999999996`]}, 
             Offset[0.]}, "Rows" -> {{
              Offset[0.]}}}],
        FontSize->Rational[39, 4]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.034999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Bulk`Hopf1`Euclidean`Riccicd[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
    CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
   Editable->False], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"g", 
        StyleBox[GridBox[{
           {" ", " "},
           {"\[ScriptA]", "\[ScriptB]"}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`gg[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
     CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
    Editable->False], " ", 
   InterpretationBox[
    StyleBox[
     RowBox[{"R", "[", "\[Del]", "]"}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[],
    Editable->False]}]}]], "Output",
 CellChangeTimes->{
  3.8688719514578323`*^9, {3.8688720066311817`*^9, 3.8688720187021112`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"a74157be-8a35-45be-984b-2170fe010489"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"terms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SqrtBox[
      RowBox[{"Detgg", "[", "]"}]], 
     RowBox[{"RicciScalarcd", "[", "]"}]}], ",", 
    RowBox[{
     SqrtBox[
      RowBox[{"Detgg", "[", "]"}]], 
     SuperscriptBox["g", "2"]}], ",", 
    RowBox[{
     SqrtBox[
      RowBox[{"Detgg", "[", "]"}]], 
     RowBox[{"FF", "[", 
      RowBox[{"\[ScriptA]", ",", "\[ScriptB]"}], "]"}], 
     RowBox[{"FF", "[", 
      RowBox[{
       RowBox[{"-", "\[ScriptA]"}], ",", 
       RowBox[{"-", "\[ScriptB]"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"etaUpcurved", "[", 
      RowBox[{
      "\[ScriptA]", ",", "\[ScriptB]", ",", "\[ScriptC]", ",", "\[ScriptD]", 
       ",", "\[ScriptE]"}], "]"}], 
     RowBox[{"AA", "[", 
      RowBox[{"-", "\[ScriptA]"}], "]"}], 
     RowBox[{"FF", "[", 
      RowBox[{
       RowBox[{"-", "\[ScriptB]"}], ",", 
       RowBox[{"-", "\[ScriptC]"}]}], "]"}], 
     RowBox[{"FF", "[", 
      RowBox[{
       RowBox[{"-", "\[ScriptD]"}], ",", 
       RowBox[{"-", "\[ScriptE]"}]}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"coeff", "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"16", "\[Pi]", " ", "G5"}]]}], 
   RowBox[{"{", 
    RowBox[{"1", ",", "12", ",", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["Cx", "2"], 
       RowBox[{"2", "*", 
        RowBox[{"2", "!"}]}]]}], ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["Cx", "3"]}], 
      RowBox[{"3", 
       SqrtBox["3"], 
       RowBox[{"2", "!"}], "*", 
       RowBox[{"2", "!"}]}]]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.8688740227138042`*^9, 3.868874088823945*^9}, {
  3.868874137163237*^9, 3.8688742342843924`*^9}, {3.868874383651607*^9, 
  3.868874389801759*^9}, {3.868874444996418*^9, 3.868874445872911*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"3ec8c3d5-b19c-4f03-b61b-d82c1816f1f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`g,
      Editable->False], "2"], " ", 
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detgg[],
      Editable->False]]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptA]", "\[ScriptB]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {"\[ScriptA]", "\[ScriptB]"},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[
     CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB]],
     Editable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[GridBox[{
        {"A", 
         StyleBox[GridBox[{
            {" "},
            {"\[ScriptA]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`AA[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {
         OverscriptBox["\[Eta]", 
          StyleBox["~",
           FontColor->RGBColor[1, 0, 0]]], 
         StyleBox[GridBox[{
            {"\[ScriptA]", "\[ScriptB]", "\[ScriptC]", "\[ScriptD]", 
             "\[ScriptE]"},
            {" ", " ", " ", " ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[
     CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptB]", "\[ScriptC]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptC]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptD]", "\[ScriptE]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[-CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptE]],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868874171080606*^9, 3.868874236171977*^9, 
  3.868874391559329*^9, 3.868874447899514*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ff703e49-3227-44a1-ab6c-4ce4de16a1d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"16", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox["3", 
     RowBox[{"4", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    SuperscriptBox[
     InterpretationBox[
      StyleBox["Cx",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Cx,
      Editable->False], "2"], 
    RowBox[{"64", " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "3"]}], 
     RowBox[{"192", " ", 
      SqrtBox["3"], " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868874171080606*^9, 3.868874236171977*^9, 
  3.868874391559329*^9, 3.868874447903721*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"2218b68c-06da-450c-b1c9-9a10766937d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
    RowBox[{"(", "#", ")"}]}], "&"}], "/@", 
  "terms"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Simplify", "@", 
      RowBox[{"ToValues2", "@", 
       RowBox[{"Simplification", "@", 
        RowBox[{"TraceBasisDummy", "@", "#"}]}]}]}], ")"}], "&"}], "/@", 
   "%"}], "/.", "ToCoord"}]}], "Input",
 CellChangeTimes->{{3.8688743930653687`*^9, 3.868874434803351*^9}, {
  3.868874517097994*^9, 3.868874538718988*^9}, {3.868874754755217*^9, 
  3.868874789789793*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"1d497746-da4f-48d9-bfbc-6550a8e5458d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`g,
      Editable->False], "2"], " ", 
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detggcurved[],
      Editable->False]]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf1`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf1`Euclidean`curved}, {-
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[GridBox[{
        {"A", 
         StyleBox[GridBox[{
            {" "},
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`AA[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {
         OverscriptBox["\[Eta]", 
          StyleBox["~",
           FontColor->RGBColor[1, 0, 0]]], 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptC]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptD]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptE]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" ", " ", " ", " ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`etaUpcurved[{
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptA], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], 
       CCLP`Bulk`Hopf1`Euclidean`curved}, {
      CCLP`Bulk`Hopf1`Euclidean`\[ScriptE], CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptC]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptB], -
       CCLP`Bulk`Hopf1`Euclidean`curved}, {-
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptC], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptD]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptE]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf1`Euclidean`FF[{-CCLP`Bulk`Hopf1`Euclidean`\[ScriptD], -
       CCLP`Bulk`Hopf1`Euclidean`curved}, {-
       CCLP`Bulk`Hopf1`Euclidean`\[ScriptE], -
       CCLP`Bulk`Hopf1`Euclidean`curved}],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8688744360735283`*^9, 3.8688744498797693`*^9}, 
   3.868874541858974*^9, 3.8688747558484783`*^9, 3.868874791278455*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"89de343c-b868-4b6c-bf4c-3434f0d0b904"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"c\[Eta]", " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
       SuperscriptBox["r", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "20"}], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`q,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf1`Euclidean`a,
               Editable->False], "2"]}], " ", 
            SuperscriptBox["c\[Eta]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
           SuperscriptBox["r", "2"]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["a",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`a,
              Editable->False], "2"], " ", 
            SuperscriptBox["c\[Eta]", "2"]}], "-", 
           RowBox[{
            SuperscriptBox[
             InterpretationBox[
              StyleBox["b",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf1`Euclidean`b,
              Editable->False], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], "4"]]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"c\[Eta]", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`g,
       Editable->False], "2"], " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
       SuperscriptBox["r", "2"]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"24", " ", "c\[Eta]", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`q,
       Editable->False], "2"], " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox["c\[Eta]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "-", 
       SuperscriptBox["r", "2"]}], ")"}]}], 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["Cx",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`Cx,
       Editable->False], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["b",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`b,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf1`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox["c\[Eta]", "2"]}], "-", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
        SuperscriptBox["r", "2"]}], ")"}], "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"96", " ", "\[ImaginaryI]", " ", 
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["b",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`b,
       Editable->False], " ", "c\[Eta]", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`q,
        Editable->False], "2"], " ", "r", " ", 
      InterpretationBox[
       StyleBox["\[Alpha]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf1`Euclidean`\[Alpha],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf1`Euclidean`Cx,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["b",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`b,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf1`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox["c\[Eta]", "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["b",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf1`Euclidean`b,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["c\[Eta]", "2"]}], ")"}]}], "+", 
         SuperscriptBox["r", "2"]}], ")"}], "3"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8688744360735283`*^9, 3.8688744498797693`*^9}, 
   3.868874541858974*^9, 3.8688747558484783`*^9, 3.868874792031877*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"ce2a151a-2722-40a4-8072-2f782f387376"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1202.086956521739, 595.4086956521738},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.75 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8e847c32-d258-4d7c-b09e-8237494e75d2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 34, "Input",ExpressionUUID->"2ac1b500-9213-418e-b1b3-2a243b75ec3f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[833, 30, 436, 8, 18, "Print",ExpressionUUID->"6e61a462-208e-4e5a-967a-2290e8e33cdd"],
Cell[1272, 40, 706, 16, 18, "Print",ExpressionUUID->"efff99f8-8f1b-4b04-8c64-67de51f11e91"],
Cell[1981, 58, 455, 8, 18, "Print",ExpressionUUID->"d15eba19-aeda-4a9c-880f-e111b799194b"],
Cell[2439, 68, 414, 7, 18, "Print",ExpressionUUID->"807b635d-318b-4f48-9e2b-66b147b1d292"],
Cell[2856, 77, 395, 7, 18, "Print",ExpressionUUID->"ae378ebf-73dd-4c50-9241-2db1d0993756"],
Cell[3254, 86, 436, 8, 18, "Print",ExpressionUUID->"bb645f74-f6fe-4735-9d06-06edb466eb02"],
Cell[3693, 96, 710, 16, 18, "Print",ExpressionUUID->"e57ae220-9862-4b70-bece-3d2ef676c584"],
Cell[4406, 114, 455, 8, 18, "Print",ExpressionUUID->"c9e3d934-c42f-4e67-a794-3aad55763c6e"],
Cell[4864, 124, 434, 8, 18, "Print",ExpressionUUID->"fe145d72-6b60-4939-8c41-7c68236b1ce4"],
Cell[5301, 134, 706, 16, 18, "Print",ExpressionUUID->"f4dddb3b-9814-430c-af0c-2a1026b28879"],
Cell[6010, 152, 502, 9, 18, "Print",ExpressionUUID->"b3a61030-09ba-4761-a64f-b524dadd9e14"],
Cell[6515, 163, 675, 15, 18, "Print",ExpressionUUID->"aa18faab-c9b1-4b08-ab08-c40d49cf3a33"],
Cell[7193, 180, 760, 16, 18, "Print",ExpressionUUID->"cf55d7bf-9628-4c40-937e-84091670fcc4"],
Cell[7956, 198, 861, 16, 18, "Print",ExpressionUUID->"9fe3577a-e531-4394-87f9-1d4003240513"],
Cell[8820, 216, 818, 16, 18, "Print",ExpressionUUID->"1ab131dc-c60a-4ab4-8ee1-31336d5cd88a"],
Cell[9641, 234, 837, 16, 18, "Print",ExpressionUUID->"fd08e3f3-0d05-4f69-9d21-9a4d04459c65"],
Cell[10481, 252, 436, 8, 18, "Print",ExpressionUUID->"70dc62e5-cc9f-4e04-a30b-fba02077bafc"],
Cell[10920, 262, 701, 15, 18, "Print",ExpressionUUID->"db21abe9-4834-49e9-b800-0e9b8d1c91e5"],
Cell[11624, 279, 481, 8, 18, "Print",ExpressionUUID->"e3b1c138-a456-417f-8131-69b56dab9425"],
Cell[12108, 289, 802, 17, 18, "Print",ExpressionUUID->"55a449e1-cb5c-406f-a16c-cdc25bc01845"],
Cell[12913, 308, 796, 16, 18, "Print",ExpressionUUID->"62c930f2-8754-4cc8-8f8f-68141b289fe7"],
Cell[13712, 326, 841, 16, 18, "Print",ExpressionUUID->"f23d694a-cea0-48b0-8de2-f9879a3d993b"],
Cell[14556, 344, 756, 16, 18, "Print",ExpressionUUID->"0817f422-7f11-4882-b4d8-fe4e08c0e40c"],
Cell[15315, 362, 434, 8, 18, "Print",ExpressionUUID->"cf4c3708-f1e0-4d3c-9523-527bd78e8485"],
Cell[15752, 372, 706, 16, 18, "Print",ExpressionUUID->"ca06e225-ef6f-41da-abbb-570dd01ec00c"],
Cell[16461, 390, 473, 8, 18, "Print",ExpressionUUID->"20cde143-3fa3-4917-903f-a13f0a41423d"],
Cell[16937, 400, 434, 8, 18, "Print",ExpressionUUID->"733ae060-8d51-494b-b301-80ebb0b134e6"],
Cell[17374, 410, 726, 16, 18, "Print",ExpressionUUID->"d8621139-c3be-4c01-94fb-763a30af6611"],
Cell[18103, 428, 461, 8, 18, "Print",ExpressionUUID->"2a6c93ad-5061-44f1-b33d-9dd76b822052"],
Cell[18567, 438, 436, 8, 18, "Print",ExpressionUUID->"28877269-bb74-4f41-b665-8b94e87a944d"],
Cell[19006, 448, 705, 15, 18, "Print",ExpressionUUID->"145cdc3b-6908-4825-ab14-5eda35e8028f"],
Cell[19714, 465, 445, 8, 18, "Print",ExpressionUUID->"dd51e17f-1d4c-45f2-b717-6ec6305e4615"],
Cell[20162, 475, 764, 17, 18, "Print",ExpressionUUID->"b3f19445-a87d-4263-8de0-cf5cf92188aa"],
Cell[20929, 494, 841, 16, 18, "Print",ExpressionUUID->"009883a8-c6bd-486c-9d96-c9d942c0a390"],
Cell[21773, 512, 434, 8, 18, "Print",ExpressionUUID->"63747ccc-0e1a-4c69-9952-18d8421aeefa"],
Cell[22210, 522, 705, 15, 18, "Print",ExpressionUUID->"57c6c041-dc0b-43aa-89df-669a166caac8"],
Cell[22918, 539, 504, 9, 18, "Print",ExpressionUUID->"9ae192d3-bbba-4d76-815b-8d8f14d9b63b"],
Cell[23425, 550, 436, 8, 18, "Print",ExpressionUUID->"c0c8db2d-d04c-4da4-a670-f39c66d5d0d8"],
Cell[23864, 560, 705, 15, 18, "Print",ExpressionUUID->"6f066cab-cc64-4632-b543-b8d44e81cfb5"],
Cell[24572, 577, 473, 8, 18, "Print",ExpressionUUID->"642efa45-d664-44ce-b68d-fd7e9c22822f"],
Cell[25048, 587, 483, 8, 18, "Print",ExpressionUUID->"2ba156ff-3710-4b00-b7ea-4e2b5e078cf3"],
Cell[25534, 597, 754, 16, 18, "Print",ExpressionUUID->"e5d9a255-1ef5-4d8c-a7de-b47401ee3fce"],
Cell[26291, 615, 434, 8, 18, "Print",ExpressionUUID->"47608550-de49-407c-979b-2ae0d5a6c275"],
Cell[26728, 625, 712, 16, 18, "Print",ExpressionUUID->"a1229884-6664-4403-8278-781103d4d777"],
Cell[27443, 643, 481, 8, 18, "Print",ExpressionUUID->"d342f98f-73bf-42e0-b010-8b1e1a301217"],
Cell[27927, 653, 434, 8, 18, "Print",ExpressionUUID->"b4153185-97d6-45f5-bf0c-07a5d0639a11"],
Cell[28364, 663, 728, 16, 18, "Print",ExpressionUUID->"78411d0d-8285-4872-b826-7e1d7a889bbd"],
Cell[29095, 681, 443, 8, 18, "Print",ExpressionUUID->"e61a3b18-216f-4b92-90ef-138e77ca2b86"],
Cell[29541, 691, 434, 8, 18, "Print",ExpressionUUID->"07991cec-a7d5-4264-9cae-3c1a25cc0c3d"],
Cell[29978, 701, 589, 10, 32, "Print",ExpressionUUID->"13193410-9730-4945-ac34-0c3764b72b5e"],
Cell[30570, 713, 434, 8, 18, "Print",ExpressionUUID->"fc5b731c-9e23-46a3-829a-f0bbdbb943e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31053, 727, 189, 3, 51, "Section",ExpressionUUID->"fad241a9-ba0d-4d26-9482-5d5d600d9380"],
Cell[CellGroupData[{
Cell[31267, 734, 299, 6, 22, "Input",ExpressionUUID->"7fe015d1-4f42-49a7-8c88-cc53b2970bdd"],
Cell[CellGroupData[{
Cell[31591, 744, 2791, 49, 18, "Print",ExpressionUUID->"2f5c7a05-f9bf-4874-9b76-6acaf54dc20c"],
Cell[34385, 795, 1110, 21, 18, "Print",ExpressionUUID->"e530404f-9cb4-4f0d-908d-fd6b00abb8f1"],
Cell[35498, 818, 942, 18, 18, "Print",ExpressionUUID->"22fd40ea-e182-41d9-bb26-81e75165575c"],
Cell[36443, 838, 1531, 31, 18, "Print",ExpressionUUID->"5d9125d8-e748-4766-a44b-b1aa23cd7799"],
Cell[37977, 871, 2198, 42, 18, "Print",ExpressionUUID->"d7a3e356-4964-49b6-ac31-f5b092ea7cbd"],
Cell[40178, 915, 1658, 34, 18, "Print",ExpressionUUID->"ab17995a-ef3c-45a4-b6f1-99689a3a357e"],
Cell[41839, 951, 2451, 47, 18, "Print",ExpressionUUID->"3cf5174b-bdb4-4d89-9061-c46bb1bf5288"],
Cell[44293, 1000, 1178, 24, 18, "Print",ExpressionUUID->"58450e72-3be4-4e78-aa54-af2bee1b74dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45520, 1030, 1845, 50, 85, "Input",ExpressionUUID->"0e72eb3d-4978-4daa-825f-ff40fa48c0c4"],
Cell[47368, 1082, 1687, 31, 18, "Print",ExpressionUUID->"ea00df39-113f-45f0-ad58-4e9b40e976a5"]
}, Open  ]],
Cell[49070, 1116, 579, 13, 26, "Text",ExpressionUUID->"b491e497-3f34-4af7-9f31-d29f5ce62ee2"],
Cell[CellGroupData[{
Cell[49674, 1133, 1072, 26, 70, "Input",ExpressionUUID->"86227145-c01f-4fb1-a90f-d6a2ade4e8ef"],
Cell[50749, 1161, 15937, 536, 46, "Output",ExpressionUUID->"3cd765e3-c992-4983-8184-5408625a30d5"],
Cell[66689, 1699, 16187, 547, 46, "Output",ExpressionUUID->"c6cc34a1-0ddf-4849-831d-d7dac3c63f5e"],
Cell[82879, 2248, 219, 3, 25, "Output",ExpressionUUID->"48af9113-e394-4d7d-af3c-c3538364ae20"],
Cell[83101, 2253, 4844, 144, 99, "Output",ExpressionUUID->"c4a0100c-d01e-43d6-9efa-8c3441cf144e"]
}, Open  ]],
Cell[87960, 2400, 459, 13, 26, "Text",ExpressionUUID->"d9f0096c-9525-4770-9f29-1d6bacc2e86f"],
Cell[CellGroupData[{
Cell[88444, 2417, 1191, 31, 38, "Input",ExpressionUUID->"6cd0565e-8ca6-4918-b8f3-9f3c36aab267"],
Cell[89638, 2450, 6898, 225, 42, "Output",ExpressionUUID->"7015466f-774e-4afd-918e-02d61fda3c44"],
Cell[96539, 2677, 6902, 237, 42, "Output",ExpressionUUID->"454b9b7b-33e8-4209-aca1-430d392129f0"]
}, Open  ]],
Cell[103456, 2917, 325, 7, 26, "Text",ExpressionUUID->"36e38752-ac67-48ad-ac7a-94968801ed8d"],
Cell[CellGroupData[{
Cell[103806, 2928, 1800, 47, 86, "Input",ExpressionUUID->"404f75d0-a440-4cb2-84d8-0ea00c474205"],
Cell[105609, 2977, 5280, 171, 52, "Output",ExpressionUUID->"238acb19-4948-4362-9ef7-77768cec92e1"],
Cell[110892, 3150, 6668, 218, 44, "Output",ExpressionUUID->"80544653-e2ab-4c8f-8e66-5590188a7232"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117597, 3373, 1912, 52, 86, "Input",ExpressionUUID->"5e589457-016f-4010-8375-575aa043b403"],
Cell[119512, 3427, 3033, 101, 52, "Output",ExpressionUUID->"a0f02e11-dd01-43ce-ae72-398dc8451937"],
Cell[122548, 3530, 5982, 193, 44, "Output",ExpressionUUID->"bc16aad8-e109-4c97-86f1-940d9d99df1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128567, 3728, 1347, 32, 70, "Input",ExpressionUUID->"dad45cf4-3243-4e1b-9e47-2ae96cd6b1a6"],
Cell[129917, 3762, 11311, 339, 44, "Output",ExpressionUUID->"18976968-6be4-4d0d-a159-0487bbb49a79"],
Cell[141231, 4103, 1550, 45, 41, "Output",ExpressionUUID->"1f798de1-9d9a-4834-96c2-3057a5a333f0"]
}, Open  ]],
Cell[142796, 4151, 547, 13, 26, "Text",ExpressionUUID->"d1e9185e-f11e-4c7f-bd43-5829427c04e5"],
Cell[CellGroupData[{
Cell[143368, 4168, 2840, 80, 149, "Input",ExpressionUUID->"c48c7848-b8dd-493d-9680-439fb028c0e7"],
Cell[146211, 4250, 439, 6, 25, "Output",ExpressionUUID->"62bd82a0-031e-417a-9485-c7d2946cef86"],
Cell[146653, 4258, 2222, 63, 50, "Output",ExpressionUUID->"b4c123b8-2d91-46d9-9455-c67bac04967c"]
}, Open  ]],
Cell[148890, 4324, 214, 5, 26, "Text",ExpressionUUID->"e3559562-9994-4114-936f-bebd2b76aca0"],
Cell[CellGroupData[{
Cell[149129, 4333, 1914, 60, 97, "Input",ExpressionUUID->"010536c3-8421-408d-86da-812e1f410665"],
Cell[151046, 4395, 7771, 232, 33, "Output",ExpressionUUID->"d18c90ff-8abb-40c8-9d8d-7f8882f4dbeb"],
Cell[158820, 4629, 1698, 56, 43, "Output",ExpressionUUID->"c3f6c53f-5b0a-4dd1-9d5f-7687c520d50d"]
}, Open  ]],
Cell[160533, 4688, 192, 3, 26, "Text",ExpressionUUID->"6e2f8d22-553a-4554-b786-e89f997cbf93"],
Cell[CellGroupData[{
Cell[160750, 4695, 804, 21, 54, "Input",ExpressionUUID->"a4273cd4-bc4c-4e19-adb2-63ce67d52d4c"],
Cell[161557, 4718, 9382, 271, 33, "Output",ExpressionUUID->"f93eea2f-5a70-4bd4-b0ae-e1993079fc9c"],
Cell[170942, 4991, 12606, 407, 56, "Output",ExpressionUUID->"50bfd95c-ce56-43b0-84cd-db1465f2d726"]
}, Open  ]],
Cell[183563, 5401, 158, 3, 26, "Text",ExpressionUUID->"43f88b95-61bc-4e87-bf14-073b42d77ed6"],
Cell[183724, 5406, 2299, 58, 135, "Input",ExpressionUUID->"b9556f41-719d-478e-a601-6ed2abdae134"],
Cell[CellGroupData[{
Cell[186048, 5468, 768, 17, 22, "Input",ExpressionUUID->"58a4f2d2-c446-49db-bbd8-9f2a20bd12db"],
Cell[186819, 5487, 18281, 587, 87, "Output",ExpressionUUID->"21015d06-17ae-401a-8d14-311c6d9414fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205137, 6079, 1024, 28, 22, "Input",ExpressionUUID->"71361eb6-4f08-4418-b16c-25120397152c"],
Cell[206164, 6109, 8878, 287, 41, "Output",ExpressionUUID->"eef3e2fa-d3a2-482c-84d7-81e7a484692a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215079, 6401, 1653, 49, 78, "Input",ExpressionUUID->"9b17a9f7-6d38-44b8-9e27-e528f4f52e6d"],
Cell[216735, 6452, 12684, 401, 46, "Output",ExpressionUUID->"13a12917-592a-48b9-be75-f2d9bbc899a8"],
Cell[229422, 6855, 4574, 149, 50, "Output",ExpressionUUID->"855572c6-7f15-4426-8cfe-5236f72171ac"],
Cell[233999, 7006, 322, 5, 25, "Output",ExpressionUUID->"d8124762-9526-42ae-bca4-20fdfa343447"]
}, Open  ]],
Cell[234336, 7014, 301, 6, 22, "Input",ExpressionUUID->"27a6df6e-4a2c-410f-bef8-22674ec5fea9"],
Cell[CellGroupData[{
Cell[234662, 7024, 315, 5, 22, "Input",ExpressionUUID->"b47f83ff-6575-4738-b929-25d88d57369c"],
Cell[234980, 7031, 312035, 5626, 871, "Output",ExpressionUUID->"86d92432-a941-4cbe-805a-1151a513c53e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547052, 12662, 543, 10, 38, "Input",ExpressionUUID->"8c5944b8-9754-4b98-995d-c530a766dbcc"],
Cell[547598, 12674, 1063, 23, 18, "Print",ExpressionUUID->"30a29ffa-4118-4f7c-96f3-a9b13a70bd6a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[548710, 12703, 149, 3, 51, "Section",ExpressionUUID->"23f6ae88-f8de-46fc-818f-522b0f3822c2"],
Cell[CellGroupData[{
Cell[548884, 12710, 329, 7, 22, "Input",ExpressionUUID->"b42c680f-0664-4c2e-99a6-e785f7b6c90a"],
Cell[CellGroupData[{
Cell[549238, 12721, 2695, 47, 18, "Print",ExpressionUUID->"52e7d773-e5f1-45cb-a261-6c6bbb547e43"],
Cell[551936, 12770, 1180, 21, 18, "Print",ExpressionUUID->"384fcf11-0617-41cb-a730-7f422ad2c2af"],
Cell[553119, 12793, 846, 16, 18, "Print",ExpressionUUID->"826465f7-00ce-423a-b01b-c98d849f3106"],
Cell[553968, 12811, 1433, 29, 18, "Print",ExpressionUUID->"2b68fbcb-d2ed-47f9-8feb-870222687615"],
Cell[555404, 12842, 2100, 40, 18, "Print",ExpressionUUID->"edcc95a8-361f-4bbb-a984-916f31d888a6"],
Cell[557507, 12884, 1564, 32, 18, "Print",ExpressionUUID->"d05a884e-c439-4606-ab67-59ef33d5e557"],
Cell[559074, 12918, 2353, 45, 18, "Print",ExpressionUUID->"933ddb6b-b01c-430a-b6c3-7d822897c8f9"],
Cell[561430, 12965, 1082, 22, 18, "Print",ExpressionUUID->"d42de0cb-462e-471a-b146-e9194079ce5c"]
}, Open  ]]
}, Open  ]],
Cell[562539, 12991, 268, 4, 22, "Input",ExpressionUUID->"d7ac9d46-d38e-4349-b84c-7672b5e64125"],
Cell[CellGroupData[{
Cell[562832, 12999, 315, 8, 24, "Input",ExpressionUUID->"0f87390e-9cc4-4179-8804-d4dfaed3d3c6"],
Cell[563150, 13009, 708, 23, 29, "Output",ExpressionUUID->"12044c73-ec55-4fd3-a5a7-838f8a0fec7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563895, 13037, 349, 7, 22, "Input",ExpressionUUID->"7fc7b6f5-91d6-4cea-959b-da7f17a3dc37"],
Cell[564247, 13046, 6690, 183, 38, "Output",ExpressionUUID->"280a099e-93e7-41e5-a65b-dde6e5948679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570974, 13234, 886, 26, 24, "Input",ExpressionUUID->"e88ed392-e354-4fe5-a0b4-9762be123c01"],
Cell[571863, 13262, 2323, 68, 38, "Output",ExpressionUUID->"a74157be-8a35-45be-984b-2170fe010489"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574223, 13335, 1926, 59, 63, "Input",ExpressionUUID->"3ec8c3d5-b19c-4f03-b61b-d82c1816f1f0"],
Cell[576152, 13396, 7769, 232, 33, "Output",ExpressionUUID->"ff703e49-3227-44a1-ab6c-4ce4de16a1d8"],
Cell[583924, 13630, 1696, 56, 43, "Output",ExpressionUUID->"2218b68c-06da-450c-b1c9-9a10766937d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585657, 13691, 693, 19, 38, "Input",ExpressionUUID->"1d497746-da4f-48d9-bfbc-6550a8e5458d"],
Cell[586353, 13712, 9410, 271, 33, "Output",ExpressionUUID->"89de343c-b868-4b6c-bf4c-3434f0d0b904"],
Cell[595766, 13985, 12634, 407, 56, "Output",ExpressionUUID->"ce2a151a-2722-40a4-8072-2f782f387376"]
}, Open  ]]
}, Open  ]]
}
]
*)

