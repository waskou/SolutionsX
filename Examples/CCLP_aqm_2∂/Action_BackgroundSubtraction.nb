(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    440418,      10483]
NotebookOptionsPosition[    430095,      10334]
NotebookOutlinePosition[    430545,      10351]
CellTagsIndexPosition[    430502,      10348]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "SolutionsX`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8689556005709877`*^9, 3.868955604233922*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7420fda8-9cd7-4bdf-9455-300c44a0809b"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959130578136*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b6ff99ad-8aea-4fbf-ae10-a757d4a8cb92"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.3", ", ", {2015, 8, 23}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591305815487`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a867070b-ef2a-4f7c-a5ad-d0c87c049a8a"],

Cell[BoxData["\<\"CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959130585774*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"74cab10c-bc8d-4280-a0bc-68db70265311"],

Cell[BoxData["\<\"Connecting to external linux executable...\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959130667219*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ce647369-c9ee-4eec-aefe-f6dc2e98e064"],

Cell[BoxData["\<\"Connection established.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959130752894*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9901e15b-ad25-4af9-8c96-961642bf454a"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959130755245*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f9018ddf-f47e-4b3e-9e83-a8bb73bb2744"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTensor`  version ", "1.1.5", ", ", {2021, 2, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959130757187*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1eb82a1d-7e23-466c-974a-f39e64c64e2d"],

Cell[BoxData["\<\"CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959130759081*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8fc07064-c4f6-4c12-bfc9-88cdfbfe1d20"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131005055*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c5aff7a1-11d2-4923-9a1e-0b1beeed108f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPert`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.0.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xPert`  version ", "1.0.6", ", ", {2018, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591310072813`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ff16bd5b-6ac8-4088-93e2-ee95f0e15313"],

Cell[BoxData["\<\"CopyRight (C) 2005-2020, David Brizuela, Jose M. \
Martin-Garcia and Guillermo A. Mena Marugan, under the General Public \
License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131009511*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"080b5047-ed1c-4470-8be5-fcb28199c65c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$PrePrint", 
   "\[InvisibleSpace]", "\<\" assigned value \"\>", "\[InvisibleSpace]", 
   "ScreenDollarIndices"}],
  SequenceForm[
  "** Variable ", $PrePrint, " assigned value ", 
   xAct`xTensor`ScreenDollarIndices],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591310578947`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1458a820-8227-4831-b2a0-29bacd2a4ed0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>", "\[InvisibleSpace]", "\<\" to \"\>",
    "\[InvisibleSpace]", "\<\"Postfix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Prefix", 
   " to ", "Postfix"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131061228*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8774204c-3a53-472b-b7fe-f95f9c33dab0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "AllowUpperDerivatives", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "ContractMetric",
    "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`AllowUpperDerivatives, " of ", 
   xAct`xTensor`ContractMetric, " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131064651*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"789bca78-98db-42fd-b5d2-a579f48165ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "MetricOn", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "None",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "All"}],
  SequenceForm[
  "** Option ", xAct`xTensor`MetricOn, " of ", xAct`xTensor`MakeRule, 
   " changed from ", None, " to ", All],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131067876*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e0057060-2204-4992-9efc-268f8187f191"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "ContractMetrics", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`ContractMetrics, " of ", xAct`xTensor`MakeRule, 
   " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131071158*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"10869c32-21fe-4c47-8c87-80a89d849f61"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131103258*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c4883f3e-a5de-4904-9a72-aa112771d764"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`Invar`  version \"\>", 
   "\[InvisibleSpace]", "\<\"2.0.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`Invar`  version ", "2.0.5", ", ", {2013, 7, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131106196*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9aedf59c-0dff-4951-8c4b-2d7ed2763dcf"],

Cell[BoxData["\<\"CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes \
and R. Portugal, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591311086063`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"08ce44b8-552c-4975-af1d-421023399f96"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "sigma", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`sigma, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131111835*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"313c29b9-88fe-4a80-ba91-e3b7a4a8dc2a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "dim", "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`dim, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131115252*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9224e197-d9f3-4f33-9029-e4fcac2f2d62"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "True",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", True, " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131118559*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6ed66fb7-2ad2-48ed-9991-edab254b7503"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "True", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", True,
    " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591311217327`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"05cd3c27-258c-43c6-b236-c1198f70b122"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.86895913115623*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"629d969b-036d-435b-be31-22ccce09a07c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xCoba`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xCoba`  version ", "0.8.6", ", ", {2021, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131159553*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fa37c7b1-c0d1-4361-a661-7384cb3d1dd8"],

Cell[BoxData["\<\"CopyRight (C) 2005-2021, David Yllanes and Jose M. \
Martin-Garcia, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131162998*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"92b85ba7-3a4f-4cb0-b696-4c813a710698"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131924757*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"cde14bab-cf0f-4517-afbc-8282f853f5d3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`SymManipulator`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.4\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "11", ",", "29"}], "}"}]}],
  SequenceForm[
  "Package xAct`SymManipulator`  version ", "0.9.4", ", ", {2016, 11, 29}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131927355*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"636c0db6-ef94-4f62-bc4b-4ce9fd2c1183"],

Cell[BoxData["\<\"CopyRight (C) 2011-2016, Thomas B\[ADoubleDot]ckdahl, under \
the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959131929981*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c515b126-d936-43be-a6e3-def807bb6725"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591320333242`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e649b9dc-d950-4ef9-8a2d-f144ed5b4ee4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTras`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "10", ",", "30"}], "}"}]}],
  SequenceForm["Package xAct`xTras`  version ", "1.4.2", ", ", {2014, 10, 30}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591320356913`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f7d7f45f-93ee-4e46-af80-521e22c9eed5"],

Cell[BoxData["\<\"CopyRight (C) 2012-2014, Teake Nutma, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591320377693`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1d523ddc-272d-4603-b400-f7b019eecfdf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Postfix\"\>", 
   "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Postfix", 
   " to ", "Prefix"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959132040163*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d60701d8-ef6a-48a3-8d10-de53bb662b1c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591320424633`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"5e69b4ed-fb46-4239-9055-a505522ee73f"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133538602*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2c4abf57-bbbb-40f9-815d-bb6ef6c79e45"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`TexAct`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "19"}], "}"}]}],
  SequenceForm["Package xAct`TexAct`  version ", "0.4.2", ", ", {2021, 2, 19}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133543769*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"538134da-e6ff-4bd8-bcd9-e053a6cb3d81"],

Cell[BoxData["\<\"CopyRight (C) 2008-2021, Thomas B\[ADoubleDot]ckdahl, Jose \
M. Martin-Garcia and Barry Wardell, under the General Public License.\"\>"], \
"Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133548821*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2832c297-f2f5-4698-94ec-51f260d3e8e5"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133657837*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"971bd44d-e8df-45d7-aaea-cc969c5d5ee1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`FieldsX` version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "5", ",", "27"}], "}"}]}],
  SequenceForm["Package xAct`FieldsX` version ", "1.1.3", ", ", {2021, 5, 27}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133663146*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"756904a6-d2a2-47c6-898f-297fdc46777c"],

Cell[BoxData["\<\"Copyright \[Copyright] 2019-2021 Markus B. Fr\[ODoubleDot]b \
under the GNU General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133668561*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b4a3a5b3-ae6d-4604-8c9d-6d17cc8d04aa"],

Cell[BoxData["\<\"FieldsX uses the Multisets package \[Copyright] 2011 David \
Bevan under the Wolfram Library Archive License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133673689*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"800b089e-a074-46df-8142-58998c02b8d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "False", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", 
   False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591337244873`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"704d5f07-28fd-4ae4-a6c2-ee97bddad16f"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591339403477`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2da3e5cc-8d97-4ef3-9371-97e6dee20659"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2019", ",", "5", ",", "17"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTerior`  version ", "0.9.1", ", ", {2019, 5, 17}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959133945672*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ade1b74b-38b3-45a8-9e32-9ea4573a804c"],

Cell[BoxData["\<\"CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and \
Leo C. Stein, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591339503803`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6ebea10f-3565-4e16-8c00-bae4360a236c"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.8689591340106373`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"84cf5cff-c651-4f18-a101-a39351166daa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package SolutionsX`SolutionsX`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.0.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2022", ",", "3", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package SolutionsX`SolutionsX`  version ", "0.0.1", ", ", {2022, 3, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959134015706*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"15a99557-7eb4-42e5-a89c-29350c1d50c0"],

Cell[BoxData["\<\"Copyright (C) 2022, Vasil Dimitrov, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959134020912*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3f670538-c3bd-4838-b87a-dcf9411e3e35"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959134025899*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a4b47733-d0a7-4cd2-8241-e8585449d662"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959134030788*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"31330311-2129-4535-b5d0-a05087c30378"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8689556141758547`*^9, 3.868956504802923*^9, 
  3.868959134035699*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3f8c8392-fad6-487f-b587-26c9c2d5b2b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On-shell action (background subtraction)", "Section",
 CellChangeTimes->{{3.868955621892808*^9, 
  3.8689556352239017`*^9}},ExpressionUUID->"38f56b74-a047-488a-839a-\
7d856e976f7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{"CCLP", ",", "Bulk", ",", "Hopf2", ",", "Euclidean"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868801408305434*^9, 3.8688014289312563`*^9}, {
  3.868955645960248*^9, 3.8689556463023357`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"bfd9402f-b9f0-485f-a1f4-2b69313d1aca"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"5\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955649065756*^9, 3.868956516296101*^9, 
  3.868959134611258*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"7dffdff4-dee9-409c-9ba4-f8d2f25d7cf0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\"}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955649065756*^9, 3.868956516296101*^9, 
  3.868959134617865*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"2564d40f-934e-4f10-8d38-6bf328672c38"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955649065756*^9, 3.868956516296101*^9, 
  3.8689591346256523`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"5a57aea8-ae4a-4965-84c6-3ea0a115df6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955649065756*^9, 3.868956516296101*^9, 
  3.868959134631958*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"157b1529-452b-421c-9d57-fc11f7e6af51"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955649065756*^9, 3.868956516296101*^9, 
  3.8689591352427063`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"5897d36b-b806-4d1a-8b67-19ec4f163148"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\
\[Tau]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"r\\\", \\\"(\\\", \
\\\")\\\"}], \\\",\\\", RowBox[{\\\"\[Theta]\\\", \\\"(\\\", \\\")\\\"}], \
\\\",\\\", RowBox[{\\\"\[Phi]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", \
RowBox[{\\\"\[Psi]\\\", \\\"(\\\", \\\")\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"\[Tau]\", \"(\", \")\
\"}], \",\", RowBox[{\"r\", \"(\", \")\"}], \",\", RowBox[{\"\[Theta]\", \
\"(\", \")\"}], \",\", RowBox[{\"\[Phi]\", \"(\", \")\"}], \",\", RowBox[{\"\
\[Psi]\", \"(\", \")\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955649065756*^9, 3.868956516296101*^9, 
  3.868959135425601*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"4c4acd0e-6b02-41ff-8e4e-fe3cfda6dfc3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/Default\\\\\\\"\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/Default\\\"\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955649065756*^9, 3.868956516296101*^9, 
  3.868959135547583*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"05f39c78-bd31-442a-910a-d78bd4f7eec5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LoadAppendConstant", "[", 
  RowBox[{"{", 
   RowBox[{"r0", ",", "rp", ",", "G5", ",", "\[Beta]"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendAssumption", "[", 
  RowBox[{"$constant", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "<", "rp", "<", "$infinity"}], ",", 
     RowBox[{"0", "<", "r0", "<", "$infinity"}], ",", 
     RowBox[{"rp", "<", "r0"}], ",", 
     RowBox[{"0", "<", "G5", "<", "$infinity"}], ",", 
     RowBox[{"0", "<", "\[Beta]", "<", "$infinity"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"mTrp", ",", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Bulk", ",", "Hopf2", ",", "Lorentzian", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "mTrp"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"\[Alpha]T\[CapitalPhi]", ",", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Bulk", ",", "Hopf2", ",", "Lorentzian", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "\[Alpha]T\[CapitalPhi]"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86886829508323*^9, 3.868868304897133*^9}, {
  3.868869352205431*^9, 3.868869359508335*^9}, {3.868955672923191*^9, 
  3.86895568443878*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d632663b-9b28-4b56-ad26-db41a4aaf432"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"r0\\\", \
\\\",\\\", \\\"rp\\\", \\\",\\\", \\\"G5\\\", \\\",\\\", \\\"\[Beta]\\\"}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"r0\", \",\", \"rp\", \",\", \
\"G5\", \",\", \"\[Beta]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\"}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868955707197843*^9, 3.8689565180921507`*^9, 
  3.868959135677517*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"15bd4ca9-7581-48c6-be7d-1029363b4b39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$olution", "[", 
    RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], "/.", 
   RowBox[{"q", "\[Rule]", "0"}]}], "/.", 
  RowBox[{"m", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"AdS5", ",", "Bulk", ",", "Hopf2", ",", "Euclidean"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "}"}]}], "]"}], "//", 
  "Simplification"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "-", "%%"}], "//", "Simplification"}], "\[IndentingNewLine]", 
 RowBox[{"cc", "=", 
  RowBox[{"ChangeCoord", "[", 
   RowBox[{"{", 
    RowBox[{"AdS5", ",", "Bulk", ",", "Hopf2", ",", "Euclidean"}], "}"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.868802117500979*^9, 3.868802123383965*^9}, {
  3.868802747867311*^9, 3.868802761315836*^9}, {3.868802965378408*^9, 
  3.86880298339478*^9}, {3.868803230114003*^9, 3.868803230936153*^9}, {
  3.868955753806386*^9, 3.868955754084736*^9}, {3.868956583125451*^9, 
  3.868956589821011*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7e1363a5-f988-415e-aed1-fa1ef7bc86ac"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        InterpretationBox[
         StyleBox[
          RowBox[{"d", "[", 
           InterpretationBox[
            StyleBox["\[Theta]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
            Editable->False], "]"}],
          ShowAutoStyles->False,
          AutoSpacing->False],
         xAct`xTerior`Diff[
          CCLP`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
         Editable->False], "\[CircleTimes]", 
        InterpretationBox[
         StyleBox[
          RowBox[{"d", "[", 
           InterpretationBox[
            StyleBox["\[Theta]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
            Editable->False], "]"}],
          ShowAutoStyles->False,
          AutoSpacing->False],
         xAct`xTerior`Diff[
          CCLP`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
         Editable->False]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        InterpretationBox[
         StyleBox["Cos",
          ShowAutoStyles->False,
          AutoSpacing->False],
         Cos,
         Editable->False], "[", 
        FractionBox[
         InterpretationBox[
          StyleBox["\[Theta]",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
          Editable->False], "2"], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["r",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`r[],
          Editable->False], "2"]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}]], "-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Tau]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Tau][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Tau]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Tau][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}]], "+", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["r",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`r[],
          Editable->False], "2"]}], ")"}]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "4"], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "6"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`r[],
            Editable->False], "2"]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`r[],
            Editable->False], "4"]}]}], ")"}]}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Phi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[
           RowBox[{"d", "[", 
            InterpretationBox[
             StyleBox["\[Psi]",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
             Editable->False], "]"}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Diff[
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
          Editable->False]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["r",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`r[],
          Editable->False], "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        InterpretationBox[
         StyleBox["Sin",
          ShowAutoStyles->False,
          AutoSpacing->False],
         Sin,
         Editable->False], "[", 
        FractionBox[
         InterpretationBox[
          StyleBox["\[Theta]",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
          Editable->False], "2"], "]"}], "2"]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.868955758172316*^9, 3.868956522608727*^9, 
  3.868956591843532*^9, 3.868959136690189*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"425a958a-3c2e-4cf9-87d3-589ab489ce18"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], "+", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["r",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`r[],
          Editable->False], "2"]}]}], ")"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "4"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False]}]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "4"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "4"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Cos",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Cos,
        Editable->False], "[", 
       InterpretationBox[
        StyleBox["\[Theta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
        Editable->False], "]"}]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "4"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "4"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Cos",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Cos,
        Editable->False], "[", 
       InterpretationBox[
        StyleBox["\[Theta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
        Editable->False], "]"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "4"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Cos",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Cos,
        Editable->False], "[", 
       InterpretationBox[
        StyleBox["\[Theta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
        Editable->False], "]"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "2"]}], "+", 
     RowBox[{
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "4"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "4"]}], "+", 
     RowBox[{
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "4"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "4"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Cos",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Cos,
        Editable->False], "[", 
       InterpretationBox[
        StyleBox["\[Theta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
        Editable->False], "]"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "4"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Cos",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Cos,
        Editable->False], "[", 
       InterpretationBox[
        StyleBox["\[Theta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
        Editable->False], "]"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "4"]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "6"]}], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "6"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Phi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Psi]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Cos",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Cos,
        Editable->False], "[", 
       InterpretationBox[
        StyleBox["\[Theta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
        Editable->False], "]"}], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r[],
        Editable->False], "6"]}], "+", 
     RowBox[{
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Theta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Theta]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "2"]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r[],
           Editable->False], "2"]}]}], ")"}]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Tau]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Tau][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
        Editable->False], "\[CircleTimes]", 
       InterpretationBox[
        StyleBox[
         RowBox[{"d", "[", 
          InterpretationBox[
           StyleBox["\[Tau]",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`\[Tau][],
           Editable->False], "]"}],
         ShowAutoStyles->False,
         AutoSpacing->False],
        xAct`xTerior`Diff[
         CCLP`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
        Editable->False]}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["r",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`r[],
          Editable->False], "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`r[],
            Editable->False], "2"]}]}], ")"}], "2"]}]}], ")"}]}]}]], "Output",\

 CellChangeTimes->{3.868955758172316*^9, 3.868956522608727*^9, 
  3.868956591843532*^9, 3.868959137669841*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"1a062db6-3881-4e6a-8432-7b10c587b347"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.868955758172316*^9, 3.868956522608727*^9, 
  3.868956591843532*^9, 3.8689591378764887`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"642f0ba4-65f7-4cab-a116-2bc46344ba2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AdS5`Bulk`Hopf2`Euclidean`\[Tau]", "\[Rule]", "\[Tau]"}], ",", 
   RowBox[{"AdS5`Bulk`Hopf2`Euclidean`r", "\[Rule]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], "+", 
       SuperscriptBox["r", "2"]}], 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}]]]}], ",", 
   RowBox[{"AdS5`Bulk`Hopf2`Euclidean`\[Theta]", "\[Rule]", "\[Theta]"}], ",", 
   RowBox[{"AdS5`Bulk`Hopf2`Euclidean`\[Phi]", "\[Rule]", "\[Phi]"}], ",", 
   RowBox[{"AdS5`Bulk`Hopf2`Euclidean`\[Psi]", "\[Rule]", "\[Psi]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.868955758172316*^9, 3.868956522608727*^9, 
  3.868956591843532*^9, 3.868959137879245*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"e4afe2a3-2b5f-40f0-a4a4-eb3df2e2c7b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"$olution", "[", 
      RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], "/.", 
     RowBox[{"q", "\[Rule]", "0"}]}], "/.", 
    RowBox[{"m", "\[Rule]", "0"}]}], "/.", 
   RowBox[{"a", "\[Rule]", "0"}]}], "//", 
  "Simplification"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"AdS5", ",", "Bulk", ",", "Hopf2", ",", "Euclidean"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "}"}], ",", 
    RowBox[{"ChangeCoord", "\[Rule]", "False"}]}], "]"}], "//", 
  "Simplification"}]}], "Input",
 CellChangeTimes->{{3.868802798652238*^9, 3.868802860099091*^9}, {
  3.868802891343992*^9, 3.868802891724257*^9}, {3.868869539907353*^9, 
  3.8688695492693243`*^9}, {3.8688695934191008`*^9, 3.868869617561471*^9}, {
  3.868956607734755*^9, 3.8689566397085133`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"96d68b15-cfef-467f-b40d-372e33024c26"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"4", " ", 
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       CCLP`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
      Editable->False]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Theta]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            CCLP`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
           Editable->False], "\[CircleTimes]", 
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Theta]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            CCLP`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
           Editable->False]}], "+", 
         RowBox[{
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Phi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
           Editable->False], "\[CircleTimes]", 
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Phi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
           Editable->False]}], "+", 
         RowBox[{
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Psi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
           Editable->False], "\[CircleTimes]", 
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Psi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
           Editable->False]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           InterpretationBox[
            StyleBox[
             RowBox[{"d", "[", 
              InterpretationBox[
               StyleBox["\[Phi]",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`\[Phi][],
               Editable->False], "]"}],
             ShowAutoStyles->False,
             AutoSpacing->False],
            xAct`xTerior`Diff[
             CCLP`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
            Editable->False], "\[CircleTimes]", 
           InterpretationBox[
            StyleBox[
             RowBox[{"d", "[", 
              InterpretationBox[
               StyleBox["\[Psi]",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`\[Psi][],
               Editable->False], "]"}],
             ShowAutoStyles->False,
             AutoSpacing->False],
            xAct`xTerior`Diff[
             CCLP`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
            Editable->False]}], " ", 
          RowBox[{
           InterpretationBox[
            StyleBox["Cos",
             ShowAutoStyles->False,
             AutoSpacing->False],
            Cos,
            Editable->False], "[", 
           InterpretationBox[
            StyleBox["\[Theta]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`\[Theta][],
            Editable->False], "]"}]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "2"]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{
        InterpretationBox[
         StyleBox[
          RowBox[{"d", "[", 
           InterpretationBox[
            StyleBox["\[Tau]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`\[Tau][],
            Editable->False], "]"}],
          ShowAutoStyles->False,
          AutoSpacing->False],
         xAct`xTerior`Diff[
          CCLP`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
         Editable->False], "\[CircleTimes]", 
        InterpretationBox[
         StyleBox[
          RowBox[{"d", "[", 
           InterpretationBox[
            StyleBox["\[Tau]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`\[Tau][],
            Editable->False], "]"}],
          ShowAutoStyles->False,
          AutoSpacing->False],
         xAct`xTerior`Diff[
          CCLP`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
         Editable->False]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`r[],
            Editable->False], "2"]}]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"4", "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`g,
      Editable->False], "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`r[],
      Editable->False], "2"]}]}]]], "Output",
 CellChangeTimes->{{3.868956620056389*^9, 3.8689566405442553`*^9}, 
   3.868959138127049*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"d1ec5730-bfb9-4eb2-bef2-042402726432"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"4", " ", 
    RowBox[{
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         AdS5`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       AdS5`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
      Editable->False], "\[CircleTimes]", 
     InterpretationBox[
      StyleBox[
       RowBox[{"d", "[", 
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         AdS5`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      xAct`xTerior`Diff[
       AdS5`Bulk`Hopf2`Euclidean`r[], xAct`xTensor`PD],
      Editable->False]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         AdS5`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Theta]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              AdS5`Bulk`Hopf2`Euclidean`\[Theta][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            AdS5`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
           Editable->False], "\[CircleTimes]", 
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Theta]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              AdS5`Bulk`Hopf2`Euclidean`\[Theta][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            AdS5`Bulk`Hopf2`Euclidean`\[Theta][], xAct`xTensor`PD],
           Editable->False]}], "+", 
         RowBox[{
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Phi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              AdS5`Bulk`Hopf2`Euclidean`\[Phi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            AdS5`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
           Editable->False], "\[CircleTimes]", 
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Phi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              AdS5`Bulk`Hopf2`Euclidean`\[Phi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            AdS5`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
           Editable->False]}], "+", 
         RowBox[{
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Psi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              AdS5`Bulk`Hopf2`Euclidean`\[Psi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            AdS5`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
           Editable->False], "\[CircleTimes]", 
          InterpretationBox[
           StyleBox[
            RowBox[{"d", "[", 
             InterpretationBox[
              StyleBox["\[Psi]",
               ShowAutoStyles->False,
               AutoSpacing->False],
              AdS5`Bulk`Hopf2`Euclidean`\[Psi][],
              Editable->False], "]"}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Diff[
            AdS5`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
           Editable->False]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           InterpretationBox[
            StyleBox[
             RowBox[{"d", "[", 
              InterpretationBox[
               StyleBox["\[Phi]",
                ShowAutoStyles->False,
                AutoSpacing->False],
               AdS5`Bulk`Hopf2`Euclidean`\[Phi][],
               Editable->False], "]"}],
             ShowAutoStyles->False,
             AutoSpacing->False],
            xAct`xTerior`Diff[
             AdS5`Bulk`Hopf2`Euclidean`\[Phi][], xAct`xTensor`PD],
            Editable->False], "\[CircleTimes]", 
           InterpretationBox[
            StyleBox[
             RowBox[{"d", "[", 
              InterpretationBox[
               StyleBox["\[Psi]",
                ShowAutoStyles->False,
                AutoSpacing->False],
               AdS5`Bulk`Hopf2`Euclidean`\[Psi][],
               Editable->False], "]"}],
             ShowAutoStyles->False,
             AutoSpacing->False],
            xAct`xTerior`Diff[
             AdS5`Bulk`Hopf2`Euclidean`\[Psi][], xAct`xTensor`PD],
            Editable->False]}], " ", 
          RowBox[{
           InterpretationBox[
            StyleBox["Cos",
             ShowAutoStyles->False,
             AutoSpacing->False],
            Cos,
            Editable->False], "[", 
           InterpretationBox[
            StyleBox["\[Theta]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            AdS5`Bulk`Hopf2`Euclidean`\[Theta][],
            Editable->False], "]"}]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r",
          ShowAutoStyles->False,
          AutoSpacing->False],
         AdS5`Bulk`Hopf2`Euclidean`r[],
         Editable->False], "2"]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{
        InterpretationBox[
         StyleBox[
          RowBox[{"d", "[", 
           InterpretationBox[
            StyleBox["\[Tau]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            AdS5`Bulk`Hopf2`Euclidean`\[Tau][],
            Editable->False], "]"}],
          ShowAutoStyles->False,
          AutoSpacing->False],
         xAct`xTerior`Diff[
          AdS5`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
         Editable->False], "\[CircleTimes]", 
        InterpretationBox[
         StyleBox[
          RowBox[{"d", "[", 
           InterpretationBox[
            StyleBox["\[Tau]",
             ShowAutoStyles->False,
             AutoSpacing->False],
            AdS5`Bulk`Hopf2`Euclidean`\[Tau][],
            Editable->False], "]"}],
          ShowAutoStyles->False,
          AutoSpacing->False],
         xAct`xTerior`Diff[
          AdS5`Bulk`Hopf2`Euclidean`\[Tau][], xAct`xTensor`PD],
         Editable->False]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r",
             ShowAutoStyles->False,
             AutoSpacing->False],
            AdS5`Bulk`Hopf2`Euclidean`r[],
            Editable->False], "2"]}]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"4", "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`g,
      Editable->False], "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r",
       ShowAutoStyles->False,
       AutoSpacing->False],
      AdS5`Bulk`Hopf2`Euclidean`r[],
      Editable->False], "2"]}]}]]], "Output",
 CellChangeTimes->{{3.868956620056389*^9, 3.8689566405442553`*^9}, 
   3.8689591382740602`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"20503be2-91b4-4ce6-b116-e2899cbd7836"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateMetric", "[", 
    RowBox[{
     RowBox[{"$olution", "[", 
      RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "\[Theta]", ",", "\[Phi]", ",", "\[Psi]"}], 
      "}"}]}], "]"}], "/.", "ToCoord"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SqrtBox[
    RowBox[{"Det", "@", "%"}]], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Infinity]", ",", "0"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", ">", "0"}], ",", 
        RowBox[{"g", ">", "0"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"8", 
    SuperscriptBox["\[Pi]", "2"], "\[Beta]", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"r", "\[Rule]", "r0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"bdyVolBH", "=", 
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.868801619672933*^9, 3.868801692299142*^9}, {
   3.868801730041313*^9, 3.868801756233737*^9}, {3.8688018026161947`*^9, 
   3.8688018035372667`*^9}, 3.86880203281071*^9, {3.868803154729981*^9, 
   3.868803160281584*^9}, {3.8688697320219793`*^9, 3.868869741832041*^9}, {
   3.868956663024556*^9, 3.868956714191821*^9}, {3.868956746146118*^9, 
   3.868956792069056*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"4496f76c-5bb8-4429-b61e-e438bd0029fa"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "4"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "4"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["m",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`m,
        Editable->False]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`g,
      Editable->False], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`r0,
      Editable->False], "2"], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`r0,
      Editable->False], "4"], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`\[Beta],
     Editable->False]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.8689567104765587`*^9, 3.868956715679797*^9}, 
   3.8689568239272223`*^9, 3.868959172440683*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"2ff41184-b38f-4624-8ebe-dfe1dc35cff1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateMetric", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"$olution", "[", 
       RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "\[Rule]", "0"}], ",", 
        RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "\[Theta]", ",", "\[Phi]", ",", "\[Psi]"}], 
      "}"}]}], "]"}], "/.", "ToCoord"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SqrtBox[
    RowBox[{"Det", "@", "%"}]], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Infinity]", ",", "0"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", ">", "0"}], ",", 
        RowBox[{"g", ">", "0"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"8", 
    SuperscriptBox["\[Pi]", "2"], "\[Tau]upper", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"r", "\[Rule]", "r0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"bdyVolAdS", "=", 
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.868801982053246*^9, 3.868801995327601*^9}, {
   3.868802028217029*^9, 3.8688020359344683`*^9}, {3.868803192724639*^9, 
   3.868803200773231*^9}, {3.868869698315099*^9, 3.868869701879466*^9}, 
   3.8688698102161417`*^9, {3.868956864320997*^9, 3.86895695064351*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"89aa5a74-3b69-49bc-817f-b3a25b0d836f"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "4"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "4"]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", "\[Tau]upper"}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`g,
      Editable->False], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`r0,
      Editable->False], "2"], " ", "\[Tau]upper"}], 
   RowBox[{
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["r0",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`r0,
      Editable->False], "4"], " ", "\[Tau]upper"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.868956927350573*^9, 3.8689569820682087`*^9, 
  3.8689592031056433`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"2573899e-cea7-4ed2-9a3c-f31b3c0a490e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bdyVolBH", "-", "bdyVolAdS"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "@", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"%", "==", "0"}], ",", "\[Tau]upper", ",", 
     RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "4"}], "}"}]}], "]"}]}]}], 
     "&"}], "/@", 
    RowBox[{"Association", "@", "%"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"\[Tau]upper", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8688033953817463`*^9, 3.868803488115831*^9}, {
   3.868803524801414*^9, 3.868803566729087*^9}, {3.868803694030005*^9, 
   3.868803699724072*^9}, {3.868869867602347*^9, 3.868869956567425*^9}, {
   3.868869990363159*^9, 3.868870022899172*^9}, 3.8688701085246143`*^9, {
   3.868870266405458*^9, 3.868870387768364*^9}, {3.8688704384502487`*^9, 
   3.868870464919623*^9}, {3.868870888194586*^9, 3.868870908122327*^9}, 
   3.868875348649721*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"c8b473d8-715b-4311-8a0d-82a07fda4577"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r0",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r0,
           Editable->False], "4"]}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "8"}], " ", 
            InterpretationBox[
             StyleBox["m",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`m,
             Editable->False]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["g",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`g,
             Editable->False], "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`g,
              Editable->False], "4"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "4"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r0",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r0,
           Editable->False], "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["r0",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`r0,
           Editable->False], "4"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["g",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`g,
             Editable->False], "2"], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`g,
              Editable->False], "4"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`r0,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
      "\[Tau]upper"}]}], ")"}]}], 
  RowBox[{"4", " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`g,
     Editable->False], "3"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.8689570096163683`*^9, 3.868959203255897*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"33f1cdef-8302-4c73-83e7-70e8c5051c69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Tau]upper", "\[Rule]", 
   RowBox[{
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`\[Beta],
     Editable->False], "-", 
    FractionBox[
     RowBox[{
      InterpretationBox[
       StyleBox["m",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`m,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8689570096163683`*^9, 3.868959203591708*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a9af98f5-0571-4a59-af97-3925080a2f24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Values", "@", "cc"}], ")"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], "==", "0"}], ",", "r", ",", 
     RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}], 
   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.", 
  RowBox[{"r", "\[Rule]", "rlower"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"rlower", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868957057460306*^9, 3.86895706527737*^9}, {
  3.8689571407257833`*^9, 3.8689571930802097`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b716ca71-4b6e-4064-9538-a05972b3eb70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"rlower", "\[Rule]", 
   RowBox[{"\[ImaginaryI]", " ", 
    InterpretationBox[
     StyleBox["a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`a,
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8689570660653477`*^9, {3.868957149671072*^9, 3.868957195799068*^9}, 
   3.868959205509636*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"5e95bc7b-592c-45ab-8461-015e6a801c50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"RicciScalarcd", "[", "]"}]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    SuperscriptBox["g", "2"]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"FF", "[", 
     RowBox[{"\[ScriptA]", ",", "\[ScriptB]"}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptA]"}], ",", 
      RowBox[{"-", "\[ScriptB]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"etaUpcurved", "[", 
     RowBox[{
     "\[ScriptA]", ",", "\[ScriptB]", ",", "\[ScriptC]", ",", "\[ScriptD]", 
      ",", "\[ScriptE]"}], "]"}], 
    RowBox[{"AA", "[", 
     RowBox[{"-", "\[ScriptA]"}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptB]"}], ",", 
      RowBox[{"-", "\[ScriptC]"}]}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptD]"}], ",", 
      RowBox[{"-", "\[ScriptE]"}]}], "]"}]}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"terms", ",", "%"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"16", "\[Pi]", " ", "G5"}]]}], 
  RowBox[{"{", 
   RowBox[{"1", ",", "12", ",", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["Cx", "2"], 
      RowBox[{"2", "*", 
       RowBox[{"2", "!"}]}]]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["Cx", "3"]}], 
      RowBox[{"3", 
       SqrtBox["3"], 
       RowBox[{"2", "!"}], "*", 
       RowBox[{"2", "!"}]}]]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"coeff", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868875566047092*^9, 3.8688756226377087`*^9}, {
   3.868875815069652*^9, 3.868875832511763*^9}, 3.868959123861115*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"17314243-db4d-4aff-961f-dbde86f0897d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`g,
      Editable->False], "2"], " ", 
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`Detgg[],
      Editable->False]]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptA]", "\[ScriptB]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[-CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], -
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {"\[ScriptA]", "\[ScriptB]"},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[
     CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]],
     Editable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[GridBox[{
        {"A", 
         StyleBox[GridBox[{
            {" "},
            {"\[ScriptA]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`AA[-CCLP`Bulk`Hopf2`Euclidean`\[ScriptA]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {
         OverscriptBox["\[Eta]", 
          StyleBox["~",
           FontColor->RGBColor[1, 0, 0]]], 
         StyleBox[GridBox[{
            {"\[ScriptA]", "\[ScriptB]", "\[ScriptC]", "\[ScriptD]", 
             "\[ScriptE]"},
            {" ", " ", " ", " ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`etaUpcurved[
     CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], 
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptC], 
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], 
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptB]", "\[ScriptC]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[-CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], -
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptC]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptD]", "\[ScriptE]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[-CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], -
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868957295266012*^9, 3.868959125609363*^9, 
  3.868959206625696*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"e93c9229-424d-4a57-8b95-49dd9a007086"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"16", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox["3", 
     RowBox[{"4", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    SuperscriptBox[
     InterpretationBox[
      StyleBox["Cx",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`Cx,
      Editable->False], "2"], 
    RowBox[{"64", " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]], ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["Cx",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`Cx,
       Editable->False], "3"]}], 
    RowBox[{"192", " ", 
     SqrtBox["3"], " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.868957295266012*^9, 3.868959125609363*^9, 
  3.868959206630817*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"4a6502df-bc18-472b-834a-02d5a6b91619"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
    RowBox[{"(", "#", ")"}]}], "&"}], "/@", 
  RowBox[{"$olution", "[", 
   RowBox[{"$rule", ",", "terms"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Simplify", "@", 
      RowBox[{"ToValues2", "@", 
       RowBox[{"Simplification", "@", 
        RowBox[{"TraceBasisDummy", "@", "#"}]}]}]}], ")"}], "&"}], "/@", 
   "%"}], "/.", "ToCoord"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"integrands", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868875693763183*^9, 3.8688757379303427`*^9}, {
  3.868875837914734*^9, 3.868875846035383*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"9ec09090-ed65-4dd5-a4f3-39bcb498f382"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SuperscriptBox[
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`g,
      Editable->False], "2"], " ", 
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`Detggcurved[],
      Editable->False]]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[{-CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf2`Euclidean`curved}, {-
       CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], -
       CCLP`Bulk`Hopf2`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[{
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
       CCLP`Bulk`Hopf2`Euclidean`curved}, {
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], CCLP`Bulk`Hopf2`Euclidean`curved}],
     Editable->False]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[GridBox[{
        {"A", 
         StyleBox[GridBox[{
            {" "},
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`AA[{-CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], -
       CCLP`Bulk`Hopf2`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {
         OverscriptBox["\[Eta]", 
          StyleBox["~",
           FontColor->RGBColor[1, 0, 0]]], 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptC]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptD]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptE]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" ", " ", " ", " ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`etaUpcurved[{
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
       CCLP`Bulk`Hopf2`Euclidean`curved}, {
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], 
       CCLP`Bulk`Hopf2`Euclidean`curved}, {
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptC], 
       CCLP`Bulk`Hopf2`Euclidean`curved}, {
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], 
       CCLP`Bulk`Hopf2`Euclidean`curved}, {
      CCLP`Bulk`Hopf2`Euclidean`\[ScriptE], CCLP`Bulk`Hopf2`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptC]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[{-CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], -
       CCLP`Bulk`Hopf2`Euclidean`curved}, {-
       CCLP`Bulk`Hopf2`Euclidean`\[ScriptC], -
       CCLP`Bulk`Hopf2`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptD]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptE]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`FF[{-CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], -
       CCLP`Bulk`Hopf2`Euclidean`curved}, {-
       CCLP`Bulk`Hopf2`Euclidean`\[ScriptE], -
       CCLP`Bulk`Hopf2`Euclidean`curved}],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868957330460538*^9, 3.8689592086681643`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"c0ac11b9-a632-4648-ac67-91e8525a4373"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "20"}], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`q,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "-", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "+", "r"}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["a",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`a,
             Editable->False], "2"], "+", 
           SuperscriptBox["r", "2"]}], ")"}], "4"]]}], ")"}], " ", 
     RowBox[{
      InterpretationBox[
       StyleBox["Sin",
        ShowAutoStyles->False,
        AutoSpacing->False],
       Sin,
       Editable->False], "[", "\[Theta]", "]"}]}], 
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`g,
       Editable->False], "2"], " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}], " ", 
     RowBox[{
      InterpretationBox[
       StyleBox["Sin",
        ShowAutoStyles->False,
        AutoSpacing->False],
       Sin,
       Editable->False], "[", "\[Theta]", "]"}]}], 
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]}]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`q,
       Editable->False], "2"], " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], "-", 
       SuperscriptBox["r", "2"]}], ")"}], " ", 
     RowBox[{
      InterpretationBox[
       StyleBox["Sin",
        ShowAutoStyles->False,
        AutoSpacing->False],
       Sin,
       Editable->False], "[", "\[Theta]", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["Cx",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`Cx,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox["r", "2"]}], ")"}], "3"]}]], ",", 
   FractionBox[
    RowBox[{"12", " ", "\[ImaginaryI]", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`a,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`q,
       Editable->False], "2"], " ", "r", " ", 
     InterpretationBox[
      StyleBox["\[Alpha]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`\[Alpha],
      Editable->False], " ", 
     RowBox[{
      InterpretationBox[
       StyleBox["Sin",
        ShowAutoStyles->False,
        AutoSpacing->False],
       Sin,
       Editable->False], "[", "\[Theta]", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["Cx",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`Cx,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox["r", "2"]}], ")"}], "3"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.868957330460538*^9, 3.868959209243413*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"e5e3232b-bc0d-4702-b634-b9a93bfea186"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ActionIntegrate", "[", 
   RowBox[{"integrand_", ",", 
    RowBox[{"{", 
     RowBox[{"rLower_", ",", "rUpper_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]Lower_", ",", "\[Tau]Upper_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"integrand", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rUpper"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rLower"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"tmp", ",", "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"8", 
          SuperscriptBox["\[Pi]", "2"], 
          RowBox[{"(", 
           RowBox[{"\[Tau]Upper", "-", "\[Tau]Lower"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tmp", "/.", 
              RowBox[{"\[Theta]", "\[Rule]", "\[Pi]"}]}], ")"}], "-", 
            RowBox[{"(", 
             RowBox[{"tmp", "/.", 
              RowBox[{"\[Theta]", "\[Rule]", "0"}]}], ")"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=."}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.86887593694602*^9, 3.868875940567156*^9}, {
  3.86887598630602*^9, 3.868876044744795*^9}, {3.868957353984886*^9, 
  3.8689573769615383`*^9}, {3.868957410185817*^9, 3.868957411071463*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"b9a1b99b-9c71-4530-b955-1e6bad1df8d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"integralsBH", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ActionIntegrate", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"rp", ",", "r0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Beta]"}], "}"}]}], "]"}], "&"}], "/@", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "integrands"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"integralsAdS", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ActionIntegrate", "[", 
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"q", "\[Rule]", "0"}], ",", 
         RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rlower", "/.", 
         RowBox[{"$olution", "[", 
          RowBox[{"$rule", ",", "rlower"}], "]"}]}], ",", "r0"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Tau]upper", "/.", 
         RowBox[{"$olution", "[", 
          RowBox[{"$rule", ",", "\[Tau]upper"}], "]"}]}]}], "}"}]}], "]"}], 
    "&"}], "/@", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "integrands"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.86887609796426*^9, 3.868876106070826*^9}, {
  3.8688761562805862`*^9, 3.8688761961362953`*^9}, {3.868876284793827*^9, 
  3.8688762914095087`*^9}, {3.868876337265373*^9, 3.868876375579825*^9}, {
  3.868877376627322*^9, 3.8688773769513607`*^9}, {3.868877417215465*^9, 
  3.868877448077327*^9}, {3.868957390569455*^9, 3.8689573911136513`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"c9bd574c-0cb1-43ac-a0c9-605564ec5e52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"20", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r0,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["\[Beta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Beta],
        Editable->False]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]]}], "-", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`rp,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"10", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "6"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}], "-", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["q",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`q,
          Editable->False], "2"], "+", 
        RowBox[{"25", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "2"]}], "+", 
        RowBox[{"20", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "4"]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "6"]}]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "2"]}], ")"}], "2"]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`rp,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"]}], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`rp,
          Editable->False], "2"]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"24", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`q,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`rp,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`Cx,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "2"]}], ")"}], "2"]}]]}], ",", 
   FractionBox[
    RowBox[{"48", " ", "\[ImaginaryI]", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`a,
       Editable->False], "2"], " ", 
     SuperscriptBox["\[Pi]", "2"], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`q,
       Editable->False], "2"], " ", 
     InterpretationBox[
      StyleBox["\[Alpha]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`\[Alpha],
      Editable->False], " ", 
     InterpretationBox[
      StyleBox["\[Beta]",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`\[Beta],
      Editable->False]}], 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["Cx",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`Cx,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`rp,
          Editable->False], "2"]}], ")"}], "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.868957402932953*^9, 3.8689574141716146`*^9}, 
   3.868959294658971*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"08a14485-6296-4169-a680-ab8d86bc47a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"10", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}], "-", 
         InterpretationBox[
          StyleBox["m",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`m,
          Editable->False]}], ")"}], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       InterpretationBox[
        StyleBox["\[Beta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Beta],
        Editable->False]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]]}], "-", 
    FractionBox[
     RowBox[{"20", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}], "-", 
        InterpretationBox[
         StyleBox["m",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`m,
         Editable->False]}], ")"}], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]]}], ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.868957402932953*^9, 3.8689574141716146`*^9}, 
   3.868959294906502*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"3cfaceab-d7e7-4024-9e85-97846073b662"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "coeff"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"integralsBH", "-", "integralsAdS"}], ")"}]}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "\[Alpha]T\[CapitalPhi]"}], "]"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"vIren", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Pi]", " ", "\[Beta]"}], 
    RowBox[{"4", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox["a", "2"], 
         SuperscriptBox["g", "2"]}]}], ")"}], "2"], " ", "G5"}]], 
   RowBox[{"(", 
    RowBox[{"m", "-", 
     RowBox[{
      SuperscriptBox["g", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rp", "2"], "+", 
         SuperscriptBox["a", "2"]}], ")"}], "2"]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "2"], 
       SuperscriptBox["rp", "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rp", "2"], "+", 
          SuperscriptBox["a", "2"]}], ")"}], "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "q"}]}]]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%%", "-", "%"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"action", ",", 
   RowBox[{"{", 
    RowBox[{"Iren", "\[Rule]", "vIren"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8689575410654583`*^9, 3.868957613513479*^9}, {
  3.8689593099084177`*^9, 3.868959318346239*^9}, {3.868959394528377*^9, 
  3.86895939504919*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a30d32b5-fcbb-4cf8-b53a-f50b508fdbd9"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}], "-", 
         InterpretationBox[
          StyleBox["m",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`m,
          Editable->False]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         InterpretationBox[
          StyleBox["q",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`q,
          Editable->False]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "6"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          InterpretationBox[
           StyleBox["m",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`m,
           Editable->False]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`q,
           Editable->False]}], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`q,
           Editable->False], "2"]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          InterpretationBox[
           StyleBox["m",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`m,
           Editable->False]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["a",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`a,
               Editable->False], "2"]}], "+", 
            InterpretationBox[
             StyleBox["q",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`q,
             Editable->False]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "4"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "6"]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "8"]}]}], ")"}], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`\[Beta],
     Editable->False]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}], ")"}], "2"], " ", 
    InterpretationBox[
     StyleBox["G5",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`G5,
     Editable->False], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "4"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`rp,
        Editable->False], "4"], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         InterpretationBox[
          StyleBox["q",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`q,
          Editable->False], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`rp,
            Editable->False], "2"]}]}], ")"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.86895753603433*^9, 3.868957640316614*^9}, 
   3.868959319195949*^9, 3.868959397882811*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"36d645b2-080d-4687-83fa-b70c4900b7e4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     InterpretationBox[
      StyleBox["m",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`m,
      Editable->False], "-", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "2"]}], ")"}], "2"]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["q",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`q,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "2"]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        InterpretationBox[
         StyleBox["q",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`q,
         Editable->False]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], "+", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`rp,
            Editable->False], "2"]}], ")"}], "2"]}]]}], ")"}], " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Euclidean`\[Beta],
    Editable->False]}], 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}], ")"}], "2"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Euclidean`G5,
    Editable->False]}]]], "Output",
 CellChangeTimes->{{3.86895753603433*^9, 3.868957640316614*^9}, 
   3.868959319195949*^9, 3.868959397888619*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"865e81d8-c4af-4849-8221-7163e8584936"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.86895753603433*^9, 3.868957640316614*^9}, 
   3.868959319195949*^9, 3.8689593978927393`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4e6e0f8f-5213-412c-91f6-dd8ccd009c0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print$olution", "[", "$rule", "]"}]], "Input",
 CellChangeTimes->{{3.868876643877383*^9, 3.868876647679784*^9}, {
  3.868876688861698*^9, 3.868876730033024*^9}, {3.868876769412469*^9, 
  3.8688767746285143`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"806793d0-4b08-41be-b41d-85ca1978099e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"mTrp", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`m -> 
             Rational[1, 2] 
              CCLP`Bulk`Hopf2`Euclidean`rp^(-2) (
               2 CCLP`Bulk`Hopf2`Euclidean`a^2 CCLP`Bulk`Hopf2`Euclidean`q + 
               CCLP`Bulk`Hopf2`Euclidean`q^2 + (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                  CCLP`Bulk`Hopf2`Euclidean`rp^2)^2 (1 + 
                 CCLP`Bulk`Hopf2`Euclidean`g^2 
                  CCLP`Bulk`Hopf2`Euclidean`rp^2))}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{145., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{145., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Alpha]T\[CapitalPhi]", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`\[Alpha] -> -3^Rational[1, 2] 
              CCLP`Bulk`Hopf2`Euclidean`Cx^(-1) CCLP`Bulk`Hopf2`Euclidean`q 
              CCLP`Bulk`Hopf2`Euclidean`rp^2/(
              CCLP`Bulk`Hopf2`Euclidean`a^2 
               CCLP`Bulk`Hopf2`Euclidean`q + (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                CCLP`Bulk`Hopf2`Euclidean`rp^2)^2)}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`\[Alpha], Editable -> False], 
                    "\[Rule]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"]}], ")"}]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{111., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{111., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Tau]upper", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`\[Tau]upper -> 
             CCLP`Bulk`Hopf2`Euclidean`\[Beta] - 
              CCLP`Bulk`Hopf2`Euclidean`g^(-2) CCLP`Bulk`Hopf2`Euclidean`m 
              CCLP`Bulk`Hopf2`Euclidean`r0^(-4) 
              CCLP`Bulk`Hopf2`Euclidean`\[Beta]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"\[Tau]upper", "\[Rule]", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False], "-", 
                    FractionBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "4"]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"rlower", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`rlower -> 
             Complex[0, 1] CCLP`Bulk`Hopf2`Euclidean`a}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"rlower", "\[Rule]", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{71., {15.430978260869566`, 19.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{71., {15.430978260869566`, 19.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"terms", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`Detgg[]^Rational[1, 2] 
             CCLP`Bulk`Hopf2`Euclidean`RicciScalarcd[], 
             CCLP`Bulk`Hopf2`Euclidean`g^2 
             CCLP`Bulk`Hopf2`Euclidean`Detgg[]^Rational[1, 2], 
             CCLP`Bulk`Hopf2`Euclidean`Detgg[]^Rational[1, 2] 
             CCLP`Bulk`Hopf2`Euclidean`FF[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], -
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]] 
             CCLP`Bulk`Hopf2`Euclidean`FF[
              CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]], 
             CCLP`Bulk`Hopf2`Euclidean`AA[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptA]] 
             CCLP`Bulk`Hopf2`Euclidean`etaUpcurved[
              CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptC], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]] 
             CCLP`Bulk`Hopf2`Euclidean`FF[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], -
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptC]] 
             CCLP`Bulk`Hopf2`Euclidean`FF[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], -
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]]}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    "R[\[Del]]", AutoSpacing -> False, ShowAutoStyles -> 
                    False], 
                    CCLP`Bulk`Hopf2`Euclidean`RicciScalarcd[], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`Detgg[], Editable -> False]]}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptA]", "\[ScriptB]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`FF[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], -
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]"}, {" ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`FF[
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"A", 
                    StyleBox[
                    
                    GridBox[{{" "}, {"\[ScriptA]"}}, RowSpacings -> 0, 
                    ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`AA[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    
                    GridBox[{{
                    "\!\(\[Eta]\&\*StyleBox[\"~\",FontColor->RGBColor[1, 0, \
0]]\)", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]", "\[ScriptC]", 
                    "\[ScriptD]", "\[ScriptE]"}, {" ", " ", " ", " ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`etaUpcurved[
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptC], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptB]", "\[ScriptC]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`FF[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], -
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptC]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptD]", "\[ScriptE]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`FF[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], -
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"coeff", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            Rational[-1, 16] CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/Pi, 
             Rational[-3, 4] CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/Pi, 
             Rational[1, 64] CCLP`Bulk`Hopf2`Euclidean`Cx^2 
             CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/Pi, Complex[0, 
               Rational[1, 192]] 3^Rational[-1, 2] 
             CCLP`Bulk`Hopf2`Euclidean`Cx^3 CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/
             Pi}, "AllowEmbedding" -> True, "InitialShape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"16", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["3", 
                    RowBox[{"4", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "2"], 
                    RowBox[{"64", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "3"]}], 
                    RowBox[{"192", " ", 
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"integrands", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            Rational[
              1, 8] (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
              CCLP`Bulk`Hopf2`Euclidean`r^2) ((-20) 
               CCLP`Bulk`Hopf2`Euclidean`g^2 + 
              2 CCLP`Bulk`Hopf2`Euclidean`q^2 (CCLP`Bulk`Hopf2`Euclidean`a - 
                CCLP`Bulk`Hopf2`Euclidean`r) (CCLP`Bulk`Hopf2`Euclidean`a + 
                CCLP`Bulk`Hopf2`Euclidean`r) (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf2`Euclidean`r^2)^(-4)) 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]], Rational[1, 8] 
             CCLP`Bulk`Hopf2`Euclidean`g^2 (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
              CCLP`Bulk`Hopf2`Euclidean`r^2) 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]], 3 
             CCLP`Bulk`Hopf2`Euclidean`Cx^(-2) (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`q^2 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 - 
              CCLP`Bulk`Hopf2`Euclidean`r^2) (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
               CCLP`Bulk`Hopf2`Euclidean`r^2)^(-3) 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]], Complex[0, 12] 
             CCLP`Bulk`Hopf2`Euclidean`a^2 
             CCLP`Bulk`Hopf2`Euclidean`Cx^(-2) (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`q^2 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
               CCLP`Bulk`Hopf2`Euclidean`r^2)^(-3) 
             CCLP`Bulk`Hopf2`Euclidean`\[Alpha] 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]]}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "20"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "-", "r"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "+", "r"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "4"]]}], ")"}], " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "-", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"12", " ", "\[ImaginaryI]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`\[Alpha], Editable -> False], 
                    " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{166., {69.43097826086957, 73.56902173913043}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{166., {69.43097826086957, 73.56902173913043}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"action", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`Iren -> 
             Rational[
               1, 4] (1 - CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
              CCLP`Bulk`Hopf2`Euclidean`G5^(-1) 
              Pi (CCLP`Bulk`Hopf2`Euclidean`m - 
               CCLP`Bulk`Hopf2`Euclidean`g^2 (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf2`Euclidean`rp^2)^2 - 
               CCLP`Bulk`Hopf2`Euclidean`q^2 CCLP`Bulk`Hopf2`Euclidean`rp^2/(
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`q + (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf2`Euclidean`rp^2)^2)) 
              CCLP`Bulk`Hopf2`Euclidean`\[Beta]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Iren", "\[Rule]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False], 
                    "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"]}], "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"]}]]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{183., {24.930978260869566`, 29.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{183., {24.930978260869566`, 29.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{3.868959405488297*^9},
 CellLabel->
  "Out[61]//TableForm=",ExpressionUUID->"c3c1a1f0-56b0-4b34-84db-\
04d3ded4c746"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaveSolution", "[", "\"\<thermo2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveExample", "[", 
  RowBox[{
  "\"\<CCLP_aqm_2\[PartialD]\>\"", ",", 
   "\"\<Action_BackgroundSubtraction\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8688710291008053`*^9, 3.868871058717861*^9}, {
   3.868871120517696*^9, 3.8688711809917727`*^9}, {3.8688713520262938`*^9, 
   3.868871363829871*^9}, {3.8688775853302193`*^9, 3.868877585500959*^9}, 
   3.868938876015192*^9, 3.868959438882505*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"53bf771f-235d-4f1a-8eef-9a8a9e129793"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saved \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"$olution\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" under the file name \"\>", "\[InvisibleSpace]", 
   
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/thermo2/2022-08-08_16-\
57-24.m\\\\\\\"\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Saved ", 
   Style["$olution", FontFamily -> "Source Code Pro Semibold"], 
   " under the file name ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/thermo2/2022-08-08_16-57-24.m\\\"\",\
 TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868959444578829*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"2b0c2266-4eba-4adb-a318-73d616afed63"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1202.086956521739, 595.4086956521738},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>0.75 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3aaa5053-8987-4ede-b358-2264231f2a10"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 34, "Input",ExpressionUUID->"7420fda8-9cd7-4bdf-9455-300c44a0809b",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[833, 30, 291, 6, 18, "Print",ExpressionUUID->"b6ff99ad-8aea-4fbf-ae10-a757d4a8cb92"],
Cell[1127, 38, 565, 14, 18, "Print",ExpressionUUID->"a867070b-ef2a-4f7c-a5ad-d0c87c049a8a"],
Cell[1695, 54, 312, 6, 18, "Print",ExpressionUUID->"74cab10c-bc8d-4280-a0bc-68db70265311"],
Cell[2010, 62, 271, 5, 18, "Print",ExpressionUUID->"ce647369-c9ee-4eec-aefe-f6dc2e98e064"],
Cell[2284, 69, 252, 5, 18, "Print",ExpressionUUID->"9901e15b-ad25-4af9-8c96-961642bf454a"],
Cell[2539, 76, 291, 6, 18, "Print",ExpressionUUID->"f9018ddf-f47e-4b3e-9e83-a8bb73bb2744"],
Cell[2833, 84, 567, 14, 18, "Print",ExpressionUUID->"1eb82a1d-7e23-466c-974a-f39e64c64e2d"],
Cell[3403, 100, 312, 6, 18, "Print",ExpressionUUID->"8fc07064-c4f6-4c12-bfc9-88cdfbfe1d20"],
Cell[3718, 108, 291, 6, 18, "Print",ExpressionUUID->"c5aff7a1-11d2-4923-9a1e-0b1beeed108f"],
Cell[4012, 116, 565, 14, 18, "Print",ExpressionUUID->"ff16bd5b-6ac8-4088-93e2-ee95f0e15313"],
Cell[4580, 132, 360, 7, 18, "Print",ExpressionUUID->"080b5047-ed1c-4470-8be5-fcb28199c65c"],
Cell[4943, 141, 535, 13, 18, "Print",ExpressionUUID->"1458a820-8227-4831-b2a0-29bacd2a4ed0"],
Cell[5481, 156, 617, 14, 18, "Print",ExpressionUUID->"8774204c-3a53-472b-b7fe-f95f9c33dab0"],
Cell[6101, 172, 718, 14, 18, "Print",ExpressionUUID->"789bca78-98db-42fd-b5d2-a579f48165ea"],
Cell[6822, 188, 676, 14, 18, "Print",ExpressionUUID->"e0057060-2204-4992-9efc-268f8187f191"],
Cell[7501, 204, 694, 14, 18, "Print",ExpressionUUID->"10869c32-21fe-4c47-8c87-80a89d849f61"],
Cell[8198, 220, 291, 6, 18, "Print",ExpressionUUID->"c4883f3e-a5de-4904-9a72-aa112771d764"],
Cell[8492, 228, 558, 13, 18, "Print",ExpressionUUID->"9aedf59c-0dff-4951-8c4b-2d7ed2763dcf"],
Cell[9053, 243, 340, 6, 18, "Print",ExpressionUUID->"08ce44b8-552c-4975-af1d-421023399f96"],
Cell[9396, 251, 659, 15, 18, "Print",ExpressionUUID->"313c29b9-88fe-4a80-ba91-e3b7a4a8dc2a"],
Cell[10058, 268, 651, 14, 18, "Print",ExpressionUUID->"9224e197-d9f3-4f33-9029-e4fcac2f2d62"],
Cell[10712, 284, 698, 14, 18, "Print",ExpressionUUID->"6ed66fb7-2ad2-48ed-9991-edab254b7503"],
Cell[11413, 300, 613, 14, 18, "Print",ExpressionUUID->"05cd3c27-258c-43c6-b236-c1198f70b122"],
Cell[12029, 316, 290, 6, 18, "Print",ExpressionUUID->"629d969b-036d-435b-be31-22ccce09a07c"],
Cell[12322, 324, 563, 14, 18, "Print",ExpressionUUID->"fa37c7b1-c0d1-4361-a661-7384cb3d1dd8"],
Cell[12888, 340, 330, 6, 18, "Print",ExpressionUUID->"92b85ba7-3a4f-4cb0-b696-4c813a710698"],
Cell[13221, 348, 291, 6, 18, "Print",ExpressionUUID->"cde14bab-cf0f-4517-afbc-8282f853f5d3"],
Cell[13515, 356, 583, 14, 18, "Print",ExpressionUUID->"636c0db6-ef94-4f62-bc4b-4ce9fd2c1183"],
Cell[14101, 372, 318, 6, 18, "Print",ExpressionUUID->"c515b126-d936-43be-a6e3-def807bb6725"],
Cell[14422, 380, 293, 6, 18, "Print",ExpressionUUID->"e649b9dc-d950-4ef9-8a2d-f144ed5b4ee4"],
Cell[14718, 388, 564, 13, 18, "Print",ExpressionUUID->"f7d7f45f-93ee-4e46-af80-521e22c9eed5"],
Cell[15285, 403, 304, 6, 18, "Print",ExpressionUUID->"1d523ddc-272d-4603-b400-f7b019eecfdf"],
Cell[15592, 411, 621, 15, 18, "Print",ExpressionUUID->"d60701d8-ef6a-48a3-8d10-de53bb662b1c"],
Cell[16216, 428, 700, 14, 18, "Print",ExpressionUUID->"5e69b4ed-fb46-4239-9055-a505522ee73f"],
Cell[16919, 444, 291, 6, 18, "Print",ExpressionUUID->"2c4abf57-bbbb-40f9-815d-bb6ef6c79e45"],
Cell[17213, 452, 562, 13, 18, "Print",ExpressionUUID->"538134da-e6ff-4bd8-bcd9-e053a6cb3d81"],
Cell[17778, 467, 361, 7, 18, "Print",ExpressionUUID->"2832c297-f2f5-4698-94ec-51f260d3e8e5"],
Cell[18142, 476, 291, 6, 18, "Print",ExpressionUUID->"971bd44d-e8df-45d7-aaea-cc969c5d5ee1"],
Cell[18436, 484, 562, 13, 18, "Print",ExpressionUUID->"756904a6-d2a2-47c6-898f-297fdc46777c"],
Cell[19001, 499, 328, 6, 18, "Print",ExpressionUUID->"b4a3a5b3-ae6d-4604-8c9d-6d17cc8d04aa"],
Cell[19332, 507, 338, 6, 18, "Print",ExpressionUUID->"800b089e-a074-46df-8142-58998c02b8d1"],
Cell[19673, 515, 613, 14, 18, "Print",ExpressionUUID->"704d5f07-28fd-4ae4-a6c2-ee97bddad16f"],
Cell[20289, 531, 293, 6, 18, "Print",ExpressionUUID->"2da3e5cc-8d97-4ef3-9371-97e6dee20659"],
Cell[20585, 539, 567, 14, 18, "Print",ExpressionUUID->"ade1b74b-38b3-45a8-9e32-9ea4573a804c"],
Cell[21155, 555, 338, 6, 18, "Print",ExpressionUUID->"6ebea10f-3565-4e16-8c00-bae4360a236c"],
Cell[21496, 563, 293, 6, 18, "Print",ExpressionUUID->"84cf5cff-c651-4f18-a101-a39351166daa"],
Cell[21792, 571, 585, 14, 18, "Print",ExpressionUUID->"15a99557-7eb4-42e5-a89c-29350c1d50c0"],
Cell[22380, 587, 300, 6, 18, "Print",ExpressionUUID->"3f670538-c3bd-4838-b87a-dcf9411e3e35"],
Cell[22683, 595, 291, 6, 18, "Print",ExpressionUUID->"a4b47733-d0a7-4cd2-8241-e8585449d662"],
Cell[22977, 603, 446, 8, 32, "Print",ExpressionUUID->"31330311-2129-4535-b5d0-a05087c30378"],
Cell[23426, 613, 291, 6, 18, "Print",ExpressionUUID->"3f8c8392-fad6-487f-b587-26c9c2d5b2b7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23766, 625, 187, 3, 51, "Section",ExpressionUUID->"38f56b74-a047-488a-839a-7d856e976f7f"],
Cell[CellGroupData[{
Cell[23978, 632, 350, 7, 22, "Input",ExpressionUUID->"bfd9402f-b9f0-485f-a1f4-2b69313d1aca"],
Cell[CellGroupData[{
Cell[24353, 643, 2720, 48, 18, "Print",ExpressionUUID->"7dffdff4-dee9-409c-9ba4-f8d2f25d7cf0"],
Cell[27076, 693, 877, 17, 18, "Print",ExpressionUUID->"2564d40f-934e-4f10-8d38-6bf328672c38"],
Cell[27956, 712, 1460, 30, 18, "Print",ExpressionUUID->"5a57aea8-ae4a-4965-84c6-3ea0a115df6b"],
Cell[29419, 744, 2125, 41, 18, "Print",ExpressionUUID->"157b1529-452b-421c-9d57-fc11f7e6af51"],
Cell[31547, 787, 1589, 33, 18, "Print",ExpressionUUID->"5897d36b-b806-4d1a-8b67-19ec4f163148"],
Cell[33139, 822, 2380, 46, 18, "Print",ExpressionUUID->"4c4acd0e-6b02-41ff-8e4e-fe3cfda6dfc3"],
Cell[35522, 870, 1107, 23, 18, "Print",ExpressionUUID->"05f39c78-bd31-442a-910a-d78bd4f7eec5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36678, 899, 1526, 40, 70, "Input",ExpressionUUID->"d632663b-9b28-4b56-ad26-db41a4aaf432"],
Cell[38207, 941, 1505, 28, 18, "Print",ExpressionUUID->"15bd4ca9-7581-48c6-be7d-1029363b4b39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39749, 974, 1170, 28, 70, "Input",ExpressionUUID->"7e1363a5-f988-415e-aed1-fa1ef7bc86ac"],
Cell[40922, 1004, 19681, 607, 104, "Output",ExpressionUUID->"425a958a-3c2e-4cf9-87d3-589ab489ce18"],
Cell[60606, 1613, 36131, 1147, 77, "Output",ExpressionUUID->"1a062db6-3881-4e6a-8432-7b10c587b347"],
Cell[96740, 2762, 219, 3, 25, "Output",ExpressionUUID->"642f0ba4-65f7-4cab-a116-2bc46344ba2e"],
Cell[96962, 2767, 1395, 38, 49, "Output",ExpressionUUID->"e4afe2a3-2b5f-40f0-a4a4-eb3df2e2c7b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98394, 2810, 1021, 25, 38, "Input",ExpressionUUID->"96d68b15-cfef-467f-b40d-372e33024c26"],
Cell[99418, 2837, 8640, 258, 44, "Output",ExpressionUUID->"d1ec5730-bfb9-4eb2-bef2-042402726432"],
Cell[108061, 3097, 8642, 258, 44, "Output",ExpressionUUID->"20503be2-91b4-4ce6-b116-e2899cbd7836"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116740, 3360, 1828, 49, 86, "Input",ExpressionUUID->"4496f76c-5bb8-4429-b61e-e438bd0029fa"],
Cell[118571, 3411, 5470, 187, 46, "Output",ExpressionUUID->"2ff41184-b38f-4624-8ebe-dfe1dc35cff1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124078, 3603, 1885, 52, 86, "Input",ExpressionUUID->"89aa5a74-3b69-49bc-817f-b3a25b0d836f"],
Cell[125966, 3657, 4566, 155, 46, "Output",ExpressionUUID->"2573899e-cea7-4ed2-9a3c-f31b3c0a490e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130569, 3817, 1347, 32, 70, "Input",ExpressionUUID->"c8b473d8-715b-4311-8a0d-82a07fda4577"],
Cell[131919, 3851, 6863, 214, 46, "Output",ExpressionUUID->"33f1cdef-8302-4c73-83e7-70e8c5051c69"],
Cell[138785, 4067, 1230, 40, 41, "Output",ExpressionUUID->"a9af98f5-0571-4a59-af97-3925080a2f24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140052, 4112, 732, 17, 38, "Input",ExpressionUUID->"b716ca71-4b6e-4064-9538-a05972b3eb70"],
Cell[140787, 4131, 469, 13, 25, "Output",ExpressionUUID->"5e95bc7b-592c-45ab-8461-015e6a801c50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141293, 4149, 1964, 61, 97, "Input",ExpressionUUID->"17314243-db4d-4aff-961f-dbde86f0897d"],
Cell[143260, 4212, 7747, 232, 33, "Output",ExpressionUUID->"e93c9229-424d-4a57-8b95-49dd9a007086"],
Cell[151010, 4446, 1638, 55, 43, "Output",ExpressionUUID->"4a6502df-bc18-472b-834a-02d5a6b91619"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152685, 4506, 804, 21, 54, "Input",ExpressionUUID->"9ec09090-ed65-4dd5-a4f3-39bcb498f382"],
Cell[153492, 4529, 9334, 270, 33, "Output",ExpressionUUID->"c0ac11b9-a632-4648-ac67-91e8525a4373"],
Cell[162829, 4801, 7970, 267, 55, "Output",ExpressionUUID->"e5e3232b-bc0d-4702-b634-b9a93bfea186"]
}, Open  ]],
Cell[170814, 5071, 2275, 56, 135, "Input",ExpressionUUID->"b9a1b99b-9c71-4530-b955-1e6bad1df8d1"],
Cell[CellGroupData[{
Cell[173114, 5131, 1600, 41, 38, "Input",ExpressionUUID->"c9bd574c-0cb1-43ac-a0c9-605564ec5e52"],
Cell[174717, 5174, 16169, 528, 46, "Output",ExpressionUUID->"08a14485-6296-4169-a680-ab8d86bc47a7"],
Cell[190889, 5704, 8982, 295, 46, "Output",ExpressionUUID->"3cfaceab-d7e7-4024-9e85-97846073b662"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199908, 6004, 1761, 53, 94, "Input",ExpressionUUID->"a30d32b5-fcbb-4cf8-b53a-f50b508fdbd9"],
Cell[201672, 6059, 8675, 278, 46, "Output",ExpressionUUID->"36d645b2-080d-4687-83fa-b70c4900b7e4"],
Cell[210350, 6339, 3529, 117, 55, "Output",ExpressionUUID->"865e81d8-c4af-4849-8221-7163e8584936"],
Cell[213882, 6458, 222, 3, 25, "Output",ExpressionUUID->"4e6e0f8f-5213-412c-91f6-dd8ccd009c0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214141, 6466, 315, 5, 22, "Input",ExpressionUUID->"806793d0-4b08-41be-b41d-85ca1978099e"],
Cell[214459, 6473, 213941, 3817, 628, "Output",ExpressionUUID->"c3c1a1f0-56b0-4b34-84db-04d3ded4c746"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428437, 10295, 586, 10, 38, "Input",ExpressionUUID->"53bf771f-235d-4f1a-8eef-9a8a9e129793"],
Cell[429026, 10307, 1041, 23, 18, "Print",ExpressionUUID->"2b0c2266-4eba-4adb-a318-73d616afed63"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

