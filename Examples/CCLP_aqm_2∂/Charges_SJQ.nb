(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    231437,       5037]
NotebookOptionsPosition[    221903,       4899]
NotebookOutlinePosition[    222412,       4917]
CellTagsIndexPosition[    222369,       4914]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "SolutionsX`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868952342067656*^9, 3.868952345825704*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7d58565e-e32b-4757-8f9b-044dd741c247"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350487701*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"314e5095-dd75-4cf8-9cb0-de1e9e1c803d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.3", ", ", {2015, 8, 23}],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350490696*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6bd85684-b405-4337-935e-b0b9b53a86f8"],

Cell[BoxData["\<\"CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350493091*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"433efab5-4937-434a-af68-aabed2becb17"],

Cell[BoxData["\<\"Connecting to external linux executable...\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350574518*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"0d71d702-a359-4cfe-b781-81b3720de4de"],

Cell[BoxData["\<\"Connection established.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350657672*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ba3b3fb3-0b74-4f14-9cfe-90e5087391b8"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350660198*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"682c18d3-65fd-438e-a77f-6336b41d3495"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTensor`  version ", "1.1.5", ", ", {2021, 2, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533506622763`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2a805b28-512c-40e5-98cb-0d2fbf8020be"],

Cell[BoxData["\<\"CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350664302*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"36d60bf5-5d9a-4ac5-8774-b4e3e395244f"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953350940011*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"0bd57fc8-3b68-4ac2-b806-45d6b47255f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPert`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.0.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xPert`  version ", "1.0.6", ", ", {2018, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533509423943`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"50e5cdd5-5297-4a19-8807-4d5199d319ba"],

Cell[BoxData["\<\"CopyRight (C) 2005-2020, David Brizuela, Jose M. \
Martin-Garcia and Guillermo A. Mena Marugan, under the General Public \
License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533509445744`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9a1a40e6-5dab-449f-ad57-066c9c363f31"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$PrePrint", 
   "\[InvisibleSpace]", "\<\" assigned value \"\>", "\[InvisibleSpace]", 
   "ScreenDollarIndices"}],
  SequenceForm[
  "** Variable ", $PrePrint, " assigned value ", 
   xAct`xTensor`ScreenDollarIndices],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533516080503`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1e0b3c77-9c13-40ab-baa8-e6d9287bef97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>", "\[InvisibleSpace]", "\<\" to \"\>",
    "\[InvisibleSpace]", "\<\"Postfix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Prefix", 
   " to ", "Postfix"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351612197*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"376f8f81-64c3-4d2d-bf2e-9c842eb8fb1c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "AllowUpperDerivatives", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "ContractMetric",
    "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`AllowUpperDerivatives, " of ", 
   xAct`xTensor`ContractMetric, " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533516163063`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"606278f5-f477-46a4-a59b-e426442c7bbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "MetricOn", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "None",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "All"}],
  SequenceForm[
  "** Option ", xAct`xTensor`MetricOn, " of ", xAct`xTensor`MakeRule, 
   " changed from ", None, " to ", All],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351620582*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"53618956-6a71-4363-acc7-7aa7a6ca2aa6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "ContractMetrics", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`ContractMetrics, " of ", xAct`xTensor`MakeRule, 
   " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351624762*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"aff6c3cc-7ee1-45e9-9c5c-77bc98348c10"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351661063*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"adf593ec-552c-4cb9-b297-fb97a37e516c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`Invar`  version \"\>", 
   "\[InvisibleSpace]", "\<\"2.0.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`Invar`  version ", "2.0.5", ", ", {2013, 7, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351665563*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"44fe168d-a401-406d-9e24-e0c8c5c8f46a"],

Cell[BoxData["\<\"CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes \
and R. Portugal, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351669345*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bff7d1aa-3e7a-40cc-8e29-69d06e5bcb59"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "sigma", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`sigma, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533517017097`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"7b1e5c63-47c7-404a-8347-88795372bbc0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "dim", "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`dim, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.86895335170485*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"7c46ec96-28ce-46d1-acda-52b04e48dc96"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "True",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", True, " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533517072783`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bec45c46-7a9c-4627-be4e-c03d776a51a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "True", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", True,
    " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351709548*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"70f51f4a-7755-4b10-8e69-453e03ae5d6f"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351764701*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a397e292-a7ac-4d72-9e99-49deffc911e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xCoba`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xCoba`  version ", "0.8.6", ", ", {2021, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.86895335176754*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3be1a472-f4d2-4e15-96be-6929aa746d4f"],

Cell[BoxData["\<\"CopyRight (C) 2005-2021, David Yllanes and Jose M. \
Martin-Garcia, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953351770172*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"92937a7b-363d-4825-9e74-0b1b0d156027"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533523516893`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"464b8c6c-4d09-433f-ae05-b41f36309510"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`SymManipulator`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.4\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "11", ",", "29"}], "}"}]}],
  SequenceForm[
  "Package xAct`SymManipulator`  version ", "0.9.4", ", ", {2016, 11, 29}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953352355977*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"90448a42-5a73-425a-a90c-623e41e35833"],

Cell[BoxData["\<\"CopyRight (C) 2011-2016, Thomas B\[ADoubleDot]ckdahl, under \
the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953352359971*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"14889503-7b04-40fe-82bc-c70322760488"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533524674063`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"eccd5bce-e4c9-4fdd-9a7a-0cd7b5604fdf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTras`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "10", ",", "30"}], "}"}]}],
  SequenceForm["Package xAct`xTras`  version ", "1.4.2", ", ", {2014, 10, 30}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.86895335247174*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"5565b14d-0599-4dbc-8e63-99d5555119a0"],

Cell[BoxData["\<\"CopyRight (C) 2012-2014, Teake Nutma, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953352476336*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1c8607dc-b8de-47ce-88a1-0232450401b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Postfix\"\>", 
   "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Postfix", 
   " to ", "Prefix"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953352480378*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4c7edfd7-b61a-4671-80ae-ef68556b5f9f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533524847107`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bce9903b-c32b-4e86-b33e-d8e6528bbf67"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353426442*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"90ab705f-ff86-4d1f-bd5f-dff0e66c15c5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`TexAct`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "19"}], "}"}]}],
  SequenceForm["Package xAct`TexAct`  version ", "0.4.2", ", ", {2021, 2, 19}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.86895335343027*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3f8bf75e-6ab6-4984-9bc2-5ca894b2d978"],

Cell[BoxData["\<\"CopyRight (C) 2008-2021, Thomas B\[ADoubleDot]ckdahl, Jose \
M. Martin-Garcia and Barry Wardell, under the General Public License.\"\>"], \
"Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533534339437`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4f53d4c9-671f-4986-ae85-04abccb1e6c2"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.86895335355552*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8eeeb16b-5e0e-480e-93ef-14c4ed0b79b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`FieldsX` version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "5", ",", "27"}], "}"}]}],
  SequenceForm["Package xAct`FieldsX` version ", "1.1.3", ", ", {2021, 5, 27}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353559683*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"97ef75e0-c023-4efa-84d0-6e2ec17b5ed4"],

Cell[BoxData["\<\"Copyright \[Copyright] 2019-2021 Markus B. Fr\[ODoubleDot]b \
under the GNU General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353563575*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"54b34b91-7ec1-4f43-a1c4-4c88830970cd"],

Cell[BoxData["\<\"FieldsX uses the Multisets package \[Copyright] 2011 David \
Bevan under the Wolfram Library Archive License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353567349*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c258396b-e36f-4988-90cd-b54da8d35d88"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "False", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", 
   False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.86895335360532*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"5194b7ff-948a-48d4-9683-b213d6dfe9c2"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353825693*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d84f4191-9148-48a8-ba6f-b2a284ab4a4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2019", ",", "5", ",", "17"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTerior`  version ", "0.9.1", ", ", {2019, 5, 17}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353828583*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f152b4ab-2151-49e1-a22a-48ea5d80dc19"],

Cell[BoxData["\<\"CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and \
Leo C. Stein, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533538311453`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"909fd87b-1d39-49a9-bba6-a6a7b0c9504c"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353869917*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1d1119c8-4c59-44d4-a2ea-9cad60ea0ba8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package SolutionsX`SolutionsX`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.0.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2022", ",", "3", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package SolutionsX`SolutionsX`  version ", "0.0.1", ", ", {2022, 3, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353872422*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"33214bb8-7779-4e08-ae4b-0a5c11243a81"],

Cell[BoxData["\<\"Copyright (C) 2022, Vasil Dimitrov, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533538744993`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"04d597e6-9a79-415e-9706-31675f3dd8b3"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.8689533538765297`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"de78f5db-0f89-4331-a407-3741164ab42c"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353878375*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fea1bf28-0abe-4f0a-8d40-ba3b3b278000"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.8689523554258423`*^9, {3.868952497429799*^9, 3.868952521661014*^9}, 
   3.8689525644078703`*^9, 3.868952605142004*^9, 3.868952702607407*^9, 
   3.868952751414611*^9, 3.868952827370158*^9, 3.868952863207137*^9, 
   3.868952909054907*^9, 3.868952967394581*^9, 3.868953038365139*^9, 
   3.868953353880498*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b7568431-1f48-4114-84a2-910d22b4b591"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Charges", "Section",
 CellChangeTimes->{{3.8689523638422327`*^9, 
  3.868952364937798*^9}},ExpressionUUID->"3a7c081a-7b73-480e-a3c5-\
0a5237cf53ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{
   "CCLP", ",", "Bulk", ",", "Hopf2", ",", "Lorentzian", ",", 
    "\"\<thermo2\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.868775782084647*^9, 3.868775797546591*^9}, {
  3.8689523824220457`*^9, 3.86895238312572*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"32cfb019-4af9-4f1e-acf1-43bfa75e180a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"5\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523843706093`*^9, {3.86895250195739*^9, 3.868952525015527*^9}, {
   3.868952567993207*^9, 3.868952615908993*^9}, 3.868952706081787*^9, 
   3.868952755053172*^9, 3.868952831116639*^9, 3.868952868410265*^9, 
   3.868952913328953*^9, 3.8689529711435137`*^9, 3.868953042564348*^9, 
   3.868953354433517*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"69bbe9fc-9f74-4dfa-9ece-daaba59e62e2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \\\"rp\\\", \\\",\\\", \\\"\
\[CapitalOmega]\\\", \\\",\\\", \\\"\[Beta]\\\", \\\",\\\", \\\"\[CapitalPhi]\
\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\", \",\", \"rp\", \
\",\", \"\[CapitalOmega]\", \",\", \"\[Beta]\", \",\", \"\[CapitalPhi]\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523843706093`*^9, {3.86895250195739*^9, 3.868952525015527*^9}, {
   3.868952567993207*^9, 3.868952615908993*^9}, 3.868952706081787*^9, 
   3.868952755053172*^9, 3.868952831116639*^9, 3.868952868410265*^9, 
   3.868952913328953*^9, 3.8689529711435137`*^9, 3.868953042564348*^9, 
   3.868953354458569*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"fbecec2c-d4a0-44c4-8b01-12043aa6f74c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523843706093`*^9, {3.86895250195739*^9, 3.868952525015527*^9}, {
   3.868952567993207*^9, 3.868952615908993*^9}, 3.868952706081787*^9, 
   3.868952755053172*^9, 3.868952831116639*^9, 3.868952868410265*^9, 
   3.868952913328953*^9, 3.8689529711435137`*^9, 3.868953042564348*^9, 
   3.868953354462674*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"c0dddd9e-9ee2-4392-b51c-a74ce724e5d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\", \\\",\\\", \\\"VV\\\"}], \\\"}\\\"}], TraditionalForm]\
\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"Null\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\", \",\", \
\"VV\"}], \"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\", \",\", \
\"1\"}], \"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}], \",\", \"Null\"}], \"}\"}], TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523843706093`*^9, {3.86895250195739*^9, 3.868952525015527*^9}, {
   3.868952567993207*^9, 3.868952615908993*^9}, 3.868952706081787*^9, 
   3.868952755053172*^9, 3.868952831116639*^9, 3.868952868410265*^9, 
   3.868952913328953*^9, 3.8689529711435137`*^9, 3.868953042564348*^9, 
   3.868953354465528*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"b3040786-6518-46a3-a212-df317fbb1666"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"1\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[RowBox[{\"-\", \"1\"}], TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523843706093`*^9, {3.86895250195739*^9, 3.868952525015527*^9}, {
   3.868952567993207*^9, 3.868952615908993*^9}, 3.868952706081787*^9, 
   3.868952755053172*^9, 3.868952831116639*^9, 3.868952868410265*^9, 
   3.868952913328953*^9, 3.8689529711435137`*^9, 3.868953042564348*^9, 
   3.8689533548578453`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"7eec7fd9-859e-41bb-814e-6d9f1fa174a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"t\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"r\\\
\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"\[Theta]\\\", \\\"(\\\", \
\\\")\\\"}], \\\",\\\", RowBox[{\\\"\[Phi]\\\", \\\"(\\\", \\\")\\\"}], \\\",\
\\\", RowBox[{\\\"\[Psi]\\\", \\\"(\\\", \\\")\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"t\", \"(\", \")\"}], \
\",\", RowBox[{\"r\", \"(\", \")\"}], \",\", RowBox[{\"\[Theta]\", \"(\", \")\
\"}], \",\", RowBox[{\"\[Phi]\", \"(\", \")\"}], \",\", RowBox[{\"\[Psi]\", \
\"(\", \")\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523843706093`*^9, {3.86895250195739*^9, 3.868952525015527*^9}, {
   3.868952567993207*^9, 3.868952615908993*^9}, 3.868952706081787*^9, 
   3.868952755053172*^9, 3.868952831116639*^9, 3.868952868410265*^9, 
   3.868952913328953*^9, 3.8689529711435137`*^9, 3.868953042564348*^9, 
   3.868953355026864*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"5e9795a3-3bcc-4687-8492-01835ddc75f1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf2/Lorentzian/thermo2\\\\\\\"\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf2/Lorentzian/thermo2\\\"\", TraditionalForm]\)",
     FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8689523843706093`*^9, {3.86895250195739*^9, 3.868952525015527*^9}, {
   3.868952567993207*^9, 3.868952615908993*^9}, 3.868952706081787*^9, 
   3.868952755053172*^9, 3.868952831116639*^9, 3.868952868410265*^9, 
   3.868952913328953*^9, 3.8689529711435137`*^9, 3.868953042564348*^9, 
   3.868953355149972*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"2fc07ece-0d9d-48ab-b131-a8aa6700a9fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LoadAppendConstant", "[", 
  RowBox[{"{", 
   RowBox[{"G5", ",", "S", ",", "J", ",", "Q"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendAssumption", "[", 
  RowBox[{"$constant", ",", 
   RowBox[{"{", 
    RowBox[{"0", "<", "G5", "<", "$infinity"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendTensor", "[", 
  RowBox[{
   RowBox[{"{", "k", "}"}], ",", 
   RowBox[{"{", "kk", "}"}], ",", 
   RowBox[{"{", "\"\<k\>\"", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "Null", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.866781011839417*^9, 3.866781086355343*^9}, {
  3.86678134959371*^9, 3.866781414647977*^9}, {3.868952395845501*^9, 
  3.868952441104579*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"525dc747-d587-4413-9586-3c0fe7866445"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"G5\\\", \
\\\",\\\", \\\"S\\\", \\\",\\\", \\\"J\\\", \\\",\\\", \\\"Q\\\"}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \\\"rp\\\", \\\",\\\", \\\"\
\[CapitalOmega]\\\", \\\",\\\", \\\"\[Beta]\\\", \\\",\\\", \\\"\[CapitalPhi]\
\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"G5\", \",\", \"S\", \",\", \
\"J\", \",\", \"Q\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\", \",\", \"rp\", \
\",\", \"\[CapitalOmega]\", \",\", \"\[Beta]\", \",\", \"\[CapitalPhi]\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868952455892823*^9, {3.8689525045440598`*^9, 3.868952526353465*^9}, 
   3.868952571186298*^9, 3.8689528824899387`*^9, 3.868953045577194*^9, 
   3.868953355282675*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"688a984a-e796-4feb-94bc-2a013c247882"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"kk\\\", \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"Null\\\", \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\", \\\",\\\", \\\"VV\\\"}], \\\"}\\\"}], TraditionalForm]\
\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", \"kk\", \"}\"}], TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", \"1\", \"}\"}], TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", \"Null\", \"}\"}], TraditionalForm]\)",
     FontColor -> RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\", \",\", \
\"VV\"}], \"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.868952455892823*^9, {3.8689525045440598`*^9, 3.868952526353465*^9}, 
   3.868952571186298*^9, 3.8689528824899387`*^9, 3.868953045577194*^9, 
   3.868953355310193*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"9b3c713d-93df-4b38-869f-8937c420a0ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$olution", "[", 
    RowBox[{"$metric", ",", "$curved", ",", "$ds2"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Diff", "[", 
       RowBox[{"t", "[", "]"}], "]"}], ":>", "0"}], ",", 
     RowBox[{
      RowBox[{"Diff", "[", 
       RowBox[{"r", "[", "]"}], "]"}], ":>", "0"}], ",", 
     RowBox[{
      RowBox[{"r", "[", "]"}], "\[Rule]", "rp"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"vsrh", "=", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"Det", "@", 
      RowBox[{"GenerateMetric", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "\[Phi]", ",", "\[Psi]"}], "}"}]}], 
       "]"}]}]], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "mTrp"}], "]"}]}], "//", "Simplify"}]}]}], "Input",\

 CellChangeTimes->{{3.866781099627462*^9, 3.866781213887258*^9}, 
   3.867284349640854*^9, 3.868798074863084*^9, {3.8688677185050697`*^9, 
   3.868867718659062*^9}, {3.868952473603057*^9, 3.868952515529594*^9}, 
   3.868952888440733*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"6716562b-7e00-49f0-a2bb-830be5197003"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`a,
       Editable->False], "4"], "+", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["rp",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`rp,
       Editable->False], "4"], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Lorentzian`a,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         StyleBox["q",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`q,
         Editable->False], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Lorentzian`rp,
           Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{
    InterpretationBox[
     StyleBox["Sin",
      ShowAutoStyles->False,
      AutoSpacing->False],
     Sin,
     Editable->False], "[", 
    InterpretationBox[
     StyleBox["\[Theta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`\[Theta][],
     Editable->False], "]"}]}], 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`g,
         Editable->False], "2"]}]}], ")"}], "2"], " ", 
   InterpretationBox[
    StyleBox["rp",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`rp,
    Editable->False]}]]], "Output",
 CellChangeTimes->{{3.8689524834206963`*^9, 3.86895252695746*^9}, 
   3.868952572733973*^9, {3.868952891829122*^9, 3.868952918501198*^9}, 
   3.86895305055196*^9, 3.868953355917459*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"40e0870d-12fb-4eba-82c2-6d8b3ac609fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"(", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", "G5"}]], 
    RowBox[{"Integrate", "[", 
     RowBox[{"vsrh", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "]"}], ",", "0", ",", "\[Pi]"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "]"}], ",", "0", ",", 
        RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Psi]", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "//", "Simplify"}], 
  ")"}], "\[IndentingNewLine]", 
 RowBox[{"vS", "=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rp", "2"], "+", 
         SuperscriptBox["a", "2"]}], ")"}], "2"], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", "q"}]}], ")"}]}], 
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["a", "2"], 
        SuperscriptBox["g", "2"]}]}], ")"}], "2"], " ", "rp", " ", 
    "G5"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "-", "%%"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"charges", ",", 
   RowBox[{"S", "\[Rule]", "vS"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.866781216439831*^9, 3.866781320995125*^9}, {
  3.8667814517585497`*^9, 3.866781467276919*^9}, {3.868798101051605*^9, 
  3.868798101158093*^9}, {3.8687981383108463`*^9, 3.868798142929636*^9}, {
  3.8688679092871447`*^9, 3.8688679100939703`*^9}, {3.8689525381656*^9, 
  3.868952542229883*^9}, {3.8689530709482803`*^9, 3.8689531461918993`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"3f3fbfc6-d156-4ed0-b5df-05df33fbd786"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`a,
       Editable->False], "4"], "+", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["rp",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`rp,
       Editable->False], "4"], "+", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Lorentzian`a,
        Editable->False], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         StyleBox["q",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`q,
         Editable->False], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Lorentzian`rp,
           Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`g,
         Editable->False], "2"]}]}], ")"}], "2"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`G5,
    Editable->False], " ", 
   InterpretationBox[
    StyleBox["rp",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`rp,
    Editable->False]}]]], "Output",
 CellChangeTimes->{
  3.8689530917151613`*^9, {3.868953127320797*^9, 3.8689531521944017`*^9}, 
   3.868953360235052*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"48f6c0a9-43d2-484d-99e4-895d00a65f95"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Lorentzian`a,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`q,
       Editable->False]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Lorentzian`a,
          Editable->False], "2"], "+", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["rp",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Lorentzian`rp,
          Editable->False], "2"]}], ")"}], "2"]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`g,
         Editable->False], "2"]}]}], ")"}], "2"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`G5,
    Editable->False], " ", 
   InterpretationBox[
    StyleBox["rp",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`rp,
    Editable->False]}]]], "Output",
 CellChangeTimes->{
  3.8689530917151613`*^9, {3.868953127320797*^9, 3.8689531521944017`*^9}, 
   3.86895336023759*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ac0f8cad-d770-425f-8c3f-878ce7c6e76b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8689530917151613`*^9, {3.868953127320797*^9, 3.8689531521944017`*^9}, 
   3.868953360239978*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"b0a32448-fa59-430e-8ad2-339f8fec9b9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Compute", "[", 
  RowBox[{"$tensor", ",", "k", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
      "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", "1", "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}]}], "}"}], ",", "FullSimplify", ",", 
   "Identity"}], "]"}]], "Input",
 CellChangeTimes->{{3.866781505299674*^9, 3.86678154781581*^9}, {
  3.8667864585597897`*^9, 3.866786460109417*^9}, {3.868798203304892*^9, 
  3.868798233214086*^9}, {3.868953175436348*^9, 3.868953175872808*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d46a74e6-9c06-41cb-925f-3877a6b9f686"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Computed \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"k", 
        StyleBox[GridBox[{
           {
            StyleBox["\[ScriptA]",
             FontColor->RGBColor[1., 0., 0.]]},
           {" "}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`kk[{
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], "\[InvisibleSpace]", "\<\" using \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"FullSimplify\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" in \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"0 minutes 0 seconds\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"]}],
  SequenceForm["Computed ", 
   CCLP`Bulk`Hopf2`Lorentzian`kk[{
    CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], 
     CCLP`Bulk`Hopf2`Lorentzian`curved}], " using ", 
   Style["FullSimplify", FontFamily -> "Source Code Pro Semibold"], " in ", 
   Style["0 minutes 0 seconds", FontFamily -> "Source Code Pro Semibold"]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86895318763113*^9, 3.868953360832075*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"ce7881c2-88bb-4cf1-a0f0-801468c28658"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Computed \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"k", 
        StyleBox[GridBox[{
           {" "},
           {
            StyleBox["\[ScriptA]",
             FontColor->RGBColor[1., 0., 0.]]}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`kk[{-CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], -
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], "\[InvisibleSpace]", "\<\" using \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"FullSimplify\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" in \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"0 minutes 1 second\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"]}],
  SequenceForm["Computed ", 
   CCLP`Bulk`Hopf2`Lorentzian`kk[{-CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], -
     CCLP`Bulk`Hopf2`Lorentzian`curved}], " using ", 
   Style["FullSimplify", FontFamily -> "Source Code Pro Semibold"], " in ", 
   Style["0 minutes 1 second", FontFamily -> "Source Code Pro Semibold"]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86895318763113*^9, 3.8689533615024633`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"2505b16b-c561-4e06-bf98-5ffb8da1614c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
   RowBox[{
    RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"epsilongg", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "curved"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "curved"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "curved"}]}], "}"}], ",", 
        RowBox[{"-", "\[ScriptA]"}], ",", 
        RowBox[{"-", "\[ScriptB]"}]}], "]"}], 
      RowBox[{"gg", "[", 
       RowBox[{"\[ScriptA]", ",", "\[ScriptX]"}], "]"}], 
      RowBox[{"gg", "[", 
       RowBox[{"\[ScriptB]", ",", "\[ScriptY]"}], "]"}], 
      RowBox[{
       RowBox[{"PD", "[", 
        RowBox[{"-", "\[ScriptX]"}], "]"}], "[", 
       RowBox[{
        RowBox[{"gg", "[", 
         RowBox[{
          RowBox[{"-", "\[ScriptY]"}], ",", 
          RowBox[{"-", "\[ScriptZ]"}]}], "]"}], 
        RowBox[{"kk", "[", "\[ScriptZ]", "]"}]}], "]"}]}], ")"}]}]}], "/.", 
  RowBox[{"epsilonToetaDown", "[", 
   RowBox[{"gg", ",", "curved"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToValues2", "@", 
    RowBox[{"Simplification", "@", 
     RowBox[{"TraceBasisDummy", "@", "%"}]}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", "]"}], ",", "\[Infinity]", ",", "0"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["1", 
   RowBox[{"16", "\[Pi]", " ", "G5"}]], 
  RowBox[{"Integrate", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "]"}], ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", "0", ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"vJ", "=", 
  FractionBox[
   RowBox[{"\[Pi]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "a", " ", "m"}], "+", 
      RowBox[{"a", " ", "q", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["a", "2"], 
          SuperscriptBox["g", "2"]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"4", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["a", "2"], 
        SuperscriptBox["g", "2"]}]}], ")"}], "3"], " ", 
    "G5"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "-", "%%"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"charges", ",", 
   RowBox[{"J", "\[Rule]", "vJ"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8602554565184813`*^9, 3.8602554743072777`*^9}, {
   3.8604205045234632`*^9, 3.86042050523542*^9}, 3.860692806934353*^9, {
   3.861961825957399*^9, 3.861961826866877*^9}, {3.864200040134817*^9, 
   3.864200043933902*^9}, {3.866784761841983*^9, 3.866784890219603*^9}, {
   3.8667862168552637`*^9, 3.866786363993394*^9}, {3.8687982547984877`*^9, 
   3.868798254925161*^9}, {3.868953211138769*^9, 3.868953308187587*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8d24f791-2e44-4cfb-9cb0-61168a1d2613"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Lorentzian`Detggcurved[],
      Editable->False]}]], " ", 
   InterpretationBox[
    StyleBox[GridBox[{
       {
        UnderscriptBox["\[Eta]", 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]], 
        StyleBox[GridBox[{
           {" ", " ", " ", " ", " "},
           {
            StyleBox["2",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["3",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["4",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["\[ScriptA]",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["\[ScriptC]",
             FontColor->RGBColor[1., 0., 0.]]}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`etaDowncurved[{
     2, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {
     3, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {
     4, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {-
      CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], -
      CCLP`Bulk`Hopf2`Lorentzian`curved}, {-
      CCLP`Bulk`Hopf2`Lorentzian`\[ScriptC], -
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], " ", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"g", 
        StyleBox[GridBox[{
           {
            StyleBox["\[ScriptA]",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["\[ScriptB]",
             FontColor->RGBColor[1., 0., 0.]]},
           {" ", " "}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`gg[{
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}, {
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptB], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], " ", 
   InterpretationBox[
    StyleBox[
     RowBox[{
      SubscriptBox["\[PartialD]", 
       StyleBox["\[ScriptB]",
        FontColor->RGBColor[1., 0., 0.]]], GridBox[{
        {"k", 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptC]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}]}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    xAct`xTensor`PD[{-CCLP`Bulk`Hopf2`Lorentzian`\[ScriptB], -
      CCLP`Bulk`Hopf2`Lorentzian`curved}][
     CCLP`Bulk`Hopf2`Lorentzian`kk[{
      CCLP`Bulk`Hopf2`Lorentzian`\[ScriptC], 
       CCLP`Bulk`Hopf2`Lorentzian`curved}]],
    Editable->False]}], "+", 
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Lorentzian`Detggcurved[],
      Editable->False]}]], " ", 
   InterpretationBox[
    StyleBox[GridBox[{
       {
        UnderscriptBox["\[Eta]", 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]], 
        StyleBox[GridBox[{
           {" ", " ", " ", " ", " "},
           {
            StyleBox["2",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["3",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["4",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["\[ScriptA]",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["\[ScriptB]",
             FontColor->RGBColor[1., 0., 0.]]}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`etaDowncurved[{
     2, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {
     3, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {
     4, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {-
      CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], -
      CCLP`Bulk`Hopf2`Lorentzian`curved}, {-
      CCLP`Bulk`Hopf2`Lorentzian`\[ScriptB], -
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], " ", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"g", 
        StyleBox[GridBox[{
           {
            StyleBox["\[ScriptA]",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["\[ScriptC]",
             FontColor->RGBColor[1., 0., 0.]]},
           {" ", " "}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`gg[{
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}, {
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptC], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], " ", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"g", 
        StyleBox[GridBox[{
           {
            StyleBox["\[ScriptB]",
             FontColor->RGBColor[1., 0., 0.]], 
            StyleBox["\[ScriptD]",
             FontColor->RGBColor[1., 0., 0.]]},
           {" ", " "}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`gg[{
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptB], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}, {
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptD], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], " ", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"k", 
        StyleBox[GridBox[{
           {
            StyleBox["\[ScriptE]",
             FontColor->RGBColor[1., 0., 0.]]},
           {" "}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "Rows" -> {{
               Offset[0.]}}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`kk[{
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptE], 
      CCLP`Bulk`Hopf2`Lorentzian`curved}],
    Editable->False], " ", 
   InterpretationBox[
    StyleBox[
     RowBox[{
      SubscriptBox["\[PartialD]", 
       StyleBox["\[ScriptC]",
        FontColor->RGBColor[1., 0., 0.]]], GridBox[{
        {"g", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptD]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptE]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}]}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    xAct`xTensor`PD[{-CCLP`Bulk`Hopf2`Lorentzian`\[ScriptC], -
      CCLP`Bulk`Hopf2`Lorentzian`curved}][
     CCLP`Bulk`Hopf2`Lorentzian`gg[{-CCLP`Bulk`Hopf2`Lorentzian`\[ScriptD], -
       CCLP`Bulk`Hopf2`Lorentzian`curved}, {-
       CCLP`Bulk`Hopf2`Lorentzian`\[ScriptE], -
       CCLP`Bulk`Hopf2`Lorentzian`curved}]],
    Editable->False]}]}]], "Output",
 CellChangeTimes->{3.868953238320822*^9, 3.868953276341404*^9, 
  3.868953308997212*^9, 3.868953363353397*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"151e60d9-2e32-4caa-879f-162b2228c1a2"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    InterpretationBox[
     StyleBox["a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`a,
     Editable->False], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       InterpretationBox[
        StyleBox["m",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Lorentzian`m,
        Editable->False]}], "+", 
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`q,
       Editable->False], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`g,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Lorentzian`q,
        Editable->False]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Lorentzian`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Lorentzian`g,
          Editable->False], "2"]}]}], ")"}], "3"], " ", 
    InterpretationBox[
     StyleBox["G5",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`G5,
     Editable->False]}]]}]], "Output",
 CellChangeTimes->{3.868953238320822*^9, 3.868953276341404*^9, 
  3.868953308997212*^9, 3.868953372588191*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"1c68c411-b5ea-475d-ac1a-2adcab4c76da"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`a,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["m",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`m,
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       StyleBox["a",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`a,
       Editable->False], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Lorentzian`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Lorentzian`g,
           Editable->False], "2"]}]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["q",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Lorentzian`q,
       Editable->False]}]}], ")"}]}], 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`g,
         Editable->False], "2"]}]}], ")"}], "3"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`G5,
    Editable->False]}]]], "Output",
 CellChangeTimes->{3.868953238320822*^9, 3.868953276341404*^9, 
  3.868953308997212*^9, 3.868953372591111*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"6fe075fe-aa1b-41ca-a405-4107e359ff23"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.868953238320822*^9, 3.868953276341404*^9, 
  3.868953308997212*^9, 3.8689533725932407`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"bd0f90da-c76d-45e1-a669-e00f5a268165"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$olution", "[", 
     RowBox[{"$form", ",", "F", ",", "$expression"}], "]"}], "\[Wedge]", 
    RowBox[{"$olution", "[", 
     RowBox[{"$form", ",", "A", ",", "$expression"}], "]"}]}], "//", 
   "Simplification"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Coefficient", "[", 
  RowBox[{"%", ",", 
   RowBox[{
    RowBox[{"Diff", "[", 
     RowBox[{"\[Theta]", "[", "]"}], "]"}], "\[Wedge]", 
    RowBox[{"Diff", "[", 
     RowBox[{"\[Phi]", "[", "]"}], "]"}], "\[Wedge]", 
    RowBox[{"Diff", "[", 
     RowBox[{"\[Psi]", "[", "]"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "]"}], ",", "\[Infinity]", ",", "0"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.866787554960588*^9, 3.866787585732554*^9}, {
  3.86678763720335*^9, 3.866787665888646*^9}, {3.868953368473942*^9, 
  3.8689534733063602`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"7691ce63-d793-4689-961d-062cdd842957"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["a",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`a,
     Editable->False], "2"], " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["q",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`q,
     Editable->False], "2"], " ", 
   RowBox[{
    InterpretationBox[
     StyleBox["Sin",
      ShowAutoStyles->False,
      AutoSpacing->False],
     Sin,
     Editable->False], "[", 
    InterpretationBox[
     StyleBox["\[Theta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`\[Theta][],
     Editable->False], "]"}]}], 
  RowBox[{"4", " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["Cx",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`Cx,
     Editable->False], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`g,
         Editable->False], "2"]}]}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Lorentzian`a,
        Editable->False], "2"], "+", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Lorentzian`r[],
        Editable->False], "2"]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.868953332568384*^9, {3.868953373614024*^9, 3.868953397333087*^9}, 
   3.868953428042425*^9, {3.868953458726511*^9, 3.868953474178924*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"e1fd3807-33e6-4f4e-bbb2-d0038e89a8ae"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", 
    FractionBox["1", 
     InterpretationBox[
      StyleBox["r",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Lorentzian`r[],
      Editable->False]], "]"}], "4"],
  SeriesData[
   CCLP`Bulk`Hopf2`Lorentzian`r[], 
   DirectedInfinity[1], {}, 4, 4, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.868953332568384*^9, {3.868953373614024*^9, 3.868953397333087*^9}, 
   3.868953428042425*^9, {3.868953458726511*^9, 3.868953474195212*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"2b7176ff-61ac-4539-9868-41f9e861c667"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
   RowBox[{
    RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "!"}]], 
      RowBox[{"epsilongg", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "curved"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", 
          RowBox[{"-", "curved"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "curved"}]}], "}"}], ",", 
        RowBox[{"-", "\[ScriptA]"}], ",", 
        RowBox[{"-", "\[ScriptB]"}]}], "]"}], 
      RowBox[{"FF", "[", 
       RowBox[{"\[ScriptA]", ",", "\[ScriptB]"}], "]"}]}], ")"}]}]}], "/.", 
  RowBox[{"epsilonToetaDown", "[", 
   RowBox[{"gg", ",", "curved"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToValues2", "@", 
    RowBox[{"TraceBasisDummy", "@", "%"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"Series", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", "]"}], ",", "\[Infinity]", ",", "0"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["\[Sigma]", 
   RowBox[{"16", "\[Pi]", " ", "G5"}]], 
  RowBox[{"Integrate", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "]"}], ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "]"}], ",", "0", ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "]"}], ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"vQ", "=", 
  FractionBox[
   RowBox[{"Cx", 
    SqrtBox["3"], "\[Pi]", " ", "q"}], 
   RowBox[{"4", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["a", "2"], 
        SuperscriptBox["g", "2"]}]}], ")"}], "2"], " ", 
    "G5"}]]}], "\[IndentingNewLine]", 
 RowBox[{"sol\[Sigma]", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"%", "-", "%%"}], "==", "0"}], ",", "\[Sigma]", ",", 
     RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}], "//", 
   "Flatten"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"charges", ",", 
   RowBox[{"Q", "\[Rule]", "vQ"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.866787712684421*^9, 3.8667877948195963`*^9}, {
  3.866787878268714*^9, 3.866787943756763*^9}, {3.866788077810212*^9, 
  3.866788080829727*^9}, {3.868799026173102*^9, 3.8687990265765676`*^9}, {
  3.868953491343803*^9, 3.868953566703237*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"5a6d5899-a04c-4a7c-abe8-bc775e32565d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   RowBox[{"-", 
    InterpretationBox[
     StyleBox[
      OverscriptBox["g", 
       OverscriptBox[
        StyleBox["~",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["~",
         FontColor->RGBColor[1, 0, 0]]]],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`Detggcurved[],
     Editable->False]}]], " ", 
  InterpretationBox[
   StyleBox[GridBox[{
      {
       UnderscriptBox["\[Eta]", 
        StyleBox["~",
         FontColor->RGBColor[1, 0, 0]]], 
       StyleBox[GridBox[{
          {" ", " ", " ", " ", " "},
          {
           StyleBox["2",
            FontColor->RGBColor[1., 0., 0.]], 
           StyleBox["3",
            FontColor->RGBColor[1., 0., 0.]], 
           StyleBox["4",
            FontColor->RGBColor[1., 0., 0.]], 
           StyleBox["\[ScriptA]",
            FontColor->RGBColor[1., 0., 0.]], 
           StyleBox["\[ScriptB]",
            FontColor->RGBColor[1., 0., 0.]]}
         },
         GridBoxSpacings->{"Columns" -> {
             Offset[0.], {
              Offset[0.034999999999999996`]}, 
             Offset[0.]}, "Rows" -> {{
              Offset[0.]}}}],
        FontSize->Rational[39, 4]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.034999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Bulk`Hopf2`Lorentzian`etaDowncurved[{
    2, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {
    3, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {
    4, -CCLP`Bulk`Hopf2`Lorentzian`curved}, {-
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], -
     CCLP`Bulk`Hopf2`Lorentzian`curved}, {-
     CCLP`Bulk`Hopf2`Lorentzian`\[ScriptB], -
     CCLP`Bulk`Hopf2`Lorentzian`curved}],
   Editable->False], " ", 
  InterpretationBox[
   StyleBox[GridBox[{
      {"F", 
       StyleBox[GridBox[{
          {
           StyleBox["\[ScriptA]",
            FontColor->RGBColor[1., 0., 0.]], 
           StyleBox["\[ScriptB]",
            FontColor->RGBColor[1., 0., 0.]]},
          {" ", " "}
         },
         GridBoxSpacings->{"Columns" -> {
             Offset[0.], {
              Offset[0.034999999999999996`]}, 
             Offset[0.]}, "Rows" -> {{
              Offset[0.]}}}],
        FontSize->Rational[39, 4]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.034999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Bulk`Hopf2`Lorentzian`FF[{
    CCLP`Bulk`Hopf2`Lorentzian`\[ScriptA], 
     CCLP`Bulk`Hopf2`Lorentzian`curved}, {
    CCLP`Bulk`Hopf2`Lorentzian`\[ScriptB], CCLP`Bulk`Hopf2`Lorentzian`curved}],
   Editable->False]}]], "Output",
 CellChangeTimes->{{3.868953536343725*^9, 3.8689535691555443`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"8f5fd759-664c-4cb2-ab05-88bf9780ea82"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SqrtBox["3"], " ", "\[Pi]", " ", 
    InterpretationBox[
     StyleBox["q",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`q,
     Editable->False], " ", "\[Sigma]"}], 
   RowBox[{"4", " ", 
    InterpretationBox[
     StyleBox["Cx",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`Cx,
     Editable->False], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Lorentzian`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Lorentzian`g,
          Editable->False], "2"]}]}], ")"}], "2"], " ", 
    InterpretationBox[
     StyleBox["G5",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Lorentzian`G5,
     Editable->False]}]]}]], "Output",
 CellChangeTimes->{{3.868953536343725*^9, 3.8689535723547077`*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"cf2d6dd2-b823-40ad-a4f2-6afb5b8c7cc3"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["3"], " ", 
   InterpretationBox[
    StyleBox["Cx",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`Cx,
    Editable->False], " ", "\[Pi]", " ", 
   InterpretationBox[
    StyleBox["q",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`q,
    Editable->False]}], 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Lorentzian`g,
         Editable->False], "2"]}]}], ")"}], "2"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Lorentzian`G5,
    Editable->False]}]]], "Output",
 CellChangeTimes->{{3.868953536343725*^9, 3.868953572357621*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"d9bdd2d1-64ec-4a7f-9f09-3dbea527a897"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Sigma]", "\[Rule]", 
   RowBox[{"-", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox["Cx",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Lorentzian`Cx,
      Editable->False], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.868953536343725*^9, 3.868953572360333*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"d0be8895-cb50-42e9-b138-a5ae59676509"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print$olution", "[", "$rule", "]"}]], "Input",
 CellChangeTimes->{{3.8689535771499357`*^9, 3.868953580304091*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"803f9228-06eb-49fa-8615-37ee3a55c928"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"potentials", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Lorentzian`\[CapitalOmega] -> 
             2 (CCLP`Bulk`Hopf2`Lorentzian`a^2 
                 CCLP`Bulk`Hopf2`Lorentzian`q + (
                  CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                  CCLP`Bulk`Hopf2`Lorentzian`rp^2)^2)^(-1) (
               CCLP`Bulk`Hopf2`Lorentzian`a CCLP`Bulk`Hopf2`Lorentzian`q + 
               CCLP`Bulk`Hopf2`Lorentzian`a (CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                 CCLP`Bulk`Hopf2`Lorentzian`rp^2) (1 + 
                 CCLP`Bulk`Hopf2`Lorentzian`g^2 
                  CCLP`Bulk`Hopf2`Lorentzian`rp^2)), 
             CCLP`Bulk`Hopf2`Lorentzian`\[Beta] -> 
             2 Pi CCLP`Bulk`Hopf2`Lorentzian`rp (
               CCLP`Bulk`Hopf2`Lorentzian`a^2 
                CCLP`Bulk`Hopf2`Lorentzian`q + (
                 CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                 CCLP`Bulk`Hopf2`Lorentzian`rp^2)^2)/(-(
                 CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                 CCLP`Bulk`Hopf2`Lorentzian`q)^2 + 
              CCLP`Bulk`Hopf2`Lorentzian`rp^4 (1 + 
                2 CCLP`Bulk`Hopf2`Lorentzian`g^2 (
                  CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                  CCLP`Bulk`Hopf2`Lorentzian`rp^2))), 
             CCLP`Bulk`Hopf2`Lorentzian`\[CapitalPhi] -> 
             3^Rational[1, 2] CCLP`Bulk`Hopf2`Lorentzian`Cx^(-1) 
              CCLP`Bulk`Hopf2`Lorentzian`q CCLP`Bulk`Hopf2`Lorentzian`rp^2/(
              CCLP`Bulk`Hopf2`Lorentzian`a^2 
               CCLP`Bulk`Hopf2`Lorentzian`q + (CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                CCLP`Bulk`Hopf2`Lorentzian`rp^2)^2)}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Path" -> {}, 
           "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalOmega]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Lorentzian`\[CapitalOmega], Editable -> 
                    False], "\[Rule]", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], "+", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}]}], ")"}]}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}], "2"]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`\[Beta], Editable -> 
                    False], "\[Rule]", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}], "2"]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], ")"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}]}]}], ")"}]}]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[CapitalPhi]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Lorentzian`\[CapitalPhi], Editable -> 
                    False], "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`Cx, Editable -> False],
                     " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}], "2"]}], ")"}]}]]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{147., {48.930978260869566`, 53.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{147., {48.930978260869566`, 53.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"mTrp", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Lorentzian`m -> 
             Rational[1, 2] 
              CCLP`Bulk`Hopf2`Lorentzian`rp^(-2) (
               2 CCLP`Bulk`Hopf2`Lorentzian`a^2 CCLP`Bulk`Hopf2`Lorentzian`q + 
               CCLP`Bulk`Hopf2`Lorentzian`q^2 + (
                  CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                  CCLP`Bulk`Hopf2`Lorentzian`rp^2)^2 (1 + 
                 CCLP`Bulk`Hopf2`Lorentzian`g^2 
                  CCLP`Bulk`Hopf2`Lorentzian`rp^2))}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`m, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}]}], ")"}]}]}], 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{145., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{145., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Alpha]T\[CapitalPhi]", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Lorentzian`\[Alpha] -> -3^Rational[1, 2] 
              CCLP`Bulk`Hopf2`Lorentzian`Cx^(-1) CCLP`Bulk`Hopf2`Lorentzian`q 
              CCLP`Bulk`Hopf2`Lorentzian`rp^2/(
              CCLP`Bulk`Hopf2`Lorentzian`a^2 
               CCLP`Bulk`Hopf2`Lorentzian`q + (CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                CCLP`Bulk`Hopf2`Lorentzian`rp^2)^2)}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Lorentzian`\[Alpha], Editable -> False], 
                    "\[Rule]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`Cx, Editable -> False],
                     " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}], "2"]}], ")"}]}]]}]}], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{111., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{111., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"charges", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Lorentzian`S -> 
             Rational[
               1, 2] (1 - CCLP`Bulk`Hopf2`Lorentzian`a^2 
                CCLP`Bulk`Hopf2`Lorentzian`g^2)^(-2) 
              CCLP`Bulk`Hopf2`Lorentzian`G5^(-1) Pi^2 
              CCLP`Bulk`Hopf2`Lorentzian`rp^(-1) (
               CCLP`Bulk`Hopf2`Lorentzian`a^2 
                CCLP`Bulk`Hopf2`Lorentzian`q + (
                 CCLP`Bulk`Hopf2`Lorentzian`a^2 + 
                 CCLP`Bulk`Hopf2`Lorentzian`rp^2)^2), 
             CCLP`Bulk`Hopf2`Lorentzian`J -> 
             Rational[
               1, 4] (1 - CCLP`Bulk`Hopf2`Lorentzian`a^2 
                CCLP`Bulk`Hopf2`Lorentzian`g^2)^(-3) 
              CCLP`Bulk`Hopf2`Lorentzian`G5^(-1) 
              Pi (2 CCLP`Bulk`Hopf2`Lorentzian`a CCLP`Bulk`Hopf2`Lorentzian`m + 
               CCLP`Bulk`Hopf2`Lorentzian`a (1 + 
                 CCLP`Bulk`Hopf2`Lorentzian`a^2 
                  CCLP`Bulk`Hopf2`Lorentzian`g^2) 
                CCLP`Bulk`Hopf2`Lorentzian`q), CCLP`Bulk`Hopf2`Lorentzian`Q -> 
             Rational[1, 4] 3^Rational[1, 2] 
              CCLP`Bulk`Hopf2`Lorentzian`Cx (1 - 
                CCLP`Bulk`Hopf2`Lorentzian`a^2 
                CCLP`Bulk`Hopf2`Lorentzian`g^2)^(-2) 
              CCLP`Bulk`Hopf2`Lorentzian`G5^(-1) Pi 
              CCLP`Bulk`Hopf2`Lorentzian`q}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Path" -> {}, 
           "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"S"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`S, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> False],
                     "2"]}], ")"}], "2"]}], ")"}]}], 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`G5, Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`rp, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"J"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`J, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`m, Editable -> 
                    False]}], "+", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`g, Editable -> False], 
                    "2"]}]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}]}], ")"}]}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`g, Editable -> False], 
                    "2"]}]}], ")"}], "3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`G5, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`Q, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`Cx, Editable -> False],
                     " ", "\[Pi]", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`q, Editable -> 
                    False]}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Lorentzian`G5, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{111., {48.430978260869566`, 52.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{111., {48.430978260869566`, 52.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{3.868953581016232*^9},
 CellLabel->
  "Out[56]//TableForm=",ExpressionUUID->"8bcb7cea-1ec1-486c-bc79-\
dcef5e7058f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaveSolution", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveExample", "[", 
  RowBox[{"\"\<CCLP_aqm_2\[PartialD]\>\"", ",", "\"\<Charges_SJQ\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.868953602034219*^9, 3.868953637461508*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"57315168-f80c-4498-9825-894b2de36974"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saved \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"$olution\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" under the file name \"\>", "\[InvisibleSpace]", 
   
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf2/Lorentzian/thermo2/2022-08-08_15-\
20-45.m\\\\\\\"\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Saved ", 
   Style["$olution", FontFamily -> "Source Code Pro Semibold"], 
   " under the file name ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf2/Lorentzian/thermo2/2022-08-08_15-20-45.m\\\"\"\
, TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689536451047907`*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"2c85dad5-fa23-46d0-adc7-eeb55a98fa52"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1202.086956521739, 658.6434782608695},
WindowMargins->{{-1202.086956521739, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.75 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cfdd8e0b-89b5-40f2-bd0c-a25dff0ebc15"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 226, 4, 34, "Input",ExpressionUUID->"7d58565e-e32b-4757-8f9b-044dd741c247",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[831, 30, 531, 10, 18, "Print",ExpressionUUID->"314e5095-dd75-4cf8-9cb0-de1e9e1c803d"],
Cell[1365, 42, 803, 18, 18, "Print",ExpressionUUID->"6bd85684-b405-4337-935e-b0b9b53a86f8"],
Cell[2171, 62, 552, 10, 18, "Print",ExpressionUUID->"433efab5-4937-434a-af68-aabed2becb17"],
Cell[2726, 74, 511, 9, 18, "Print",ExpressionUUID->"0d71d702-a359-4cfe-b781-81b3720de4de"],
Cell[3240, 85, 492, 9, 18, "Print",ExpressionUUID->"ba3b3fb3-0b74-4f14-9cfe-90e5087391b8"],
Cell[3735, 96, 531, 10, 18, "Print",ExpressionUUID->"682c18d3-65fd-438e-a77f-6336b41d3495"],
Cell[4269, 108, 809, 18, 18, "Print",ExpressionUUID->"2a805b28-512c-40e5-98cb-0d2fbf8020be"],
Cell[5081, 128, 552, 10, 18, "Print",ExpressionUUID->"36d60bf5-5d9a-4ac5-8774-b4e3e395244f"],
Cell[5636, 140, 531, 10, 18, "Print",ExpressionUUID->"0bd57fc8-3b68-4ac2-b806-45d6b47255f8"],
Cell[6170, 152, 805, 18, 18, "Print",ExpressionUUID->"50e5cdd5-5297-4a19-8807-4d5199d319ba"],
Cell[6978, 172, 602, 11, 18, "Print",ExpressionUUID->"9a1a40e6-5dab-449f-ad57-066c9c363f31"],
Cell[7583, 185, 775, 17, 18, "Print",ExpressionUUID->"1e0b3c77-9c13-40ab-baa8-e6d9287bef97"],
Cell[8361, 204, 857, 18, 18, "Print",ExpressionUUID->"376f8f81-64c3-4d2d-bf2e-9c842eb8fb1c"],
Cell[9221, 224, 960, 18, 18, "Print",ExpressionUUID->"606278f5-f477-46a4-a59b-e426442c7bbe"],
Cell[10184, 244, 916, 18, 18, "Print",ExpressionUUID->"53618956-6a71-4363-acc7-7aa7a6ca2aa6"],
Cell[11103, 264, 934, 18, 18, "Print",ExpressionUUID->"aff6c3cc-7ee1-45e9-9c5c-77bc98348c10"],
Cell[12040, 284, 531, 10, 18, "Print",ExpressionUUID->"adf593ec-552c-4cb9-b297-fb97a37e516c"],
Cell[12574, 296, 798, 17, 18, "Print",ExpressionUUID->"44fe168d-a401-406d-9e24-e0c8c5c8f46a"],
Cell[13375, 315, 578, 10, 18, "Print",ExpressionUUID->"bff7d1aa-3e7a-40cc-8e29-69d06e5bcb59"],
Cell[13956, 327, 901, 19, 18, "Print",ExpressionUUID->"7b1e5c63-47c7-404a-8347-88795372bbc0"],
Cell[14860, 348, 890, 18, 18, "Print",ExpressionUUID->"7c46ec96-28ce-46d1-acda-52b04e48dc96"],
Cell[15753, 368, 940, 18, 18, "Print",ExpressionUUID->"bec45c46-7a9c-4627-be4e-c03d776a51a0"],
Cell[16696, 388, 851, 18, 18, "Print",ExpressionUUID->"70f51f4a-7755-4b10-8e69-453e03ae5d6f"],
Cell[17550, 408, 531, 10, 18, "Print",ExpressionUUID->"a397e292-a7ac-4d72-9e99-49deffc911e0"],
Cell[18084, 420, 802, 18, 18, "Print",ExpressionUUID->"3be1a472-f4d2-4e15-96be-6929aa746d4f"],
Cell[18889, 440, 570, 10, 18, "Print",ExpressionUUID->"92937a7b-363d-4825-9e74-0b1b0d156027"],
Cell[19462, 452, 533, 10, 18, "Print",ExpressionUUID->"464b8c6c-4d09-433f-ae05-b41f36309510"],
Cell[19998, 464, 823, 18, 18, "Print",ExpressionUUID->"90448a42-5a73-425a-a90c-623e41e35833"],
Cell[20824, 484, 558, 10, 18, "Print",ExpressionUUID->"14889503-7b04-40fe-82bc-c70322760488"],
Cell[21385, 496, 533, 10, 18, "Print",ExpressionUUID->"eccd5bce-e4c9-4fdd-9a7a-0cd7b5604fdf"],
Cell[21921, 508, 801, 17, 18, "Print",ExpressionUUID->"5565b14d-0599-4dbc-8e63-99d5555119a0"],
Cell[22725, 527, 542, 10, 18, "Print",ExpressionUUID->"1c8607dc-b8de-47ce-88a1-0232450401b9"],
Cell[23270, 539, 861, 19, 18, "Print",ExpressionUUID->"4c7edfd7-b61a-4671-80ae-ef68556b5f9f"],
Cell[24134, 560, 940, 18, 18, "Print",ExpressionUUID->"bce9903b-c32b-4e86-b33e-d8e6528bbf67"],
Cell[25077, 580, 531, 10, 18, "Print",ExpressionUUID->"90ab705f-ff86-4d1f-bd5f-dff0e66c15c5"],
Cell[25611, 592, 801, 17, 18, "Print",ExpressionUUID->"3f8bf75e-6ab6-4984-9bc2-5ca894b2d978"],
Cell[26415, 611, 603, 11, 18, "Print",ExpressionUUID->"4f53d4c9-671f-4986-ae85-04abccb1e6c2"],
Cell[27021, 624, 530, 10, 18, "Print",ExpressionUUID->"8eeeb16b-5e0e-480e-93ef-14c4ed0b79b7"],
Cell[27554, 636, 802, 17, 18, "Print",ExpressionUUID->"97ef75e0-c023-4efa-84d0-6e2ec17b5ed4"],
Cell[28359, 655, 568, 10, 18, "Print",ExpressionUUID->"54b34b91-7ec1-4f43-a1c4-4c88830970cd"],
Cell[28930, 667, 578, 10, 18, "Print",ExpressionUUID->"c258396b-e36f-4988-90cd-b54da8d35d88"],
Cell[29511, 679, 850, 18, 18, "Print",ExpressionUUID->"5194b7ff-948a-48d4-9683-b213d6dfe9c2"],
Cell[30364, 699, 531, 10, 18, "Print",ExpressionUUID->"d84f4191-9148-48a8-ba6f-b2a284ab4a4c"],
Cell[30898, 711, 807, 18, 18, "Print",ExpressionUUID->"f152b4ab-2151-49e1-a22a-48ea5d80dc19"],
Cell[31708, 731, 578, 10, 18, "Print",ExpressionUUID->"909fd87b-1d39-49a9-bba6-a6a7b0c9504c"],
Cell[32289, 743, 531, 10, 18, "Print",ExpressionUUID->"1d1119c8-4c59-44d4-a2ea-9cad60ea0ba8"],
Cell[32823, 755, 825, 18, 18, "Print",ExpressionUUID->"33214bb8-7779-4e08-ae4b-0a5c11243a81"],
Cell[33651, 775, 542, 10, 18, "Print",ExpressionUUID->"04d597e6-9a79-415e-9706-31675f3dd8b3"],
Cell[34196, 787, 533, 10, 18, "Print",ExpressionUUID->"de78f5db-0f89-4331-a407-3741164ab42c"],
Cell[34732, 799, 686, 12, 32, "Print",ExpressionUUID->"fea1bf28-0abe-4f0a-8d40-ba3b3b278000"],
Cell[35421, 813, 531, 10, 18, "Print",ExpressionUUID->"b7568431-1f48-4114-84a2-910d22b4b591"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36001, 829, 154, 3, 51, "Section",ExpressionUUID->"3a7c081a-7b73-480e-a3c5-0a5237cf53ae"],
Cell[CellGroupData[{
Cell[36180, 836, 378, 8, 22, "Input",ExpressionUUID->"32cfb019-4af9-4f1e-acf1-43bfa75e180a"],
Cell[CellGroupData[{
Cell[36583, 848, 2963, 52, 18, "Print",ExpressionUUID->"69bbe9fc-9f74-4dfa-9ece-daaba59e62e2"],
Cell[39549, 902, 1336, 24, 18, "Print",ExpressionUUID->"fbecec2c-d4a0-44c4-8b01-12043aa6f74c"],
Cell[40888, 928, 1701, 34, 18, "Print",ExpressionUUID->"c0dddd9e-9ee2-4392-b51c-a74ce724e5d2"],
Cell[42592, 964, 2486, 46, 18, "Print",ExpressionUUID->"b3040786-6518-46a3-a212-df317fbb1666"],
Cell[45081, 1012, 1872, 38, 18, "Print",ExpressionUUID->"7eec7fd9-859e-41bb-814e-6d9f1fa174a0"],
Cell[46956, 1052, 2613, 50, 18, "Print",ExpressionUUID->"5e9795a3-3bcc-4687-8492-01835ddc75f1"],
Cell[49572, 1104, 1352, 27, 18, "Print",ExpressionUUID->"2fc07ece-0d9d-48ab-b131-a8aa6700a9fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50973, 1137, 850, 21, 54, "Input",ExpressionUUID->"525dc747-d587-4413-9586-3c0fe7866445"],
Cell[CellGroupData[{
Cell[51848, 1162, 1805, 33, 18, "Print",ExpressionUUID->"688a984a-e796-4feb-94bc-2a013c247882"],
Cell[53656, 1197, 2392, 47, 18, "Print",ExpressionUUID->"9b3c713d-93df-4b38-869f-8937c420a0ec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56097, 1250, 1164, 33, 39, "Input",ExpressionUUID->"6716562b-7e00-49f0-a2bb-830be5197003"],
Cell[57264, 1285, 2525, 85, 46, "Output",ExpressionUUID->"40e0870d-12fb-4eba-82c2-6d8b3ac609fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59826, 1375, 1809, 51, 108, "Input",ExpressionUUID->"3f3fbfc6-d156-4ed0-b5df-05df33fbd786"],
Cell[61638, 1428, 2321, 79, 46, "Output",ExpressionUUID->"48f6c0a9-43d2-484d-99e4-895d00a65f95"],
Cell[63962, 1509, 2095, 71, 47, "Output",ExpressionUUID->"ac0f8cad-d770-425f-8c3f-878ce7c6e76b"],
Cell[66060, 1582, 228, 4, 25, "Output",ExpressionUUID->"b0a32448-fa59-430e-8ad2-339f8fec9b9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66325, 1591, 740, 18, 22, "Input",ExpressionUUID->"d46a74e6-9c06-41cb-925f-3877a6b9f686"],
Cell[CellGroupData[{
Cell[67090, 1613, 1925, 51, 22, "Print",ExpressionUUID->"ce7881c2-88bb-4cf1-a0f0-801468c28658"],
Cell[69018, 1666, 1918, 49, 22, "Print",ExpressionUUID->"2505b16b-c561-4e06-bf98-5ffb8da1614c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70985, 1721, 3374, 95, 156, "Input",ExpressionUUID->"8d24f791-2e44-4cfb-9cb0-61168a1d2613"],
Cell[74362, 1818, 11440, 333, 32, "Output",ExpressionUUID->"151e60d9-2e32-4caa-879f-162b2228c1a2"],
Cell[85805, 2153, 2227, 74, 46, "Output",ExpressionUUID->"1c68c411-b5ea-475d-ac1a-2adcab4c76da"],
Cell[88035, 2229, 2258, 75, 46, "Output",ExpressionUUID->"6fe075fe-aa1b-41ca-a405-4107e359ff23"],
Cell[90296, 2306, 220, 3, 25, "Output",ExpressionUUID->"bd0f90da-c76d-45e1-a669-e00f5a268165"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90553, 2314, 1047, 27, 54, "Input",ExpressionUUID->"7691ce63-d793-4689-961d-062cdd842957"],
Cell[91603, 2343, 2244, 77, 45, "Output",ExpressionUUID->"e1fd3807-33e6-4f4e-bbb2-d0038e89a8ae"],
Cell[93850, 2422, 634, 18, 38, "Output",ExpressionUUID->"2b7176ff-61ac-4539-9868-41f9e861c667"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94521, 2445, 2839, 83, 167, "Input",ExpressionUUID->"5a6d5899-a04c-4a7c-abe8-bc775e32565d"],
Cell[97363, 2530, 3306, 97, 38, "Output",ExpressionUUID->"8f5fd759-664c-4cb2-ab05-88bf9780ea82"],
Cell[100672, 2629, 1340, 44, 46, "Output",ExpressionUUID->"cf2d6dd2-b823-40ad-a4f2-6afb5b8c7cc3"],
Cell[102015, 2675, 1241, 42, 46, "Output",ExpressionUUID->"d9bdd2d1-64ec-4a7f-9f09-3dbea527a897"],
Cell[103259, 2719, 436, 12, 27, "Output",ExpressionUUID->"d0be8895-cb50-42e9-b138-a5ae59676509"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103732, 2736, 217, 3, 22, "Input",ExpressionUUID->"803f9228-06eb-49fa-8615-37ee3a55c928"],
Cell[103952, 2741, 116494, 2118, 323, "Output",ExpressionUUID->"8bcb7cea-1ec1-486c-bc79-dcef5e7058f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220483, 4864, 344, 6, 38, "Input",ExpressionUUID->"57315168-f80c-4498-9825-894b2de36974"],
Cell[220830, 4872, 1045, 23, 18, "Print",ExpressionUUID->"2c85dad5-fa23-46d0-adc7-eeb55a98fa52"]
}, Open  ]]
}, Open  ]]
}
]
*)

