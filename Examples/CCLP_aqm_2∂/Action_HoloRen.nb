(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    465363,       9814]
NotebookOptionsPosition[    454242,       9648]
NotebookOutlinePosition[    454692,       9665]
CellTagsIndexPosition[    454649,       9662]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "SolutionsX`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868960465819415*^9, 3.868960472149914*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"819ffcf6-258e-4a18-92f5-2ea6d8ee34b1"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.86896098361419*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"7fbb9249-c919-4889-a5f9-47d38b267b45"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.3", ", ", {2015, 8, 23}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960983616522*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"df1cfcb1-5645-4381-aef0-13352375fe97"],

Cell[BoxData["\<\"CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.86896098361941*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"32a34c26-aa1a-4597-8f64-3a44a85fc98a"],

Cell[BoxData["\<\"Connecting to external linux executable...\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960983715028*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c8a5e57e-222b-49ec-af21-696155b99f9c"],

Cell[BoxData["\<\"Connection established.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960983791823*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c3725e45-b874-43a9-8961-f8382c73abdb"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.86896098379331*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"250fce95-73ef-471a-871d-1d12b602a786"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTensor`  version ", "1.1.5", ", ", {2021, 2, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960983794484*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ba43cf48-264b-42a9-9917-046082314a21"],

Cell[BoxData["\<\"CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960983795652*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"81b651f5-f36a-4b7e-a7f1-4a2efb8cfcfc"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984019717*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"39b7e309-d415-4c35-ae26-e0a925c95258"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPert`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.0.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xPert`  version ", "1.0.6", ", ", {2018, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984021719*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3f1f2e6d-2afe-4c7c-a628-1d21a34b7b6b"],

Cell[BoxData["\<\"CopyRight (C) 2005-2020, David Brizuela, Jose M. \
Martin-Garcia and Guillermo A. Mena Marugan, under the General Public \
License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984023356*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d9f97885-4de3-4e61-baf3-78061f12bcf1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$PrePrint", 
   "\[InvisibleSpace]", "\<\" assigned value \"\>", "\[InvisibleSpace]", 
   "ScreenDollarIndices"}],
  SequenceForm[
  "** Variable ", $PrePrint, " assigned value ", 
   xAct`xTensor`ScreenDollarIndices],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609840451527`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4a0bc4b4-95fc-4fd2-bc10-4bb95399d2a8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>", "\[InvisibleSpace]", "\<\" to \"\>",
    "\[InvisibleSpace]", "\<\"Postfix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Prefix", 
   " to ", "Postfix"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609840465593`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ff27d3e2-181f-434a-90d4-85b61b99e64c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "AllowUpperDerivatives", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "ContractMetric",
    "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`AllowUpperDerivatives, " of ", 
   xAct`xTensor`ContractMetric, " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984047873*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f221a208-7414-4f54-9a5f-f4c121523d99"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "MetricOn", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "None",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "All"}],
  SequenceForm[
  "** Option ", xAct`xTensor`MetricOn, " of ", xAct`xTensor`MakeRule, 
   " changed from ", None, " to ", All],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984049142*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e640a9c2-5024-45d9-a855-7b8e1b83e032"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "ContractMetrics", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "MakeRule", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`ContractMetrics, " of ", xAct`xTensor`MakeRule, 
   " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609840504293`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c8c8b551-d8d3-4d77-937a-ae3ef9a33294"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609840707808`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"508d3100-455a-4208-a149-99377fc653aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`Invar`  version \"\>", 
   "\[InvisibleSpace]", "\<\"2.0.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`Invar`  version ", "2.0.5", ", ", {2013, 7, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609840724487`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"48188bc7-53e4-45ba-843f-b39a708ea9b0"],

Cell[BoxData["\<\"CopyRight (C) 2006-2020, J. M. Martin-Garcia, D. Yllanes \
and R. Portugal, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609840738277`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f195a933-7587-40d6-92e4-0d9e3eb848be"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "sigma", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`sigma, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984094563*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"887b0c48-eb5e-4c91-8771-ea0739394899"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefConstantSymbol", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"constant symbol \"\>", "\[InvisibleSpace]", 
   "dim", "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefConstantSymbol, ": Defining ", "constant symbol ", 
   xAct`Invar`dim, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984096105*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ba850d7b-b636-470c-a4a6-059df59d3d50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", "True",
    "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", True, " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984097365*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"28748f30-8a78-4e18-ab20-d8e2028e6970"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "True", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "False"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", True,
    " to ", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984098639*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"da6862e0-62b2-4c2e-a61f-15b5f0f30ecf"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984126666*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"317b20c2-4080-4f28-82bc-106d426cb1d6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xCoba`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.6\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xCoba`  version ", "0.8.6", ", ", {2021, 2, 28}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609841286592`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e5a78ae6-02c9-425d-a78b-19d7495789c2"],

Cell[BoxData["\<\"CopyRight (C) 2005-2021, David Yllanes and Jose M. \
Martin-Garcia, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984130378*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"784f6521-b88d-4cc3-b9da-e4224637641d"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984812158*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"5c7231b4-1967-427f-9a0d-87c9637a0ff7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`SymManipulator`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.4\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "11", ",", "29"}], "}"}]}],
  SequenceForm[
  "Package xAct`SymManipulator`  version ", "0.9.4", ", ", {2016, 11, 29}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984813908*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"81e4423e-61f7-4233-81e3-f4c1b355b49b"],

Cell[BoxData["\<\"CopyRight (C) 2011-2016, Thomas B\[ADoubleDot]ckdahl, under \
the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984815536*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"66fb86de-2fd5-4ce7-bbc6-91294925f07c"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609849008636`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f5bc8838-5201-4661-aa79-8fec863e05f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTras`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "10", ",", "30"}], "}"}]}],
  SequenceForm["Package xAct`xTras`  version ", "1.4.2", ", ", {2014, 10, 30}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984902524*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6fe98462-0659-45f5-972d-bfc63e7f825c"],

Cell[BoxData["\<\"CopyRight (C) 2012-2014, Teake Nutma, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.86896098490408*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"68a64101-e270-4c9c-83a0-7e0e967cf454"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", "$CovDFormat", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "\<\"Postfix\"\>", 
   "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "\<\"Prefix\"\>"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CovDFormat, " changed from ", "Postfix", 
   " to ", "Prefix"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984905607*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fbb0d6fe-7db3-4073-85a2-79f40228f685"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Option \"\>", "\[InvisibleSpace]", "CurvatureRelations", 
   "\[InvisibleSpace]", "\<\" of \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\" changed from \"\>", "\[InvisibleSpace]", 
   "False", "\[InvisibleSpace]", "\<\" to \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Option ", xAct`xTensor`CurvatureRelations, " of ", xAct`xTensor`DefCovD,
    " changed from ", False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960984907413*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"90d5993a-9324-4271-a012-40bc6ffe5abb"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609863251467`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"43af9832-f708-4cc4-bb2d-1a2d92587444"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`TexAct`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.4.2\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "2", ",", "19"}], "}"}]}],
  SequenceForm["Package xAct`TexAct`  version ", "0.4.2", ", ", {2021, 2, 19}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609863269653`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ff75302e-66bd-4c8c-abb3-e36829814048"],

Cell[BoxData["\<\"CopyRight (C) 2008-2021, Thomas B\[ADoubleDot]ckdahl, Jose \
M. Martin-Garcia and Barry Wardell, under the General Public License.\"\>"], \
"Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986328413*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bba7f714-c41f-4af6-8669-72ef54f367eb"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.86896098642741*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"cfa4f9c0-1463-46bd-ad23-9a43424adce3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`FieldsX` version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "5", ",", "27"}], "}"}]}],
  SequenceForm["Package xAct`FieldsX` version ", "1.1.3", ", ", {2021, 5, 27}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609864297867`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3d372b11-793c-48bb-80fa-09a5fee2b32c"],

Cell[BoxData["\<\"Copyright \[Copyright] 2019-2021 Markus B. Fr\[ODoubleDot]b \
under the GNU General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986431983*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"68064811-953c-4352-b74c-93f8bb734fca"],

Cell[BoxData["\<\"FieldsX uses the Multisets package \[Copyright] 2011 David \
Bevan under the Wolfram Library Archive License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986434003*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4d5cfd1c-1738-4d43-8aa3-cd34fe802e01"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** Variable \"\>", "\[InvisibleSpace]", 
   "$CommuteCovDsOnScalars", "\[InvisibleSpace]", "\<\" changed from \"\>", 
   "\[InvisibleSpace]", "False", "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", "True"}],
  SequenceForm[
  "** Variable ", xAct`xTensor`$CommuteCovDsOnScalars, " changed from ", 
   False, " to ", True],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986468115*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"278fcc78-7178-4551-8d9c-d63ac455e175"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609866569633`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8d29ae34-f7d8-4099-8d4e-c690c5044ccc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2019", ",", "5", ",", "17"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTerior`  version ", "0.9.1", ", ", {2019, 5, 17}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609866597767`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"dc493ba3-393a-4da4-81bf-46a9e7b6ab84"],

Cell[BoxData["\<\"CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and \
Leo C. Stein, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986662223*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6b105ce4-3896-44b6-9ef7-224e7d85edd8"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986701954*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a9ba473f-7661-4997-a6c5-342955182b7c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package SolutionsX`SolutionsX`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.0.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2022", ",", "3", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package SolutionsX`SolutionsX`  version ", "0.0.1", ", ", {2022, 3, 28}],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986703999*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9fdee4bf-fc04-4ec4-9fc2-af7f934d5e17"],

Cell[BoxData["\<\"Copyright (C) 2022, Vasil Dimitrov, under the General \
Public License.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609867056932`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a784ebf9-0586-42cc-bf1a-3590ddd26aa5"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986707069*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6465cfc6-1715-4e43-9a64-043eac995b04"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.8689609867085743`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d374d364-3890-4fbd-b2a9-154b7b68e9de"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.868960482417494*^9, 3.868960986710352*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b596cfaa-5f10-4a95-8f86-7151b1be5347"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On-shell action (holographic renormalization)", "Section",
 CellChangeTimes->{{3.8689604942563972`*^9, 
  3.8689605064247026`*^9}},ExpressionUUID->"3cf07c24-3460-4c60-a5fa-\
4080c6d27e86"],

Cell[CellGroupData[{

Cell["Boundary calculation", "Subsection",
 CellChangeTimes->{{3.868960515110735*^9, 
  3.868960519061843*^9}},ExpressionUUID->"fd4cdb93-cc84-4345-817a-\
7cab2c70628e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{"CCLP", ",", "Boundary", ",", "Hopf2", ",", "Euclidean"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8688069723056173`*^9, 3.868806987307757*^9}, {
  3.868960527368482*^9, 3.868960527751905*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a33df51f-52c0-485c-b495-cbd21f51cf0a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"4\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"4\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960528922001*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"b6dd8120-12e0-425f-9062-e18d42d529a7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \\\"r0\\\"}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\", \",\", \"r0\"}], \"}\
\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960528942039*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"38c24477-68bd-4a50-8c1a-92610c9f8a30"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960528967372*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"1e1c936d-5197-42e3-b383-0e5c7888ae14"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\", \\\",\\\", \\\"KK\\\"}], \\\"}\\\"}], TraditionalForm]\
\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Symmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\", \",\", \
\"KK\"}], \"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\", \",\", \
\"2\"}], \"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}], \",\", RowBox[{\"Symmetric\", \"[\", \
RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \"}\"}], \"]\"}]}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960528969371*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"445316c9-3b10-4f17-95ee-5bc6ccfe426f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86896052935144*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"bb0a75e4-8665-4638-b8d2-5ac68a387807"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\
\[Tau]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"\[Theta]\\\", \
\\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"\[Phi]\\\", \\\"(\\\", \\\")\\\
\"}], \\\",\\\", RowBox[{\\\"\[Psi]\\\", \\\"(\\\", \\\")\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"\[Tau]\", \"(\", \")\
\"}], \",\", RowBox[{\"\[Theta]\", \"(\", \")\"}], \",\", RowBox[{\"\[Phi]\", \
\"(\", \")\"}], \",\", RowBox[{\"\[Psi]\", \"(\", \")\"}]}], \"}\"}], \
TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689605295659122`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"552dad6d-0509-4ce7-ab12-df558942821e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Boundary/Hopf2/Euclidean/Default\\\\\\\"\\\"\
, TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Boundary/Hopf2/Euclidean/Default\\\"\", TraditionalForm]\
\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960529684742*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"b81d8abf-ad10-413c-9880-64bf11d4db11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LoadAppendConstant", "[", 
  RowBox[{"{", 
   RowBox[{"G5", ",", "\[Beta]", ",", "CR2", ",", "CF2"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendAssumption", "[", 
  RowBox[{"$constant", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "<", "G5", "<", "$infinity"}], ",", 
     RowBox[{"0", "<", "\[Beta]", "<", "$infinity"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86886829508323*^9, 3.868868304897133*^9}, {
   3.868869352205431*^9, 3.868869359508335*^9}, {3.8688795023838778`*^9, 
   3.868879502697743*^9}, {3.868879546548382*^9, 3.868879563717165*^9}, {
   3.868879598991437*^9, 3.868879609382921*^9}, {3.8688803970651827`*^9, 
   3.8688804036566*^9}, 3.868884583300706*^9, {3.868960566020752*^9, 
   3.868960573212983*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"38bd738b-42c5-4508-bd8d-d879dbf27e63"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"G5\\\", \
\\\",\\\", \\\"\[Beta]\\\", \\\",\\\", \\\"CR2\\\", \\\",\\\", \\\"CF2\\\"}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \\\"r0\\\"}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"G5\", \",\", \"\[Beta]\", \
\",\", \"CR2\", \",\", \"CF2\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\", \",\", \"r0\"}], \"}\
\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{3.86896061197936*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"67c42e8e-c082-4a5a-bd83-8a1d70e7d9d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"KK", "[", 
     RowBox[{"\[ScriptA]", ",", 
      RowBox[{"-", "\[ScriptA]"}]}], "]"}]}], ",", 
   SqrtBox[
    RowBox[{"Detgg", "[", "]"}]], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"RicciScalarcd", "[", "]"}]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    SuperscriptBox[
     RowBox[{"RicciScalarcd", "[", "]"}], "2"]}], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{"Detgg", "[", "]"}]], 
    RowBox[{"FF", "[", 
     RowBox[{
      RowBox[{"-", "\[ScriptA]"}], ",", 
      RowBox[{"-", "\[ScriptB]"}]}], "]"}], 
    RowBox[{"FF", "[", 
     RowBox[{"\[ScriptA]", ",", "\[ScriptB]"}], "]"}]}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"terms", ",", "%"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"8", "\[Pi]", " ", "G5"}]]}], 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"-", "3"}], "g"}], ",", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"4", "g"}]]}], ",", "CR2", ",", 
    RowBox[{"-", "CF2"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"coeff", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8688796632435427`*^9, 3.868879721200109*^9}, {
   3.868879772178753*^9, 3.868879803951376*^9}, {3.868880152451417*^9, 
   3.868880274133956*^9}, {3.868880322580926*^9, 3.86888036201368*^9}, {
   3.868880434721941*^9, 3.868880461704856*^9}, {3.868884595804758*^9, 
   3.8688846883320923`*^9}, {3.868884902049638*^9, 3.868884902444853*^9}, 
   3.868884995024591*^9, {3.8689606077197943`*^9, 3.86896063579314*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e29c8a51-1fd2-4f55-95f1-9e4853d092bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"K", 
         StyleBox[GridBox[{
            {"\[ScriptA]", " "},
            {" ", "\[ScriptA]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`KK[
     CCLP`Boundary`Hopf2`Euclidean`\[ScriptA], -
      CCLP`Boundary`Hopf2`Euclidean`\[ScriptA]],
     Editable->False]}], ",", 
   SqrtBox[
    InterpretationBox[
     StyleBox[
      OverscriptBox["g", 
       OverscriptBox[
        StyleBox["~",
         FontColor->RGBColor[0, 0, 0]], 
        StyleBox["~",
         FontColor->RGBColor[0, 0, 0]]]],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`Detgg[],
     Editable->False]], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detgg[],
      Editable->False]], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox[
       RowBox[{"R", "[", "\[Del]", "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`RicciScalarcd[],
      Editable->False], "2"]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[0, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detgg[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {"\[ScriptA]", "\[ScriptB]"}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`FF[-
      CCLP`Boundary`Hopf2`Euclidean`\[ScriptA], -
      CCLP`Boundary`Hopf2`Euclidean`\[ScriptB]],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {"\[ScriptA]", "\[ScriptB]"},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`FF[
     CCLP`Boundary`Hopf2`Euclidean`\[ScriptA], 
      CCLP`Boundary`Hopf2`Euclidean`\[ScriptB]],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.868960641242572*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"c49b2ea4-3180-4268-ba08-0326f662314c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"8", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`g,
      Editable->False]}], 
    RowBox[{"8", " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]], ",", 
   FractionBox["1", 
    RowBox[{"32", " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`g,
      Editable->False], " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     InterpretationBox[
      StyleBox["CR2",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`CR2,
      Editable->False], 
     RowBox[{"8", " ", 
      InterpretationBox[
       StyleBox["G5",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`G5,
       Editable->False], " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    InterpretationBox[
     StyleBox["CF2",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`CF2,
     Editable->False], 
    RowBox[{"8", " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`G5,
      Editable->False], " ", "\[Pi]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.8689606412737303`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"c8d90934-69e4-4629-ac5b-22e62a4e3680"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToBasis", "[", "curved", "]"}], "@", 
  RowBox[{"$olution", "[", 
   RowBox[{"$rule", ",", "terms"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "@", 
  RowBox[{"Simplify", "@", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToValues2", "@", 
       RowBox[{"TraceBasisDummy", "@", "%"}]}], "/.", "ToCoord"}], ",", 
     RowBox[{"{", 
      RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"integrands", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8689606595398006`*^9, 3.868960763788992*^9}, {
  3.868960819567958*^9, 3.868960831909411*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0ae22f62-0360-47ba-9523-dc6b6d7faac6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"K", 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], " "},
            {" ", 
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`KK[{
      CCLP`Boundary`Hopf2`Euclidean`\[ScriptA], 
       CCLP`Boundary`Hopf2`Euclidean`curved}, {-
       CCLP`Boundary`Hopf2`Euclidean`\[ScriptA], -
       CCLP`Boundary`Hopf2`Euclidean`curved}],
     Editable->False]}], ",", 
   SqrtBox[
    InterpretationBox[
     StyleBox[
      OverscriptBox["g", 
       OverscriptBox[
        StyleBox["~",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["~",
         FontColor->RGBColor[1, 0, 0]]]],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`Detggcurved[],
     Editable->False]], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[
      RowBox[{"R", "[", "\[Del]", "]"}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`RicciScalarcd[],
     Editable->False]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    SuperscriptBox[
     InterpretationBox[
      StyleBox[
       RowBox[{"R", "[", "\[Del]", "]"}],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`RicciScalarcd[],
      Editable->False], "2"]}], ",", 
   RowBox[{
    SqrtBox[
     InterpretationBox[
      StyleBox[
       OverscriptBox["g", 
        OverscriptBox[
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["~",
          FontColor->RGBColor[1, 0, 0]]]],
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`Detggcurved[],
      Editable->False]], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {" ", " "},
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`FF[{-
       CCLP`Boundary`Hopf2`Euclidean`\[ScriptA], -
       CCLP`Boundary`Hopf2`Euclidean`curved}, {-
       CCLP`Boundary`Hopf2`Euclidean`\[ScriptB], -
       CCLP`Boundary`Hopf2`Euclidean`curved}],
     Editable->False], " ", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"F", 
         StyleBox[GridBox[{
            {
             StyleBox["\[ScriptA]",
              FontColor->RGBColor[1., 0., 0.]], 
             StyleBox["\[ScriptB]",
              FontColor->RGBColor[1., 0., 0.]]},
            {" ", " "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "Rows" -> {{
                Offset[0.]}}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`FF[{
      CCLP`Boundary`Hopf2`Euclidean`\[ScriptA], 
       CCLP`Boundary`Hopf2`Euclidean`curved}, {
      CCLP`Boundary`Hopf2`Euclidean`\[ScriptB], 
       CCLP`Boundary`Hopf2`Euclidean`curved}],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.868960669373253*^9, 3.868960728436365*^9}, 
   3.868960764821104*^9, 3.868960833136248*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"aedbc337-5f7e-4e53-9a2b-0b44e98cb1ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Sin",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Sin,
        Editable->False], "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"-", "8"}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Sin",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Sin,
        Editable->False], "[", "\[Theta]", "]"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Sin",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Sin,
        Editable->False], "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", "16"}], " ", 
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`g,
        Editable->False]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`g,
         Editable->False], "3"]}]}]], "+", 
    FractionBox[
     RowBox[{
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`g,
       Editable->False], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      RowBox[{
       InterpretationBox[
        StyleBox["Sin",
         ShowAutoStyles->False,
         AutoSpacing->False],
        Sin,
        Editable->False], "[", "\[Theta]", "]"}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]]}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     InterpretationBox[
      StyleBox["g",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Boundary`Hopf2`Euclidean`g,
      Editable->False], " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["r0",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`r0,
       Editable->False], "2"], " ", 
     RowBox[{
      InterpretationBox[
       StyleBox["Sin",
        ShowAutoStyles->False,
        AutoSpacing->False],
       Sin,
       Editable->False], "[", "\[Theta]", "]"}]}], 
    RowBox[{"4", "-", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`g,
        Editable->False], "2"]}]}]], ",", 
   RowBox[{
    FractionBox["9", "2"], " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`g,
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      StyleBox["Sin",
       ShowAutoStyles->False,
       AutoSpacing->False],
      Sin,
      Editable->False], "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]], "Output",\

 CellChangeTimes->{{3.868960669373253*^9, 3.868960728436365*^9}, 
   3.868960764821104*^9, 3.8689608332740717`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"e4495db1-9b78-4afd-a805-6789b8986520"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BoundaryActionIntegrate", "[", "integrand_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"integrand", ",", "\[Theta]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"8", 
      SuperscriptBox["\[Pi]", "2"], "\[Beta]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"tmp", "/.", 
          RowBox[{"\[Theta]", "\[Rule]", "\[Pi]"}]}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"tmp", "/.", 
          RowBox[{"\[Theta]", "\[Rule]", "0"}]}], ")"}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{"tmp", ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=."}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.86887593694602*^9, 3.868875940567156*^9}, {
  3.86887598630602*^9, 3.868876044744795*^9}, {3.86888098493889*^9, 
  3.868880985998445*^9}, {3.868881022860939*^9, 3.868881031450634*^9}, {
  3.868881236838829*^9, 3.868881238669443*^9}, {3.868960845007772*^9, 
  3.868960867205655*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"d21b6725-b0dd-4a0d-9f86-1f357e750f50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrals", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryActionIntegrate", "[", "#", "]"}], "&"}], "/@", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "integrands"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.868882599261283*^9, 3.868882626533538*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4b108c2a-047a-440f-b6ba-02959ddb4e87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}]], "+", 
    FractionBox[
     RowBox[{"8", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`r0,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["\[Beta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`\[Beta],
        Editable->False]}], 
      RowBox[{
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`g,
        Editable->False], "-", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Boundary`Hopf2`Euclidean`g,
          Editable->False], "3"]}]}]]}], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`g,
       Editable->False], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Boundary`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"12", " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`g,
       Editable->False], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Boundary`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}]]}], ",", 
   RowBox[{"72", " ", 
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`g,
     Editable->False], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Boundary`Hopf2`Euclidean`\[Beta],
     Editable->False]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.868960913684944*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"180c5128-1cf5-4882-9049-ee31eb780893"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vIbdy", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "coeff"}], "]"}], ".", "integrals"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"action", ",", 
   RowBox[{"Ibdy", "\[Rule]", "vIbdy"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.868882690380197*^9, 3.868882728833456*^9}, {
  3.868882834734006*^9, 3.8688828433931704`*^9}, {3.868960929498846*^9, 
  3.868960930064514*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"4b1a0d4e-6b76-47ee-8b8e-91c5affdd7e4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "36"}], " ", 
      InterpretationBox[
       StyleBox["CR2",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`CR2,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Boundary`Hopf2`Euclidean`g,
       Editable->False]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Boundary`Hopf2`Euclidean`r0,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r0",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`r0,
            Editable->False], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Boundary`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]]}], ")"}], " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Boundary`Hopf2`Euclidean`\[Beta],
    Editable->False]}], 
  RowBox[{"4", " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Boundary`Hopf2`Euclidean`G5,
    Editable->False]}]]], "Output",
 CellChangeTimes->{{3.868960921794804*^9, 3.8689609392574453`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"8957c101-ca78-4dcb-a7da-00bd6ecf3433"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaveSolution", "[", "\"\<thermo2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveExample", "[", 
  RowBox[{"\"\<CCLP_aqm_2\[PartialD]\>\"", ",", "\"\<Action_HoloRen\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quit", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.868808852444003*^9, 3.868808869028419*^9}, {
   3.8688089230016117`*^9, 3.868808924282598*^9}, {3.868885321170762*^9, 
   3.868885362822263*^9}, 3.868938952101845*^9, 3.868960952996217*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"acd77a30-36fa-411e-b653-f9bfc7cb419f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saved \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"$olution\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" under the file name \"\>", "\[InvisibleSpace]", 
   
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Boundary/Hopf2/Euclidean/thermo2/2022-08-08_\
17-22-35.m\\\\\\\"\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Saved ", 
   Style["$olution", FontFamily -> "Source Code Pro Semibold"], 
   " under the file name ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Boundary/Hopf2/Euclidean/thermo2/2022-08-08_17-22-35.m\\\
\"\", TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960956004636*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"15cd3429-2fa2-4323-afa8-81bf0a41d5cd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bulk calculation", "Subsection",
 CellChangeTimes->{{3.868960964961187*^9, 
  3.868960968527358*^9}},ExpressionUUID->"e91cc616-3edc-452d-b8af-\
00389d1d0eab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadSolution", "[", 
  RowBox[{"{", 
   RowBox[{
   "CCLP", ",", "Bulk", ",", "Hopf2", ",", "Euclidean", ",", 
    "\"\<thermo2\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.868808897133745*^9, 3.8688089185937843`*^9}, {
  3.868960978012746*^9, 3.868960978732161*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"79dbb8ab-de9a-4126-86c8-d79804949cfc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of dimension \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with indices \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"\[ScriptA]\\\
\", \\\",\\\", \\\"\[ScriptB]\\\", \\\",\\\", \\\"\[ScriptC]\\\", \\\",\\\", \
\\\"\[ScriptD]\\\", \\\",\\\", \\\"\[ScriptE]\\\", \\\",\\\", \
\\\"\[ScriptF]\\\", \\\",\\\", \\\"\[ScriptG]\\\", \\\",\\\", \
\\\"\[ScriptH]\\\", \\\",\\\", \\\"\[ScriptI]\\\", \\\",\\\", \
\\\"\[ScriptJ]\\\", \\\",\\\", \\\"\[ScriptK]\\\", \\\",\\\", \
\\\"\[ScriptL]\\\", \\\",\\\", \\\"\[ScriptM]\\\", \\\",\\\", \
\\\"\[ScriptN]\\\", \\\",\\\", \\\"\[ScriptO]\\\", \\\",\\\", \
\\\"\[ScriptP]\\\", \\\",\\\", \\\"\[ScriptQ]\\\", \\\",\\\", \
\\\"\[ScriptR]\\\", \\\",\\\", \\\"\[ScriptS]\\\", \\\",\\\", \
\\\"\[ScriptT]\\\", \\\",\\\", \\\"\[ScriptU]\\\", \\\",\\\", \
\\\"\[ScriptV]\\\", \\\",\\\", \\\"\[ScriptW]\\\", \\\",\\\", \
\\\"\[ScriptX]\\\", \\\",\\\", \\\"\[ScriptY]\\\", \\\",\\\", \
\\\"\[ScriptZ]\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of dimension ", 
   Style["\!\(\*FormBox[\"5\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with indices ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"\[ScriptA]\", \",\", \"\
\[ScriptB]\", \",\", \"\[ScriptC]\", \",\", \"\[ScriptD]\", \",\", \"\
\[ScriptE]\", \",\", \"\[ScriptF]\", \",\", \"\[ScriptG]\", \",\", \"\
\[ScriptH]\", \",\", \"\[ScriptI]\", \",\", \"\[ScriptJ]\", \",\", \"\
\[ScriptK]\", \",\", \"\[ScriptL]\", \",\", \"\[ScriptM]\", \",\", \"\
\[ScriptN]\", \",\", \"\[ScriptO]\", \",\", \"\[ScriptP]\", \",\", \"\
\[ScriptQ]\", \",\", \"\[ScriptR]\", \",\", \"\[ScriptS]\", \",\", \"\
\[ScriptT]\", \",\", \"\[ScriptU]\", \",\", \"\[ScriptV]\", \",\", \"\
\[ScriptW]\", \",\", \"\[ScriptX]\", \",\", \"\[ScriptY]\", \",\", \"\
\[ScriptZ]\"}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689609873315163`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"26fe8ced-a068-4938-a9fb-dd96d4557a24"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \\\"r0\\\", \\\",\\\", \\\"rp\
\\\", \\\",\\\", \\\"G5\\\", \\\",\\\", \\\"\[Beta]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\", \",\", \"r0\", \
\",\", \"rp\", \",\", \"G5\", \",\", \"\[Beta]\"}], \"}\"}], TraditionalForm]\
\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960987367818*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"6b36c72a-c3ab-4364-b476-2329d81adadf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined forms \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"fA\\\", \
\\\",\\\", \\\"fF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined forms ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"fA\", \",\", \"fF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8689609873845387`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"e9f71130-e47c-4fd2-9cb8-b65af9d8a68d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined tensors \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"AA\\\", \
\\\",\\\", \\\"FF\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of ranks \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\
\\\", \\\"2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and symmetries \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", RowBox[{\\\"Antisymmetric\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined tensors ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"AA\", \",\", \"FF\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " of ranks ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"1\", \",\", \"2\"}], \
\"}\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " and symmetries ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"Null\", \",\", \
RowBox[{\"Antisymmetric\", \"[\", RowBox[{\"{\", RowBox[{\"1\", \",\", \
\"2\"}], \"}\"}], \"]\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960987387813*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"9a5538a6-c1fc-4aa7-a869-2c752530bf55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined metric \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"gg\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" of signature \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" and covariant derivative \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"cd\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Defined metric ", 
   Style["\!\(\*FormBox[\"gg\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " of signature ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " and covariant derivative ", 
   Style["\!\(\*FormBox[\"cd\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86896098807019*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"89a754cc-e643-4b5b-8c79-75b4c9045937"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined \"\>", "\[InvisibleSpace]", 
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], "\[InvisibleSpace]", "\<\" chart \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"curved\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" with coordinates \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\
\[Tau]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", RowBox[{\\\"r\\\", \\\"(\\\", \
\\\")\\\"}], \\\",\\\", RowBox[{\\\"\[Theta]\\\", \\\"(\\\", \\\")\\\"}], \
\\\",\\\", RowBox[{\\\"\[Phi]\\\", \\\"(\\\", \\\")\\\"}], \\\",\\\", \
RowBox[{\\\"\[Psi]\\\", \\\"(\\\", \\\")\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" on the manifold \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"man\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" | Set \"\>",
    "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"ChristoffelPDcurved\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" to zero\"\>"}],
  SequenceForm["Defined ", 
   RGBColor[1, 0, 0], " chart ", 
   Style["\!\(\*FormBox[\"curved\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " with coordinates ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"\[Tau]\", \"(\", \")\
\"}], \",\", RowBox[{\"r\", \"(\", \")\"}], \",\", RowBox[{\"\[Theta]\", \
\"(\", \")\"}], \",\", RowBox[{\"\[Phi]\", \"(\", \")\"}], \",\", RowBox[{\"\
\[Psi]\", \"(\", \")\"}]}], \"}\"}], TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " on the manifold ", 
   Style["\!\(\*FormBox[\"man\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " | Set ", 
   Style["\!\(\*FormBox[\"ChristoffelPDcurved\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]], " to zero"],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960988249135*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"b64d43c4-eadc-4dd2-a036-0da0b375839d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loaded solution version \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\" from \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/thermo2\\\\\\\"\\\", \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Loaded solution version ", 
   Style["\!\(\*FormBox[\"1\", TraditionalForm]\)", FontColor -> 
    RGBColor[0.5, 0, 0.5]], " from ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/thermo2\\\"\", TraditionalForm]\)", 
    FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.868960988383041*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"20be899c-9313-4434-830d-2d0310a3c2d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadAppendConstant", "[", 
  RowBox[{"{", 
   RowBox[{"CR2", ",", "CF2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.868810847422806*^9, 3.868810851501095*^9}, {
  3.868885464569104*^9, 3.868885467404851*^9}, {3.8689609917227707`*^9, 
  3.868960992764224*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"51535f3a-336e-4c45-9809-cd82c6a1ec36"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Defined constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"CR2\\\", \
\\\",\\\", \\\"CF2\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" | Constant symbols \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\
\\\", \\\"m\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \\\"\
\[Alpha]\\\", \\\",\\\", \\\"Cx\\\", \\\",\\\", \\\"r0\\\", \\\",\\\", \\\"rp\
\\\", \\\",\\\", \\\"G5\\\", \\\",\\\", \\\"\[Beta]\\\"}], \\\"}\\\"}], \
TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]], 
   "\[InvisibleSpace]", "\<\" are already defined\"\>"}],
  SequenceForm["Defined constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"CR2\", \",\", \"CF2\"}], \"}\
\"}], TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]], 
   " | Constant symbols ", 
   Style["\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \
\"q\", \",\", \"g\", \",\", \"\[Alpha]\", \",\", \"Cx\", \",\", \"r0\", \
\",\", \"rp\", \",\", \"G5\", \",\", \"\[Beta]\"}], \"}\"}], TraditionalForm]\
\)", FontColor -> RGBColor[0.5, 0, 0.5]], " are already defined"],
  Editable->False]], "Print",
 CellChangeTimes->{3.86896099454016*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"5a7aacc3-b6ac-49bd-a030-5987f0250f0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"r", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["r", "2"]], "f1"}], "+", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["r", "4"]], "f2"}]}], ")"}]}], "/.", 
    RowBox[{"Solution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"CCLP", ",", "Asymptotic", ",", "Hopf2", ",", "Lorentzian"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"$rule", ",", "const"}], "}"}], ",", 
      RowBox[{"ChangeCoord", "\[Rule]", "False"}]}], "]"}]}], "/.", 
   RowBox[{
   "CCLP`Asymptotic`Hopf2`Lorentzian`\[Theta]", "\[Rule]", "\[Theta]"}]}], "/.", 
  RowBox[{"r", "\[Rule]", "r0"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"rupper", ",", 
   RowBox[{"{", 
    RowBox[{"rupper", "\[Rule]", "%"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.868809455081184*^9, 3.868809482818592*^9}, {
  3.868809519981574*^9, 3.868809585431816*^9}, {3.8688855429837933`*^9, 
  3.868885594750203*^9}, {3.868961014379615*^9, 3.868961040980204*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c77d68f9-562c-4f00-9468-467db6b61c94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], "-", 
      RowBox[{"2", " ", 
       InterpretationBox[
        StyleBox["m",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`m,
        Editable->False]}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"]}]], "-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "2"]}]]}], ")"}], " ", 
  InterpretationBox[
   StyleBox["r0",
    ShowAutoStyles->False,
    AutoSpacing->False],
   CCLP`Bulk`Hopf2`Euclidean`r0,
   Editable->False]}]], "Output",
 CellChangeTimes->{3.868961044472355*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4956f56b-66ac-490d-8081-5e43369df87b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ActionIntegrate", "[", 
   RowBox[{"integrand_", ",", 
    RowBox[{"{", 
     RowBox[{"rLower_", ",", "rUpper_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]Lower_", ",", "\[Tau]Upper_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"integrand", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rUpper"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{"tmp", "/.", 
            RowBox[{"r", "\[Rule]", "rLower"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{"tmp", ",", "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{"Simplify", "@", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"8", 
          SuperscriptBox["\[Pi]", "2"], 
          RowBox[{"(", 
           RowBox[{"\[Tau]Upper", "-", "\[Tau]Lower"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tmp", "/.", 
              RowBox[{"\[Theta]", "\[Rule]", "\[Pi]"}]}], ")"}], "-", 
            RowBox[{"(", 
             RowBox[{"tmp", "/.", 
              RowBox[{"\[Theta]", "\[Rule]", "0"}]}], ")"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r0", ",", "\[Infinity]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=."}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.86887593694602*^9, 3.868875940567156*^9}, {
  3.86887598630602*^9, 3.868876044744795*^9}, {3.8689610640021057`*^9, 
  3.8689610837068872`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ca53c41a-a467-45df-b44f-d6b00bf28c6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"integralsBH", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ActionIntegrate", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"rp", ",", 
         RowBox[{"rupper", "/.", 
          RowBox[{"$olution", "[", 
           RowBox[{"$rule", ",", "rupper"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Beta]"}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "integrands"}], "]"}]}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "\[Alpha]T\[CapitalPhi]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"vIbulk", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "coeff"}], "]"}], ".", "integralsBH"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"vIbdy", "=", 
  RowBox[{"Ibdy", "/.", 
   RowBox[{"Solution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CCLP", ",", "Boundary", ",", "Hopf2", ",", "Euclidean", ",", 
       "\"\<thermo2\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"$rule", ",", "action"}], "}"}], ",", 
     RowBox[{"ChangeCoord", "\[Rule]", "False"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"action", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Ibulk", "\[Rule]", "vIbulk"}], ",", 
     RowBox[{"Ibdy", "\[Rule]", "vIbdy"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.86887609796426*^9, 3.868876106070826*^9}, {
  3.8688761562805862`*^9, 3.8688761961362953`*^9}, {3.868876284793827*^9, 
  3.8688762914095087`*^9}, {3.868876337265373*^9, 3.868876375579825*^9}, {
  3.868877376627322*^9, 3.8688773769513607`*^9}, {3.868877417215465*^9, 
  3.868877448077327*^9}, {3.8688856954658947`*^9, 3.868885704606537*^9}, {
  3.868961147823084*^9, 3.868961183306418*^9}, {3.868961223528903*^9, 
  3.868961224146633*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ddd57ba2-049e-4937-bf59-70ace8fe8e30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"10", " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r0,
         Editable->False], "2"], " ", 
       InterpretationBox[
        StyleBox["\[Beta]",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`\[Beta],
        Editable->False]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        SuperscriptBox[
         InterpretationBox[
          StyleBox["g",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`g,
          Editable->False], "2"]}]}]]}], "-", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["15", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]]}], "+", 
        RowBox[{"25", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}], "-", 
        RowBox[{"40", " ", 
         InterpretationBox[
          StyleBox["m",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`m,
          Editable->False]}], "+", 
        RowBox[{"40", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "4"]}], "-", 
        FractionBox[
         RowBox[{"8", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["q",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`q,
            Editable->False], "2"]}], 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], "+", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`rp,
            Editable->False], "2"]}]], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"30", "+", 
           RowBox[{"80", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`rp,
              Editable->False], "2"]}], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["q",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`q,
               Editable->False], "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["a",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf2`Euclidean`a,
                 Editable->False], "2"], "+", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf2`Euclidean`rp,
                 Editable->False], "2"]}], ")"}], "2"]]}], ")"}]}]}], ")"}], 
      " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"]}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["r0",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`r0,
        Editable->False], "4"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "4"]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         InterpretationBox[
          StyleBox["m",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`m,
          Editable->False]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "4"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["g",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`g,
              Editable->False], "2"], " ", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["rp",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`rp,
              Editable->False], "2"]}]}], ")"}]}]}], ")"}], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{"16", " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["g",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`g,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"24", " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`q,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`rp,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`Cx,
        Editable->False], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "2"]}], ")"}], "2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"48", " ", "\[ImaginaryI]", " ", 
      SqrtBox["3"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["a",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`a,
        Editable->False], "2"], " ", 
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["q",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`q,
        Editable->False], "3"], " ", 
      SuperscriptBox[
       InterpretationBox[
        StyleBox["rp",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`rp,
        Editable->False], "2"], " ", 
      InterpretationBox[
       StyleBox["\[Beta]",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`\[Beta],
       Editable->False]}], 
     RowBox[{
      SuperscriptBox[
       InterpretationBox[
        StyleBox["Cx",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`Cx,
        Editable->False], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], "+", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["rp",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`rp,
           Editable->False], "2"]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         InterpretationBox[
          StyleBox["q",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`q,
          Editable->False]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            InterpretationBox[
             StyleBox["a",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`a,
             Editable->False], "2"], "+", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["rp",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`rp,
             Editable->False], "2"]}], ")"}], "2"]}], ")"}]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.868961125859354*^9, 3.86896115647755*^9}, 
   3.8689611975844297`*^9, 3.868961228951569*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"16d5d88a-516b-4e9f-bb27-1b6db0d96565"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"32", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`g,
       Editable->False], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["a",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`a,
           Editable->False], "2"], " ", 
         SuperscriptBox[
          InterpretationBox[
           StyleBox["g",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`g,
           Editable->False], "2"]}]}], ")"}], "2"], " ", 
     InterpretationBox[
      StyleBox["G5",
       ShowAutoStyles->False,
       AutoSpacing->False],
      CCLP`Bulk`Hopf2`Euclidean`G5,
      Editable->False], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "4"], "+", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "4"], "+", 
       RowBox[{
        SuperscriptBox[
         InterpretationBox[
          StyleBox["a",
           ShowAutoStyles->False,
           AutoSpacing->False],
          CCLP`Bulk`Hopf2`Euclidean`a,
          Editable->False], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`q,
           Editable->False], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            InterpretationBox[
             StyleBox["rp",
              ShowAutoStyles->False,
              AutoSpacing->False],
             CCLP`Bulk`Hopf2`Euclidean`rp,
             Editable->False], "2"]}]}], ")"}]}]}], ")"}]}]], 
   RowBox[{"\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "8"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "4"]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "4"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["rp",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`rp,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`q,
           Editable->False], "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             InterpretationBox[
              StyleBox["m",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`m,
              Editable->False]}], "+", 
            SuperscriptBox[
             InterpretationBox[
              StyleBox["r0",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`r0,
              Editable->False], "2"]}], ")"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`rp,
            Editable->False], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r0",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`r0,
            Editable->False], "4"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`rp,
            Editable->False], "4"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`rp,
            Editable->False], "8"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "6"], " ", 
       SuperscriptBox[
        InterpretationBox[
         StyleBox["g",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`g,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"5", " ", 
             InterpretationBox[
              StyleBox["q",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`q,
              Editable->False]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["r0",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`r0,
               Editable->False], "2"]}], "+", 
            RowBox[{"26", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["rp",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`rp,
               Editable->False], "2"]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             InterpretationBox[
              StyleBox["m",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`m,
              Editable->False]}], "+", 
            RowBox[{"6", " ", 
             InterpretationBox[
              StyleBox["q",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`q,
              Editable->False]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["r0",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`r0,
               Editable->False], "2"]}], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["rp",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`rp,
               Editable->False], "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             InterpretationBox[
              StyleBox["q",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`q,
              Editable->False], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["r0",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`r0,
               Editable->False], "2"]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["r0",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`r0,
               Editable->False], "4"]}], "+", 
            RowBox[{"16", " ", 
             InterpretationBox[
              StyleBox["q",
               ShowAutoStyles->False,
               AutoSpacing->False],
              CCLP`Bulk`Hopf2`Euclidean`q,
              Editable->False], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["rp",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`rp,
               Editable->False], "2"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["r0",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`r0,
               Editable->False], "2"], " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["rp",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`rp,
               Editable->False], "2"]}], "+", 
            RowBox[{"45", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["rp",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`rp,
               Editable->False], "4"]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["a",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`a,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["rp",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`rp,
            Editable->False], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`g,
               Editable->False], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"8", " ", 
                InterpretationBox[
                 StyleBox["m",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf2`Euclidean`m,
                 Editable->False]}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["r0",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf2`Euclidean`r0,
                  Editable->False], "2"]}], "-", 
               RowBox[{"3", " ", 
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["rp",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf2`Euclidean`rp,
                  Editable->False], "2"]}]}], ")"}]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`g,
               Editable->False], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["r0",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf2`Euclidean`r0,
                  Editable->False], "4"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["r0",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf2`Euclidean`r0,
                  Editable->False], "2"], " ", 
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["rp",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf2`Euclidean`rp,
                  Editable->False], "2"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 InterpretationBox[
                  StyleBox["rp",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  CCLP`Bulk`Hopf2`Euclidean`rp,
                  Editable->False], "4"]}]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          InterpretationBox[
           StyleBox["q",
            ShowAutoStyles->False,
            AutoSpacing->False],
           CCLP`Bulk`Hopf2`Euclidean`q,
           Editable->False], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`g,
               Editable->False], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                StyleBox["m",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                CCLP`Bulk`Hopf2`Euclidean`m,
                Editable->False], "-", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf2`Euclidean`r0,
                 Editable->False], "2"]}], ")"}]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              InterpretationBox[
               StyleBox["g",
                ShowAutoStyles->False,
                AutoSpacing->False],
               CCLP`Bulk`Hopf2`Euclidean`g,
               Editable->False], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["r0",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf2`Euclidean`r0,
                 Editable->False], "4"], "-", 
               SuperscriptBox[
                InterpretationBox[
                 StyleBox["rp",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 CCLP`Bulk`Hopf2`Euclidean`rp,
                 Editable->False], "4"]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
     ")"}], " ", 
    InterpretationBox[
     StyleBox["\[Beta]",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`\[Beta],
     Editable->False]}]}]}]], "Output",
 CellChangeTimes->{{3.868961125859354*^9, 3.86896115647755*^9}, 
   3.8689611975844297`*^9, 3.868961229159938*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"a74f4c68-e670-4007-9db2-a682c19697cd"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "36"}], " ", 
      InterpretationBox[
       StyleBox["CR2",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`CR2,
       Editable->False], " ", 
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`g,
       Editable->False]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        InterpretationBox[
         StyleBox["r0",
          ShowAutoStyles->False,
          AutoSpacing->False],
         CCLP`Bulk`Hopf2`Euclidean`r0,
         Editable->False], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["r0",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`r0,
            Editable->False], "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox[
           InterpretationBox[
            StyleBox["a",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`a,
            Editable->False], "2"], " ", 
          SuperscriptBox[
           InterpretationBox[
            StyleBox["g",
             ShowAutoStyles->False,
             AutoSpacing->False],
            CCLP`Bulk`Hopf2`Euclidean`g,
            Editable->False], "2"]}]}], ")"}], "2"]]}], ")"}], " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Euclidean`\[Beta],
    Editable->False]}], 
  RowBox[{"4", " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Euclidean`G5,
    Editable->False]}]]], "Output",
 CellChangeTimes->{{3.868961125859354*^9, 3.86896115647755*^9}, 
   3.8689611975844297`*^9, 3.868961229217334*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"cba17641-75ab-4e39-a456-99a153293997"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ibulk", "+", "Ibdy", "-", "Iren"}], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "action"}], "]"}]}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solCR2", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"%", "==", "0"}], ",", "CR2", ",", 
       RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}]}], "//", 
    "Simplify"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"CR2", ",", "solCR2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.868885923483417*^9, 3.8688859570246887`*^9}, {
  3.8688860553149776`*^9, 3.8688860583189583`*^9}, {3.8688861206653843`*^9, 
  3.8688861210432577`*^9}, {3.868961252748067*^9, 3.868961255959037*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4b42aaa2-23b5-422a-8af0-693016578b8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox["CR2",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Euclidean`CR2,
    Editable->False], "\[Rule]", 
   FractionBox["1", 
    RowBox[{"96", " ", 
     SuperscriptBox[
      InterpretationBox[
       StyleBox["g",
        ShowAutoStyles->False,
        AutoSpacing->False],
       CCLP`Bulk`Hopf2`Euclidean`g,
       Editable->False], "3"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.868961270099556*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"013ca5d7-2386-408a-9115-2f8f0c50bff8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ibulk", "+", "Ibdy", "-", "Iren"}], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "action"}], "]"}]}], "/.", 
   RowBox[{"$olution", "[", 
    RowBox[{"$rule", ",", "CR2"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.868886139144683*^9, 3.868886149902976*^9}, 
   3.868961284208952*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"b14ce6ad-992b-4c46-ab7e-a3d24868eedf"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.868961284979206*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"86fa9c99-018b-4129-a7c4-168c17c71f30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ibulk", "+", "Ibdy", "-", "Iren"}], "/.", 
    RowBox[{"$olution", "[", 
     RowBox[{"$rule", ",", "action"}], "]"}]}], "/.", 
   RowBox[{"CR2", "\[Rule]", "0"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"LoadAppendRule", "[", 
  RowBox[{"McSkenderis", ",", 
   RowBox[{"{", 
    RowBox[{"Mc", "\[Rule]", 
     FractionBox["%", "\[Beta]"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.868886188817154*^9, 3.8688862233758287`*^9}, {
  3.8688862647868137`*^9, 3.8688862811830587`*^9}, {3.868961325046555*^9, 
  3.868961336486813*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"758c0f95-ecfd-4e9b-b882-1917b56ff6db"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Pi]", " ", 
   InterpretationBox[
    StyleBox["\[Beta]",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Euclidean`\[Beta],
    Editable->False]}], 
  RowBox[{"32", " ", 
   SuperscriptBox[
    InterpretationBox[
     StyleBox["g",
      ShowAutoStyles->False,
      AutoSpacing->False],
     CCLP`Bulk`Hopf2`Euclidean`g,
     Editable->False], "2"], " ", 
   InterpretationBox[
    StyleBox["G5",
     ShowAutoStyles->False,
     AutoSpacing->False],
    CCLP`Bulk`Hopf2`Euclidean`G5,
    Editable->False]}]]], "Output",
 CellChangeTimes->{3.8689612923883953`*^9, 3.868961339079897*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"89a243eb-ce36-4cae-98d7-22850328717a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print$olution", "[", "$rule", "]"}]], "Input",
 CellChangeTimes->{{3.868886353495089*^9, 3.868886357430463*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"472b7354-4cfa-4661-9aff-3506486917c8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"mTrp", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`m -> 
             Rational[1, 2] 
              CCLP`Bulk`Hopf2`Euclidean`rp^(-2) (
               2 CCLP`Bulk`Hopf2`Euclidean`a^2 CCLP`Bulk`Hopf2`Euclidean`q + 
               CCLP`Bulk`Hopf2`Euclidean`q^2 + (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                  CCLP`Bulk`Hopf2`Euclidean`rp^2)^2 (1 + 
                 CCLP`Bulk`Hopf2`Euclidean`g^2 
                  CCLP`Bulk`Hopf2`Euclidean`rp^2))}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False], 
                    "\[Rule]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{145., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{145., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Alpha]T\[CapitalPhi]", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`\[Alpha] -> -3^Rational[1, 2] 
              CCLP`Bulk`Hopf2`Euclidean`Cx^(-1) CCLP`Bulk`Hopf2`Euclidean`q 
              CCLP`Bulk`Hopf2`Euclidean`rp^2/(
              CCLP`Bulk`Hopf2`Euclidean`a^2 
               CCLP`Bulk`Hopf2`Euclidean`q + (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                CCLP`Bulk`Hopf2`Euclidean`rp^2)^2)}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`\[Alpha], Editable -> False], 
                    "\[Rule]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"]}], ")"}]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{111., {18.930978260869566`, 23.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{111., {18.930978260869566`, 23.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"\[Tau]upper", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`\[Tau]upper -> 
             CCLP`Bulk`Hopf2`Euclidean`\[Beta] - 
              CCLP`Bulk`Hopf2`Euclidean`g^(-2) CCLP`Bulk`Hopf2`Euclidean`m 
              CCLP`Bulk`Hopf2`Euclidean`r0^(-4) 
              CCLP`Bulk`Hopf2`Euclidean`\[Beta]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"\[Tau]upper", "\[Rule]", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False], "-", 
                    FractionBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "4"]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{99., {17.430978260869566`, 21.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"rlower", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`rlower -> 
             Complex[0, 1] CCLP`Bulk`Hopf2`Euclidean`a}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"rlower", "\[Rule]", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{71., {15.430978260869566`, 19.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{71., {15.430978260869566`, 19.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"terms", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`Detgg[]^Rational[1, 2] 
             CCLP`Bulk`Hopf2`Euclidean`RicciScalarcd[], 
             CCLP`Bulk`Hopf2`Euclidean`g^2 
             CCLP`Bulk`Hopf2`Euclidean`Detgg[]^Rational[1, 2], 
             CCLP`Bulk`Hopf2`Euclidean`Detgg[]^Rational[1, 2] 
             CCLP`Bulk`Hopf2`Euclidean`FF[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], -
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]] 
             CCLP`Bulk`Hopf2`Euclidean`FF[
              CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]], 
             CCLP`Bulk`Hopf2`Euclidean`AA[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptA]] 
             CCLP`Bulk`Hopf2`Euclidean`etaUpcurved[
              CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptC], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], 
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]] 
             CCLP`Bulk`Hopf2`Euclidean`FF[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], -
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptC]] 
             CCLP`Bulk`Hopf2`Euclidean`FF[-
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], -
               CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]]}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    "R[\[Del]]", AutoSpacing -> False, ShowAutoStyles -> 
                    False], 
                    CCLP`Bulk`Hopf2`Euclidean`RicciScalarcd[], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`Detgg[], Editable -> False]]}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    SqrtBox[
                    InterpretationBox[
                    StyleBox[
                    "\!\(g\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, \
0]]\&\*StyleBox[\"~\",FontColor->RGBColor[0, 0, 0]]\)", AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`Detgg[], Editable -> False]], 
                    " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptA]", "\[ScriptB]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`FF[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], -
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]"}, {" ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`FF[
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"A", 
                    StyleBox[
                    
                    GridBox[{{" "}, {"\[ScriptA]"}}, RowSpacings -> 0, 
                    ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`AA[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    
                    GridBox[{{
                    "\!\(\[Eta]\&\*StyleBox[\"~\",FontColor->RGBColor[1, 0, \
0]]\)", 
                    StyleBox[
                    
                    GridBox[{{"\[ScriptA]", "\[ScriptB]", "\[ScriptC]", 
                    "\[ScriptD]", "\[ScriptE]"}, {" ", " ", " ", " ", " "}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`etaUpcurved[
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptA], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptC], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], 
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptB]", "\[ScriptC]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`FF[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptB], -
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptC]], Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"F", 
                    StyleBox[
                    
                    GridBox[{{" ", " "}, {"\[ScriptD]", "\[ScriptE]"}}, 
                    RowSpacings -> 0, ColumnSpacings -> 0.05, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], FontSize -> 
                    Rational[39, 4]]}}, ColumnSpacings -> 0.05, RowAlignments -> 
                    Center], AutoSpacing -> False, ShowAutoStyles -> False], 
                    
                    CCLP`Bulk`Hopf2`Euclidean`FF[-
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptD], -
                    CCLP`Bulk`Hopf2`Euclidean`\[ScriptE]], Editable -> 
                    False]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{102., {52.430978260869566`, 56.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"coeff", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            Rational[-1, 16] CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/Pi, 
             Rational[-3, 4] CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/Pi, 
             Rational[1, 64] CCLP`Bulk`Hopf2`Euclidean`Cx^2 
             CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/Pi, Complex[0, 
               Rational[1, 192]] 3^Rational[-1, 2] 
             CCLP`Bulk`Hopf2`Euclidean`Cx^3 CCLP`Bulk`Hopf2`Euclidean`G5^(-1)/
             Pi}, "AllowEmbedding" -> True, "InitialShape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"16", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["3", 
                    RowBox[{"4", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "2"], 
                    RowBox[{"64", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "3"]}], 
                    RowBox[{"192", " ", 
                    SqrtBox["3"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", "\[Pi]"}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{67., {54.430978260869566`, 58.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"integrands", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            Rational[
              1, 8] (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
              CCLP`Bulk`Hopf2`Euclidean`r^2) ((-20) 
               CCLP`Bulk`Hopf2`Euclidean`g^2 + 
              2 CCLP`Bulk`Hopf2`Euclidean`q^2 (CCLP`Bulk`Hopf2`Euclidean`a - 
                CCLP`Bulk`Hopf2`Euclidean`r) (CCLP`Bulk`Hopf2`Euclidean`a + 
                CCLP`Bulk`Hopf2`Euclidean`r) (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf2`Euclidean`r^2)^(-4)) 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]], Rational[1, 8] 
             CCLP`Bulk`Hopf2`Euclidean`g^2 (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
              CCLP`Bulk`Hopf2`Euclidean`r^2) 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]], 3 
             CCLP`Bulk`Hopf2`Euclidean`Cx^(-2) (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`q^2 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 - 
              CCLP`Bulk`Hopf2`Euclidean`r^2) (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
               CCLP`Bulk`Hopf2`Euclidean`r^2)^(-3) 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]], Complex[0, 12] 
             CCLP`Bulk`Hopf2`Euclidean`a^2 
             CCLP`Bulk`Hopf2`Euclidean`Cx^(-2) (-1 + 
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
             CCLP`Bulk`Hopf2`Euclidean`q^2 
             CCLP`Bulk`Hopf2`Euclidean`r (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
               CCLP`Bulk`Hopf2`Euclidean`r^2)^(-3) 
             CCLP`Bulk`Hopf2`Euclidean`\[Alpha] 
             Sin[CCLP`Bulk`Hopf2`Euclidean`\[Theta]]}, "AllowEmbedding" -> 
           True, "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 4, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 4], "Path" -> {}, 
           "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 4, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "20"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "-", "r"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "+", "r"}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "4"]]}], ")"}], " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"]}]], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "-", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    FractionBox[
                    RowBox[{"12", " ", "\[ImaginaryI]", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", "r", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Alpha]"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    CCLP`Bulk`Hopf2`Euclidean`\[Alpha], Editable -> False], 
                    " ", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Sin"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], Sin, Editable -> False], "[", "\[Theta]", "]"}]}], 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Cx"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`Cx, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], "3"]}]], FontFamily -> 
                    Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{166., {69.43097826086957, 73.56902173913043}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{166., {69.43097826086957, 73.56902173913043}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"action", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`Iren -> 
             Rational[
               1, 4] (1 - CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
              CCLP`Bulk`Hopf2`Euclidean`G5^(-1) 
              Pi (CCLP`Bulk`Hopf2`Euclidean`m - 
               CCLP`Bulk`Hopf2`Euclidean`g^2 (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf2`Euclidean`rp^2)^2 - 
               CCLP`Bulk`Hopf2`Euclidean`q^2 CCLP`Bulk`Hopf2`Euclidean`rp^2/(
               CCLP`Bulk`Hopf2`Euclidean`a^2 
                CCLP`Bulk`Hopf2`Euclidean`q + (CCLP`Bulk`Hopf2`Euclidean`a^2 + 
                 CCLP`Bulk`Hopf2`Euclidean`rp^2)^2)) 
              CCLP`Bulk`Hopf2`Euclidean`\[Beta], 
             CCLP`Bulk`Hopf2`Euclidean`Ibulk -> 
             Rational[-1, 32] 
              CCLP`Bulk`Hopf2`Euclidean`g^(-2) (-1 + 
                CCLP`Bulk`Hopf2`Euclidean`a^2 
                 CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
              CCLP`Bulk`Hopf2`Euclidean`G5^(-1) 
              Pi (CCLP`Bulk`Hopf2`Euclidean`a^4 + 
                CCLP`Bulk`Hopf2`Euclidean`rp^4 + 
                CCLP`Bulk`Hopf2`Euclidean`a^2 (CCLP`Bulk`Hopf2`Euclidean`q + 
                  2 CCLP`Bulk`Hopf2`Euclidean`rp^2))^(-1) (
               5 CCLP`Bulk`Hopf2`Euclidean`a^8 CCLP`Bulk`Hopf2`Euclidean`g^4 - 
               3 CCLP`Bulk`Hopf2`Euclidean`rp^4 + 
               8 CCLP`Bulk`Hopf2`Euclidean`g^2 
                CCLP`Bulk`Hopf2`Euclidean`rp^2 (
                 CCLP`Bulk`Hopf2`Euclidean`q^2 + (-
                    CCLP`Bulk`Hopf2`Euclidean`m + 
                   CCLP`Bulk`Hopf2`Euclidean`r0^2) 
                  CCLP`Bulk`Hopf2`Euclidean`rp^2) + 
               CCLP`Bulk`Hopf2`Euclidean`g^4 ((-8) 
                  CCLP`Bulk`Hopf2`Euclidean`r0^4 
                  CCLP`Bulk`Hopf2`Euclidean`rp^4 + 
                 8 CCLP`Bulk`Hopf2`Euclidean`rp^8) + 
               CCLP`Bulk`Hopf2`Euclidean`a^6 
                CCLP`Bulk`Hopf2`Euclidean`g^2 (6 + 
                 CCLP`Bulk`Hopf2`Euclidean`g^2 (5 CCLP`Bulk`Hopf2`Euclidean`q - 
                   8 CCLP`Bulk`Hopf2`Euclidean`r0^2 + 
                   26 CCLP`Bulk`Hopf2`Euclidean`rp^2)) + 
               CCLP`Bulk`Hopf2`Euclidean`a^4 (-3 + 
                 CCLP`Bulk`Hopf2`Euclidean`g^2 ((-8) 
                    CCLP`Bulk`Hopf2`Euclidean`m + 
                   6 CCLP`Bulk`Hopf2`Euclidean`q + 
                   8 CCLP`Bulk`Hopf2`Euclidean`r0^2 + 
                   12 CCLP`Bulk`Hopf2`Euclidean`rp^2) + 
                 CCLP`Bulk`Hopf2`Euclidean`g^4 ((-8) 
                    CCLP`Bulk`Hopf2`Euclidean`q 
                    CCLP`Bulk`Hopf2`Euclidean`r0^2 - 8 
                   CCLP`Bulk`Hopf2`Euclidean`r0^4 + 
                   16 CCLP`Bulk`Hopf2`Euclidean`q 
                    CCLP`Bulk`Hopf2`Euclidean`rp^2 - 16 
                   CCLP`Bulk`Hopf2`Euclidean`r0^2 
                   CCLP`Bulk`Hopf2`Euclidean`rp^2 + 
                   45 CCLP`Bulk`Hopf2`Euclidean`rp^4)) - 
               CCLP`Bulk`Hopf2`Euclidean`a^2 (
                2 CCLP`Bulk`Hopf2`Euclidean`rp^2 (3 + 
                  CCLP`Bulk`Hopf2`Euclidean`g^2 (
                    8 CCLP`Bulk`Hopf2`Euclidean`m - 8 
                    CCLP`Bulk`Hopf2`Euclidean`r0^2 - 3 
                    CCLP`Bulk`Hopf2`Euclidean`rp^2) + 
                  4 CCLP`Bulk`Hopf2`Euclidean`g^4 (
                    2 CCLP`Bulk`Hopf2`Euclidean`r0^4 + 
                    CCLP`Bulk`Hopf2`Euclidean`r0^2 
                    CCLP`Bulk`Hopf2`Euclidean`rp^2 - 4 
                    CCLP`Bulk`Hopf2`Euclidean`rp^4)) + 
                CCLP`Bulk`Hopf2`Euclidean`q (3 + 
                  8 CCLP`Bulk`Hopf2`Euclidean`g^2 (
                    CCLP`Bulk`Hopf2`Euclidean`m - 
                    CCLP`Bulk`Hopf2`Euclidean`r0^2) + 
                  8 CCLP`Bulk`Hopf2`Euclidean`g^4 (
                    CCLP`Bulk`Hopf2`Euclidean`r0^4 - 
                    CCLP`Bulk`Hopf2`Euclidean`rp^4)))) 
              CCLP`Bulk`Hopf2`Euclidean`\[Beta], 
             CCLP`Bulk`Hopf2`Euclidean`Ibdy -> 
             Rational[1, 4] CCLP`Bulk`Hopf2`Euclidean`G5^(-1) 
              Pi ((-36) CCLP`Bulk`Hopf2`Euclidean`CR2 
                CCLP`Bulk`Hopf2`Euclidean`g - (-1 + 
                 CCLP`Bulk`Hopf2`Euclidean`a^2 
                  CCLP`Bulk`Hopf2`Euclidean`g^2)^(-2) 
               CCLP`Bulk`Hopf2`Euclidean`r0^2 (-1 + 
                CCLP`Bulk`Hopf2`Euclidean`a^2 CCLP`Bulk`Hopf2`Euclidean`g^2 + 
                CCLP`Bulk`Hopf2`Euclidean`g^2 CCLP`Bulk`Hopf2`Euclidean`r0^2))
                CCLP`Bulk`Hopf2`Euclidean`\[Beta]}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 3, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 3], "Path" -> {}, 
           "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Iren", "\[Rule]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False], 
                    "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"]}], "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], ")"}], "2"]}]]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Ibulk", "\[Rule]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"5", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "8"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "4"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "2"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False]}],
                     "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "4"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "8"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "6"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"6", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"5", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{"26", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False]}],
                     "+", 
                    RowBox[{"6", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False]}],
                     "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{"16", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"16", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{"45", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "4"]}]}], ")"}]}]}], ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False]}],
                     "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "4"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "4"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> False], 
                    "-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}], ")"}]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "4"], "-", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "4"]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{"32", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> False], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "4"], "+", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "4"], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"q"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`q, Editable -> False], 
                    "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"rp"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`rp, Editable -> False], 
                    "2"]}]}], ")"}]}]}], ")"}]}]]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}, {
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Ibdy", "\[Rule]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "36"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"CR2"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`CR2, Editable -> False],
                     " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False]}],
                     "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}]}], ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], ")"}], "2"]]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"\[Beta]"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`\[Beta], Editable -> 
                    False]}], 
                    RowBox[{"4", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            
            ImageSizeCache->{
             1094., {58.930978260869566`, 63.069021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           
           ImageSizeCache->{
            1094., {58.930978260869566`, 63.069021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"rupper", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`rupper -> (1 + 
               Rational[-1, 8] 
                CCLP`Bulk`Hopf2`Euclidean`g^(-2) (
                 CCLP`Bulk`Hopf2`Euclidean`a^2 - 2 
                 CCLP`Bulk`Hopf2`Euclidean`m) 
                CCLP`Bulk`Hopf2`Euclidean`r0^(-4) + 
               Rational[-1, 4] 
                CCLP`Bulk`Hopf2`Euclidean`g^(-2) (1 + 
                 CCLP`Bulk`Hopf2`Euclidean`a^2 CCLP`Bulk`Hopf2`Euclidean`g^2) 
                CCLP`Bulk`Hopf2`Euclidean`r0^(-2)) 
              CCLP`Bulk`Hopf2`Euclidean`r0}, "AllowEmbedding" -> True, 
           "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"rupper", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], "-", 
                    RowBox[{"2", " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"m"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`m, Editable -> 
                    False]}]}], 
                    RowBox[{"8", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "4"]}]], "-", 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"a"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`a, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"]}]}], 
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> False], 
                    "2"]}]]}], ")"}], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"r0"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`r0, Editable -> 
                    False]}]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{173., {18.430978260869566`, 22.569021739130434`}},
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{173., {18.430978260869566`, 22.569021739130434`}}],
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{
       InterpretationBox[
        StyleBox["CR2",
         ShowAutoStyles->False,
         AutoSpacing->False],
        CCLP`Bulk`Hopf2`Euclidean`CR2,
        Editable->False], "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`CR2 -> 
             Rational[1, 96] CCLP`Bulk`Hopf2`Euclidean`g^(-3)}, 
           "AllowEmbedding" -> True, "InitialShape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"CR2"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`CR2, Editable -> False],
                     "\[Rule]", 
                    FractionBox["1", 
                    RowBox[{"96", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "3"]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{67., {17.430978260869566`, 21.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{67., {17.430978260869566`, 21.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]},
     {
      RowBox[{"McSkenderis", "\[Rule]", 
       TagBox[
        TagBox[
         DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
          "InitialData" -> {
            CCLP`Bulk`Hopf2`Euclidean`Mc -> 
             Rational[3, 32] CCLP`Bulk`Hopf2`Euclidean`g^(-2) 
              CCLP`Bulk`Hopf2`Euclidean`G5^(-1) Pi}, "AllowEmbedding" -> True,
            "InitialShape" -> TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "InitialType" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> <||>, 
           "RowTarget" -> 10000, "ColumnTarget" -> 10, "Shape" -> 
           TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`UnknownShape[False]], 1, 
             DirectedInfinity[1], {}], "Type" -> 
           TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
           "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
           "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
           "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
           1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
              Style[
               Grid[{{
                  Item[
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"Mc", "\[Rule]", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], 
                    RowBox[{"32", " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"g"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`g, Editable -> False], 
                    "2"], " ", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"G5"}], AutoSpacing -> False, ShowAutoStyles -> 
                    False], CCLP`Bulk`Hopf2`Euclidean`G5, Editable -> 
                    False]}]]}], FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                   ItemSize -> {Full, Automatic}]}}, 
                BaseStyle -> {
                 ContextMenu -> 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                  "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
                Spacings -> {0, 0}, Alignment -> Left, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                  Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
               NumberMarks -> False, ShowAutoStyles -> False]], 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
           Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
               Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
               
               Module[{
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                 TypeSystem`NestedGrid`PackagePrivate`datasetData[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                   TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                  Not[
                   FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
               TypeSystem`SparseGrid[
                TypeSystem`H["(data no longer present)"]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
            TrackedSymbols :> {
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
           DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`SubViewPathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
           Framed[
            Dynamic[
             Replace[
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                 Blank[]] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                  Blank[]], 
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                  Blank[]]] :> (
                Increment[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                 TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                 TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path$, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
            FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
            Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
          DynamicWrapperBox[
           DynamicBox[ToBoxes[
             Dataset`DatasetContent[
             2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
              "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
              "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
              "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
              "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
              "TopBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
              "BottomBar" -> 
              Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
              "OutputID" -> Hold[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
             StandardForm],
            ImageSizeCache->{67., {17.430978260869566`, 21.569021739130434`}},
            
            
            TrackedSymbols:>{
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
           MouseAnnotation[],
           ImageSizeCache->{67., {17.430978260869566`, 21.569021739130434`}}],
          
          BaseStyle->{LineBreakWithin -> False},
          DynamicModuleValues:>{},
          
          Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
           CreateUUID[]),
          
          UnsavedVariables:>{
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Dataset`InterpretDataset[1],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{3.868961346832953*^9},
 CellLabel->
  "Out[26]//TableForm=",ExpressionUUID->"250f08aa-9f62-40aa-aab6-\
9f33fae709fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SaveSolution", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveExample", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8688115157575903`*^9, 3.868811540592436*^9}, {
  3.8688864563406963`*^9, 3.868886474658216*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"17626b89-e8aa-44ec-a027-8c435a7a3d1b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Saved \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"$olution\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro Semibold"], 
   "\[InvisibleSpace]", "\<\" under the file name \"\>", "\[InvisibleSpace]", 
   
   StyleBox["\<\"\\!\\(\\*FormBox[\\\"\\\\\\\"/home/vasko/.Mathematica/\
Applications/SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/thermo2/2022-08-08_17-\
29-49.m\\\\\\\"\\\", TraditionalForm]\\)\"\>",
    StripOnInput->False,
    FontColor->RGBColor[0.5, 0, 0.5]]}],
  SequenceForm["Saved ", 
   Style["$olution", FontFamily -> "Source Code Pro Semibold"], 
   " under the file name ", 
   Style["\!\(\*FormBox[\"\\\"/home/vasko/.Mathematica/Applications/\
SolutionsX/Data/CCLP/Bulk/Hopf2/Euclidean/thermo2/2022-08-08_17-29-49.m\\\"\",\
 TraditionalForm]\)", FontColor -> RGBColor[0.5, 0, 0.5]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.86896138936559*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"73916f60-e449-496e-97e8-a5347873c3fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1202.086956521739, 595.4086956521738},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>0.75 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4914610d-94ef-49d0-8e3a-d042051777ca"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 226, 4, 34, "Input",ExpressionUUID->"819ffcf6-258e-4a18-92f5-2ea6d8ee34b1",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[831, 30, 263, 5, 18, "Print",ExpressionUUID->"7fbb9249-c919-4889-a5f9-47d38b267b45"],
Cell[1097, 37, 536, 13, 18, "Print",ExpressionUUID->"df1cfcb1-5645-4381-aef0-13352375fe97"],
Cell[1636, 52, 284, 5, 18, "Print",ExpressionUUID->"32a34c26-aa1a-4597-8f64-3a44a85fc98a"],
Cell[1923, 59, 244, 4, 18, "Print",ExpressionUUID->"c8a5e57e-222b-49ec-af21-696155b99f9c"],
Cell[2170, 65, 225, 4, 18, "Print",ExpressionUUID->"c3725e45-b874-43a9-8961-f8382c73abdb"],
Cell[2398, 71, 263, 5, 18, "Print",ExpressionUUID->"250fce95-73ef-471a-871d-1d12b602a786"],
Cell[2664, 78, 540, 13, 18, "Print",ExpressionUUID->"ba43cf48-264b-42a9-9917-046082314a21"],
Cell[3207, 93, 285, 5, 18, "Print",ExpressionUUID->"81b651f5-f36a-4b7e-a7f1-4a2efb8cfcfc"],
Cell[3495, 100, 264, 5, 18, "Print",ExpressionUUID->"39b7e309-d415-4c35-ae26-e0a925c95258"],
Cell[3762, 107, 536, 13, 18, "Print",ExpressionUUID->"3f1f2e6d-2afe-4c7c-a628-1d21a34b7b6b"],
Cell[4301, 122, 333, 6, 18, "Print",ExpressionUUID->"d9f97885-4de3-4e61-baf3-78061f12bcf1"],
Cell[4637, 130, 508, 12, 18, "Print",ExpressionUUID->"4a0bc4b4-95fc-4fd2-bc10-4bb95399d2a8"],
Cell[5148, 144, 592, 13, 18, "Print",ExpressionUUID->"ff27d3e2-181f-434a-90d4-85b61b99e64c"],
Cell[5743, 159, 691, 13, 18, "Print",ExpressionUUID->"f221a208-7414-4f54-9a5f-f4c121523d99"],
Cell[6437, 174, 649, 13, 18, "Print",ExpressionUUID->"e640a9c2-5024-45d9-a855-7b8e1b83e032"],
Cell[7089, 189, 669, 13, 18, "Print",ExpressionUUID->"c8c8b551-d8d3-4d77-937a-ae3ef9a33294"],
Cell[7761, 204, 266, 5, 18, "Print",ExpressionUUID->"508d3100-455a-4208-a149-99377fc653aa"],
Cell[8030, 211, 533, 12, 18, "Print",ExpressionUUID->"48188bc7-53e4-45ba-843f-b39a708ea9b0"],
Cell[8566, 225, 313, 5, 18, "Print",ExpressionUUID->"f195a933-7587-40d6-92e4-0d9e3eb848be"],
Cell[8882, 232, 632, 14, 18, "Print",ExpressionUUID->"887b0c48-eb5e-4c91-8771-ea0739394899"],
Cell[9517, 248, 624, 13, 18, "Print",ExpressionUUID->"ba850d7b-b636-470c-a4a6-059df59d3d50"],
Cell[10144, 263, 671, 13, 18, "Print",ExpressionUUID->"28748f30-8a78-4e18-ab20-d8e2028e6970"],
Cell[10818, 278, 584, 13, 18, "Print",ExpressionUUID->"da6862e0-62b2-4c2e-a61f-15b5f0f30ecf"],
Cell[11405, 293, 264, 5, 18, "Print",ExpressionUUID->"317b20c2-4080-4f28-82bc-106d426cb1d6"],
Cell[11672, 300, 538, 13, 18, "Print",ExpressionUUID->"e5a78ae6-02c9-425d-a78b-19d7495789c2"],
Cell[12213, 315, 303, 5, 18, "Print",ExpressionUUID->"784f6521-b88d-4cc3-b9da-e4224637641d"],
Cell[12519, 322, 264, 5, 18, "Print",ExpressionUUID->"5c7231b4-1967-427f-9a0d-87c9637a0ff7"],
Cell[12786, 329, 556, 13, 18, "Print",ExpressionUUID->"81e4423e-61f7-4233-81e3-f4c1b355b49b"],
Cell[13345, 344, 291, 5, 18, "Print",ExpressionUUID->"66fb86de-2fd5-4ce7-bbc6-91294925f07c"],
Cell[13639, 351, 266, 5, 18, "Print",ExpressionUUID->"f5bc8838-5201-4661-aa79-8fec863e05f6"],
Cell[13908, 358, 535, 12, 18, "Print",ExpressionUUID->"6fe98462-0659-45f5-972d-bfc63e7f825c"],
Cell[14446, 372, 274, 5, 18, "Print",ExpressionUUID->"68a64101-e270-4c9c-83a0-7e0e967cf454"],
Cell[14723, 379, 594, 14, 18, "Print",ExpressionUUID->"fbb0d6fe-7db3-4073-85a2-79f40228f685"],
Cell[15320, 395, 671, 13, 18, "Print",ExpressionUUID->"90d5993a-9324-4271-a012-40bc6ffe5abb"],
Cell[15994, 410, 266, 5, 18, "Print",ExpressionUUID->"43af9832-f708-4cc4-bb2d-1a2d92587444"],
Cell[16263, 417, 537, 12, 18, "Print",ExpressionUUID->"ff75302e-66bd-4c8c-abb3-e36829814048"],
Cell[16803, 431, 334, 6, 18, "Print",ExpressionUUID->"bba7f714-c41f-4af6-8669-72ef54f367eb"],
Cell[17140, 439, 263, 5, 18, "Print",ExpressionUUID->"cfa4f9c0-1463-46bd-ad23-9a43424adce3"],
Cell[17406, 446, 537, 12, 18, "Print",ExpressionUUID->"3d372b11-793c-48bb-80fa-09a5fee2b32c"],
Cell[17946, 460, 301, 5, 18, "Print",ExpressionUUID->"68064811-953c-4352-b74c-93f8bb734fca"],
Cell[18250, 467, 311, 5, 18, "Print",ExpressionUUID->"4d5cfd1c-1738-4d43-8aa3-cd34fe802e01"],
Cell[18564, 474, 584, 13, 18, "Print",ExpressionUUID->"278fcc78-7178-4551-8d9c-d63ac455e175"],
Cell[19151, 489, 266, 5, 18, "Print",ExpressionUUID->"8d29ae34-f7d8-4099-8d4e-c690c5044ccc"],
Cell[19420, 496, 542, 13, 18, "Print",ExpressionUUID->"dc493ba3-393a-4da4-81bf-46a9e7b6ab84"],
Cell[19965, 511, 309, 5, 18, "Print",ExpressionUUID->"6b105ce4-3896-44b6-9ef7-224e7d85edd8"],
Cell[20277, 518, 264, 5, 18, "Print",ExpressionUUID->"a9ba473f-7661-4997-a6c5-342955182b7c"],
Cell[20544, 525, 558, 13, 18, "Print",ExpressionUUID->"9fdee4bf-fc04-4ec4-9fc2-af7f934d5e17"],
Cell[21105, 540, 275, 5, 18, "Print",ExpressionUUID->"a784ebf9-0586-42cc-bf1a-3590ddd26aa5"],
Cell[21383, 547, 264, 5, 18, "Print",ExpressionUUID->"6465cfc6-1715-4e43-9a64-043eac995b04"],
Cell[21650, 554, 421, 7, 32, "Print",ExpressionUUID->"d374d364-3890-4fbd-b2a9-154b7b68e9de"],
Cell[22074, 563, 264, 5, 18, "Print",ExpressionUUID->"b596cfaa-5f10-4a95-8f86-7151b1be5347"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22387, 574, 194, 3, 51, "Section",ExpressionUUID->"3cf07c24-3460-4c60-a5fa-4080c6d27e86"],
Cell[CellGroupData[{
Cell[22606, 581, 168, 3, 41, "Subsection",ExpressionUUID->"fd4cdb93-cc84-4345-817a-7cab2c70628e"],
Cell[CellGroupData[{
Cell[22799, 588, 352, 7, 22, "Input",ExpressionUUID->"a33df51f-52c0-485c-b495-cbd21f51cf0a"],
Cell[CellGroupData[{
Cell[23176, 599, 2673, 47, 18, "Print",ExpressionUUID->"b6dd8120-12e0-425f-9062-e18d42d529a7"],
Cell[25852, 648, 870, 17, 18, "Print",ExpressionUUID->"38c24477-68bd-4a50-8c1a-92610c9f8a30"],
Cell[26725, 667, 1411, 29, 18, "Print",ExpressionUUID->"1e1c936d-5197-42e3-b383-0e5c7888ae14"],
Cell[28139, 698, 2395, 44, 18, "Print",ExpressionUUID->"445316c9-3b10-4f17-95ee-5bc6ccfe426f"],
Cell[30537, 744, 1539, 32, 18, "Print",ExpressionUUID->"bb0a75e4-8665-4638-b8d2-5ac68a387807"],
Cell[32079, 778, 2236, 43, 18, "Print",ExpressionUUID->"552dad6d-0509-4ce7-ab12-df558942821e"],
Cell[34318, 823, 1065, 22, 18, "Print",ExpressionUUID->"b81d8abf-ad10-413c-9880-64bf11d4db11"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35432, 851, 869, 18, 38, "Input",ExpressionUUID->"38bd738b-42c5-4508-bd8d-d879dbf27e63"],
Cell[36304, 871, 1499, 28, 18, "Print",ExpressionUUID->"67c42e8e-c082-4a5a-bd83-8a1d70e7d9d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37840, 904, 1828, 52, 90, "Input",ExpressionUUID->"e29c8a51-1fd2-4f55-95f1-9e4853d092bf"],
Cell[39671, 958, 5432, 172, 33, "Output",ExpressionUUID->"c49b2ea4-3180-4268-ba08-0326f662314c"],
Cell[45106, 1132, 2081, 71, 41, "Output",ExpressionUUID->"c8d90934-69e4-4629-ac5b-22e62a4e3680"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47224, 1208, 786, 19, 54, "Input",ExpressionUUID->"0ae22f62-0360-47ba-9523-dc6b6d7faac6"],
Cell[48013, 1229, 6257, 191, 33, "Output",ExpressionUUID->"aedbc337-5f7e-4e53-9a2b-0b44e98cb1ff"],
Cell[54273, 1422, 6391, 219, 45, "Output",ExpressionUUID->"e4495db1-9b78-4afd-a805-6789b8986520"]
}, Open  ]],
Cell[60679, 1644, 1506, 36, 118, "Input",ExpressionUUID->"d21b6725-b0dd-4a0d-9f86-1f357e750f50"],
Cell[CellGroupData[{
Cell[62210, 1684, 371, 8, 22, "Input",ExpressionUUID->"4b108c2a-047a-440f-b6ba-02959ddb4e87"],
Cell[62584, 1694, 6493, 215, 45, "Output",ExpressionUUID->"180c5128-1cf5-4882-9049-ee31eb780893"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69114, 1914, 571, 13, 38, "Input",ExpressionUUID->"4b1a0d4e-6b76-47ee-8b8e-91c5affdd7e4"],
Cell[69688, 1929, 2942, 94, 51, "Output",ExpressionUUID->"8957c101-ca78-4dcb-a7da-00bd6ecf3433"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72667, 2028, 565, 9, 54, "Input",ExpressionUUID->"acd77a30-36fa-411e-b653-f9bfc7cb419f"],
Cell[73235, 2039, 1049, 23, 18, "Print",ExpressionUUID->"15cd3429-2fa2-4323-afa8-81bf0a41d5cd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74333, 2068, 164, 3, 41, "Subsection",ExpressionUUID->"e91cc616-3edc-452d-b8af-00389d1d0eab"],
Cell[CellGroupData[{
Cell[74522, 2075, 378, 8, 22, "Input",ExpressionUUID->"79dbb8ab-de9a-4126-86c8-d79804949cfc"],
Cell[CellGroupData[{
Cell[74925, 2087, 2675, 47, 18, "Print",ExpressionUUID->"26fe8ced-a068-4938-a9fb-dd96d4557a24"],
Cell[77603, 2136, 998, 19, 18, "Print",ExpressionUUID->"6b36c72a-c3ab-4364-b476-2329d81adadf"],
Cell[78604, 2157, 1413, 29, 18, "Print",ExpressionUUID->"e9f71130-e47c-4fd2-9cb8-b65af9d8a68d"],
Cell[80020, 2188, 2078, 40, 18, "Print",ExpressionUUID->"9a5538a6-c1fc-4aa7-a869-2c752530bf55"],
Cell[82101, 2230, 1539, 32, 18, "Print",ExpressionUUID->"89a754cc-e643-4b5b-8c79-75b4c9045937"],
Cell[83643, 2264, 2333, 45, 18, "Print",ExpressionUUID->"b64d43c4-eadc-4dd2-a036-0da0b375839d"],
Cell[85979, 2311, 1060, 22, 18, "Print",ExpressionUUID->"20be899c-9313-4434-830d-2d0310a3c2d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87088, 2339, 366, 7, 22, "Input",ExpressionUUID->"51535f3a-336e-4c45-9809-cd82c6a1ec36"],
Cell[87457, 2348, 1534, 28, 18, "Print",ExpressionUUID->"5a7aacc3-b6ac-49bd-a030-5987f0250f0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89028, 2381, 1196, 31, 53, "Input",ExpressionUUID->"c77d68f9-562c-4f00-9468-467db6b61c94"],
Cell[90227, 2414, 2158, 74, 43, "Output",ExpressionUUID->"4956f56b-66ac-490d-8081-5e43369df87b"]
}, Open  ]],
Cell[92400, 2491, 2230, 56, 135, "Input",ExpressionUUID->"ca53c41a-a467-45df-b44f-d6b00bf28c6c"],
Cell[CellGroupData[{
Cell[94655, 2551, 1979, 50, 70, "Input",ExpressionUUID->"ddd57ba2-049e-4937-bf59-70ace8fe8e30"],
Cell[96637, 2603, 18899, 605, 96, "Output",ExpressionUUID->"16d5d88a-516b-4e9f-bb27-1b6db0d96565"],
Cell[115539, 3210, 17304, 516, 78, "Output",ExpressionUUID->"a74f4c68-e670-4007-9db2-a682c19697cd"],
Cell[132846, 3728, 2945, 95, 51, "Output",ExpressionUUID->"cba17641-75ab-4e39-a456-99a153293997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135828, 3828, 915, 22, 54, "Input",ExpressionUUID->"4b42aaa2-23b5-422a-8af0-693016578b8d"],
Cell[136746, 3852, 587, 19, 41, "Output",ExpressionUUID->"013ca5d7-2386-408a-9115-2f8f0c50bff8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137370, 3876, 461, 11, 22, "Input",ExpressionUUID->"b14ce6ad-992b-4c46-ab7e-a3d24868eedf"],
Cell[137834, 3889, 149, 2, 25, "Output",ExpressionUUID->"86fa9c99-018b-4129-a7c4-168c17c71f30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138020, 3896, 696, 17, 53, "Input",ExpressionUUID->"758c0f95-ecfd-4e9b-b882-1917b56ff6db"],
Cell[138719, 3915, 744, 24, 41, "Output",ExpressionUUID->"89a243eb-ce36-4cae-98d7-22850328717a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139500, 3944, 215, 3, 22, "Input",ExpressionUUID->"472b7354-4cfa-4661-9aff-3506486917c8"],
Cell[139718, 3949, 313084, 5659, 827, "Output",ExpressionUUID->"250f08aa-9f62-40aa-aab6-9f33fae709fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452839, 9613, 320, 5, 38, "Input",ExpressionUUID->"17626b89-e8aa-44ec-a027-8c435a7a3d1b"],
Cell[453162, 9620, 1040, 23, 18, "Print",ExpressionUUID->"73916f60-e449-496e-97e8-a5347873c3fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

